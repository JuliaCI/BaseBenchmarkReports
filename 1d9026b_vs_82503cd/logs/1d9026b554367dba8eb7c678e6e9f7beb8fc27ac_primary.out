cset: moving following pidspec: 14318
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.311091388 seconds)
loading group "string"... done (took 0.476747568 seconds)
loading group "linalg"... done (took 7.727342073 seconds)
loading group "parallel"... done (took 0.171032781 seconds)
loading group "find"... done (took 1.17868825 seconds)
loading group "tuple"... done (took 2.107693098 seconds)
loading group "dates"... done (took 1.331230229 seconds)
loading group "micro"... done (took 0.245297732 seconds)
loading group "io"... done (took 0.672831009 seconds)
loading group "scalar"... done (took 41.011517964 seconds)
loading group "sparse"... done (took 12.678171807 seconds)
loading group "broadcast"... done (took 1.117371504 seconds)
loading group "union"... done (took 13.961972542 seconds)
loading group "simd"... done (took 4.781327441 seconds)
loading group "random"... done (took 9.605106611 seconds)
loading group "problem"... done (took 1.9770214 seconds)
loading group "array"... done (took 22.472834128 seconds)
loading group "misc"... done (took 1.43324239 seconds)
loading group "sort"... done (took 3.60549694 seconds)
loading group "collection"... done (took 19.404899474 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518452415 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144824898 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137710915 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.155935147 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.214666267 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15639487 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145131555 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11642504 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.981917153 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187364998 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155432065 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523755786 seconds)
done (took 5.183674505 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227448993 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09512403 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106740449 seconds)
  done (took 0.875018323 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078582956 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148574986 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094523134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079006765 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095582123 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.09696662 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.079824142 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092798079 seconds)
  done (took 1.362651675 seconds)
done (took 3.227240742 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.731999747 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.287181376 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20824458 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.499645504 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179845128 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215467103 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686235777 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337040492 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.264472067 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099742711 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.149727484 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.387885872 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136365967 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672931163 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09072976 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127514483 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.187033911 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.471545358 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085551011 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110004947 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117960841 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14309407 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129156947 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091636358 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184380223 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084764364 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.198083621 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107417676 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081433314 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287429855 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203124909 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695646628 seconds)
  done (took 10.963498577 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115526244 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136973458 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098049899 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139461029 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135936514 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100287585 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099457848 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081862097 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123986615 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178821901 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132006454 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141817796 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078920551 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099838639 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103669166 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246472858 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123530719 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120453307 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086408574 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105292048 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137346835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099202266 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110219916 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109837965 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166425921 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208695171 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113193769 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126487135 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097450977 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113240851 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143949972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146085289 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094597795 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081135894 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175141126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124562526 seconds)
  done (took 5.184176015 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192502288 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121736929 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173322733 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164814251 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144805332 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161197311 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117184143 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250517235 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113277442 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177449353 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144764208 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101575579 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0983982 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085726823 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096000784 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.6202152 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165402329 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136580225 seconds)
    (19/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130665106 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117602821 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090600925 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.104015214 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106001498 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081568164 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100336481 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109400708 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.326538078 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16402519 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09955565 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.171561099 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122751806 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10073236 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132746974 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199748218 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127550995 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119390868 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096963635 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095270895 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181024674 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089540788 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098015423 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107345464 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13626178 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136156053 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09897188 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096618252 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210533165 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080900169 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115201931 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095697304 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.954814788 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180579413 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092692666 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096139734 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332842931 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099002769 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098023414 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078097225 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.261899048 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13884804 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082784067 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096861306 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081602416 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126163526 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081396304 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.401934546 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081186473 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.742964463 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08513985 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107003646 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083437158 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097713363 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104473411 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089116853 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115804007 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080688965 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100390213 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080632556 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097940042 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098855363 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093623264 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102846488 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081521463 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165479467 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079880708 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093619997 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114713632 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113595748 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100236818 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095676198 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117751063 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099775414 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09889493 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120807211 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100879432 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108984372 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084318662 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14311148 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096963363 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.175750505 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081108414 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125421273 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099685284 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115721699 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110610536 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099690957 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087066777 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096820126 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078937921 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165858345 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081611428 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096906857 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099013313 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09537504 seconds)
  done (took 22.73341984 seconds)
done (took 39.552868651 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.342471392 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103863087 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104634357 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104907206 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102386836 seconds)
  done (took 1.507747148 seconds)
done (took 2.233598588 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28365815 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175052459 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096168436 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168518771 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094054704 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176772097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162738888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113879204 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18459941 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094757003 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166196062 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078264116 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095284269 seconds)
  done (took 2.63819518 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097164291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116963749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08361799 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11267228 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077882312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112236814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110851523 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103166379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111313778 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086827213 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094926808 seconds)
  done (took 1.829235349 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095566467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114854945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084099246 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111815105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077971343 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111843629 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093949567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117339382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111894375 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086571046 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094581309 seconds)
  done (took 1.817882498 seconds)
done (took 6.999976062 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095940909 seconds)
  done (took 0.810804975 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.017687914 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.981947053 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117110065 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.155415707 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324727462 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.184169271 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555847798 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12874397 seconds)
  done (took 15.39881998 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.149157112 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086160805 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102784543 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085595804 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104270919 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100363062 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083360643 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102646123 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088744687 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099613936 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100938609 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086717387 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10116036 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088165892 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102776802 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103565816 seconds)
  done (took 2.365346159 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12230221 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120038279 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107297706 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110644887 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.105131991 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089067984 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109051428 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106514523 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08745445 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104554166 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108457732 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091405748 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105904866 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096290012 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090928844 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109634256 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103917879 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090699866 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10792051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107407905 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092714243 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097700086 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104863049 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091630092 seconds)
  done (took 3.284486355 seconds)
done (took 22.578208022 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163023571 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110795922 seconds)
  done (took 0.998863668 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103516446 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121061248 seconds)
  done (took 0.951928397 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.108472236 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096033021 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136407355 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116242082 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081886184 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09682418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132717578 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097501841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081050701 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098651815 seconds)
  done (took 1.774899929 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088232878 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116269878 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.107265966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.104210907 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111199805 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102793175 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096843385 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104219676 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.118781882 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083443405 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107712773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11686491 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.106771444 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102737324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.11211018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105639463 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.093702259 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103675403 seconds)
  done (took 2.610793008 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080596297 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101819179 seconds)
  done (took 0.914565245 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086949079 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099287924 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086251522 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101966542 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098942365 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083161681 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099053537 seconds)
  done (took 1.384734824 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.480800023 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137373775 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257902105 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086792962 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122863873 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.308364476 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098448552 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103638868 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086450833 seconds)
  done (took 2.466270942 seconds)
done (took 11.833364237 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093916581 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119414582 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.118266761 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.487012968 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.122255873 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080899991 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161792893 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257689589 seconds)
done (took 2.179059779 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152039925 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328199961 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116895483 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067609219 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096661039 seconds)
  done (took 1.350625133 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080311208 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101397871 seconds)
  done (took 0.92082438 seconds)
done (took 3.163203997 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081752219 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098260858 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113644599 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096716686 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081881188 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.096730588 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096437101 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081898511 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098314955 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.081867794 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097348746 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08150665 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098136634 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081823224 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095065305 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07915539 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098179238 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079036032 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095473929 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079007993 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095480666 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081041609 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095059836 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079650396 seconds)
  done (took 2.935012076 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110571057 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098335327 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104704951 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087714605 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103573078 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103536538 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0876217 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098952043 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087947495 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100711711 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101318523 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085728111 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100654102 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102370967 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084278501 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103158077 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088212748 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099325336 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101201981 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0857544 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103959277 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081826993 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102415317 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103742576 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085951856 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101079343 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100106989 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082018931 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104274535 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086419226 seconds)
  done (took 3.63181131 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086798186 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095013053 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079418637 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103799143 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07911473 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102239517 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079630871 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096663288 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079997054 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095741628 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081990379 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095715777 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09603037 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08025322 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097730399 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082881277 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109719966 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07951767 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096791622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080716935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100230242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079360292 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099054549 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079633365 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095392236 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080028577 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097508291 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.095931386 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080272417 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097226884 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082384909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09915622 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079694943 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10303552 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083214994 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095855535 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083722193 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095519184 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080443726 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095133131 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079009903 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095070565 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079105408 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102164232 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099746029 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080433095 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096666908 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080345454 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096512281 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082949716 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095976214 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079714025 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097813948 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.08109292 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099786652 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0960688 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080160981 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096160696 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080202072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0967036 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079278059 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095678262 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082012618 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097886716 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095644357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102844333 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07951239 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096880751 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100037963 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081944534 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097344463 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093956729 seconds)
  done (took 7.24917079 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084247454 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107409535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082436325 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097824361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077578729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097436687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100800279 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080509819 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098037622 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098007418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096365949 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098286887 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080705584 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100900038 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080494214 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098294097 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090469638 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095121802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096972879 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082974967 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097249453 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083118138 seconds)
  done (took 2.774949404 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216835171 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106419104 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143546046 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123915446 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099132859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111283109 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10293608 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08908755 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103866121 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102426962 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085693929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105226758 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089884085 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102165979 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103355738 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086682826 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103508419 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103849641 seconds)
  done (took 2.731129231 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095467162 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100602905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12177328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082303605 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100203197 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085172297 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104696637 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115399484 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08520023 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099211832 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109947694 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085564658 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102633307 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083002386 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102403613 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083072588 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101958187 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099908272 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093436504 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105827327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106588077 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092868218 seconds)
  done (took 2.907056316 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098856308 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101578982 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12027866 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086072049 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099312586 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084439945 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106971208 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099515628 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092252926 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101107718 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082850668 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100885036 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.106804049 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082708495 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105519499 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083176641 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101511106 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083096531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101541144 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099319184 seconds)
  done (took 2.693973946 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122276147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101247143 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101418259 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107823231 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100829803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101783898 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.214265402 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100859499 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10149682 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110464272 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.1012008 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10172507 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10754372 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120853864 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103393903 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124728131 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108934901 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124151206 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101901124 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085250619 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126313316 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100896229 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123818699 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084694088 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101710145 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084294472 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100365736 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120055554 seconds)
  done (took 3.840058837 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083139653 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100349577 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079946343 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09779296 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080174196 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096812701 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080151394 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097500454 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082398094 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096590185 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083543419 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098818374 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082467827 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099103956 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082557264 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098360663 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085213496 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097745879 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081347822 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096786101 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083037692 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098913579 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099398095 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080540046 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097413772 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082191549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096695894 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080358266 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099548275 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080493099 seconds)
  done (took 3.457014039 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092850957 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107356477 seconds)
  done (took 0.962015632 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080462952 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115892647 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080706533 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103594828 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106886427 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083533092 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109279169 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088377119 seconds)
  done (took 1.529234272 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100799717 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118998949 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088971136 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118663894 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115172372 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099805831 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161297563 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10621496 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106929614 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08020597 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117664932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082636811 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105837009 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083593612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106275617 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089417481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101272659 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115515557 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090519534 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099499136 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085285706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111217815 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1027032 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080316244 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101955114 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093694177 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109751565 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103094185 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086328909 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110507558 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08979445 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094625218 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100966399 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088644929 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101140703 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096232473 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112936022 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103830159 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092116565 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106653139 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109435416 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098755788 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105881534 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08995818 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110703992 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087906215 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.108763923 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100322796 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081157225 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103974289 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.082898126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100701142 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078820944 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107754046 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088508129 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115357131 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.09949887 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085177487 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103283928 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087228032 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106838668 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102358529 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085104676 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100703593 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090802595 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104646992 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090758839 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099620556 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095299094 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085322465 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110335004 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106937939 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110006301 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105630685 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08978786 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102251988 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086963118 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106755173 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108905538 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09180384 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105095757 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104303548 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108775659 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100463924 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086554901 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114051612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082932429 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104392116 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098668253 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099695652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100549845 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084499627 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098474515 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109757784 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086790015 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101645453 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081703214 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108212676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077356137 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106098686 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089427239 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101337027 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110103276 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094300814 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111606612 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10893658 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094812461 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100921883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087045483 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099117633 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089242967 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103068081 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108698521 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077518449 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104257962 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086158521 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106300098 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.10797158 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081877504 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105919722 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091801133 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108224828 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082899006 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098556324 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104464142 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088758859 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109919337 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091627007 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099949506 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082724125 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099343587 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106164825 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088103147 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107314539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094829914 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104585542 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096177503 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085830182 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11176134 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092007283 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101306981 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0842198 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106188729 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102112705 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082911577 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107162299 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085912844 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099985061 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088270939 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103250263 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100249264 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092563558 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104071641 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082062679 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10571589 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109744418 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086734524 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106287906 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082331739 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107538926 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089684981 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09999295 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100401577 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082444359 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110867895 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086202813 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099599834 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081330885 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.113527514 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099384717 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087526404 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099880618 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087513261 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106004841 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085527176 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100816694 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085054727 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130959515 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11453209 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089790256 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107602378 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111237193 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089009343 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103347118 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088753703 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106831475 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106696728 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091630756 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107182099 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093728301 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103804213 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080927498 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10816203 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109742359 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083783004 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103453652 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083672679 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105572662 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109057489 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087300894 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106436068 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082579039 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101465323 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110328578 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086664557 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104852104 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083682926 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106744646 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084290557 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113702743 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106990082 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094125392 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105562108 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083381725 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110424478 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099937484 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090216328 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100978528 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082398207 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100891898 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.089181841 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100731096 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086651518 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095939777 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109393141 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09347774 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101241342 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083792486 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105554473 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110508818 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085915327 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104854976 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087757524 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107456044 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115188095 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083436748 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105174238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094235688 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.107055431 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078576058 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107388692 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100297714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083915785 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101262876 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081962765 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105904673 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099772228 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107141807 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095847062 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088075448 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100651215 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083800514 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101967588 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092253917 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106222046 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104250659 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094083887 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107990432 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089979485 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106574923 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105855498 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090385276 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108400948 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088722795 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107420819 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087900358 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100799605 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104123504 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084245985 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103246551 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086178395 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107301144 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08409034 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107684913 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086478724 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102386821 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104676577 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089806003 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10296405 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085359107 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101981881 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087671823 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102226142 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101854334 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087971736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10068445 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093470694 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106519304 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092917594 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103086422 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081526165 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108517857 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104472681 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094035343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107062955 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108133733 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085770125 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105709305 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087030696 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111629926 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082484164 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111317185 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108543415 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085717039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105185453 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085271443 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104295204 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084099919 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104611076 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108175032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084848464 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102621125 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089487678 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106628538 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084924 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103960687 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107925895 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085342615 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104896899 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079096951 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10205388 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084435538 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107207441 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092112284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107913745 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105346933 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085175832 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109523858 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084309658 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099288351 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116844141 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099885164 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108050814 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093199382 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102537291 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103546753 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095022162 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096859529 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082915593 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103962337 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082583412 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111040821 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1081189 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101248447 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102191169 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084798322 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099991872 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09030146 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101714099 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079774517 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104255981 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106140269 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086952383 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101105862 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089507796 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104981296 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090386152 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110483199 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102827986 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087438005 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108218182 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08212876 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101027298 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084432103 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105823408 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.090369529 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101405526 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100763344 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088551867 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104628299 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086209356 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103475855 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086179333 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110430064 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084834567 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106026304 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111385667 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080407123 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106547775 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085237283 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106221262 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083853439 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107359473 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10671916 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091369302 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110438038 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.089739073 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103303056 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103167056 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086165508 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107031621 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088581897 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107752862 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08345607 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108172445 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111627413 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086278208 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106169256 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084547134 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10334874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089764511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108018373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104374451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098972911 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105641735 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086432797 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110082835 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107418854 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088223116 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108738137 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086769747 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10987366 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08437286 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11286634 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103129819 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09234654 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104861446 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082968266 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104085471 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085938156 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10194852 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108436047 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091202235 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102425514 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084399268 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105260858 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087552209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112131196 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112265054 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08796706 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106702737 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083987497 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100395331 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090585853 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101090625 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086073847 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106327251 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109637434 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088642544 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103349096 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084944814 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110871901 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109500211 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089945488 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100623868 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090314791 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108115808 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087841849 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105826846 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103302029 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088077955 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109388422 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087100489 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103716742 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093792994 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107036094 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109146614 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086782401 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103694891 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086190834 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102065207 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090920532 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.1058546 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110180763 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08813714 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103779035 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094797216 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102660537 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085453948 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112997919 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103201865 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092332079 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103078786 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086323278 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109387476 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1095478 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083640176 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10246057 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083740896 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106001466 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084908252 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102011019 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094564943 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111269694 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106175867 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0847004 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102152595 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.083170815 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102103405 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084278175 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109172232 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105496022 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094797954 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10224581 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084233266 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101852671 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085410924 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108070248 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107418765 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083506188 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101866984 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084320883 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105980364 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092822521 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102543645 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089093672 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108416461 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106461041 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086322751 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113445104 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082935188 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107736683 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114317759 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08967093 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104221692 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090545099 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111677513 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090601403 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10215012 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108146386 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088796482 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103495246 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090726888 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105916613 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118451888 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08922704 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103183723 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084519805 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105926629 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08582544 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.11140444 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11042053 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09150777 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10809565 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087970908 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118652829 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106100905 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091850572 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105700258 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088273095 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103363548 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086441868 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102827447 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102113227 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087753288 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109712561 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091132419 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118052161 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103920037 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095865751 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112187969 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090557171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100626923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085037104 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104761208 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102037608 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090897566 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10204782 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084288757 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102350546 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084771266 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104963502 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092095575 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106915981 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109716286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085628851 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097709425 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087275996 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106268176 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086369098 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10058319 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089883908 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110431043 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110961514 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096298113 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103720666 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087921679 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105656392 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085674763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103532241 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110717077 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084385253 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106171539 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084514649 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104087242 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09132269 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107873459 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114886408 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088231802 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107159231 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098404438 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111581171 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102377447 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083504807 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109544013 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088048292 seconds)
  done (took 59.387158797 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150026057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090708606 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100298061 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081609776 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119006735 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104073683 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081374943 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104238991 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085386787 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106754031 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080391765 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101462132 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11360178 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128126053 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11809203 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090405743 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099804199 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085776083 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099925085 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084545974 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113700754 seconds)
  done (took 2.952856632 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107299368 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11910051 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115808065 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121677966 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092208015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117469003 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116124633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117408618 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102307044 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112924829 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1210205 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117925969 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092695188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111416765 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111967781 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095361813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120916715 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111124533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118011457 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115392431 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095602563 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116464309 seconds)
  done (took 3.262115612 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09488329 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106480632 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08971115 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099067288 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086013005 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09953241 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09437014 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102559503 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107705429 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084073994 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.102848207 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.083984084 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107718535 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08061349 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10370171 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083666474 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155703419 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108494399 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.107722189 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087049033 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.101736161 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087310096 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102170179 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084285159 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102650596 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096679803 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105767944 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.104898055 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086428157 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.102993174 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090236286 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102701066 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088135949 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104973044 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085013933 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103220745 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086238207 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109742176 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.10324955 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086768334 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104829532 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085797744 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108840049 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087805164 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.105265954 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083145715 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106285444 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085711607 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099876159 seconds)
  done (took 5.602921341 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.119312097 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157228433 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088241839 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.149199459 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123294536 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11806018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090382368 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127282531 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104497419 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.107159062 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105087655 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122233898 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108624492 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113340526 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094050655 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10813333 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091697294 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105480502 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114108286 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08562112 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.113596521 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112487576 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122820882 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.10213471 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112697091 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108284309 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085499206 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114518508 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119289632 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095514358 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116048473 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115307856 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122238214 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091526522 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104429545 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11115485 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106011981 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109900836 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111043804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085323549 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.110946992 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113702582 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093683794 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124701401 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108401746 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091787216 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109189277 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102731077 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101367693 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.111597299 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118646784 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121556628 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094678341 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109135791 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114413835 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1051519 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108627112 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107226567 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092860055 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119414754 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102757631 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094991945 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121898935 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111191829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097930136 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120924729 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109878549 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11239037 seconds)
  done (took 8.398971829 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117455716 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116244536 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127321985 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128507539 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096556785 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116989743 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.117119317 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11672021 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096563858 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123695516 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116076575 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162940814 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.092361852 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120965269 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117669641 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116774021 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.097957257 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116542415 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116946473 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097233795 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11740644 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127749027 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117379834 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126316707 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125170805 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091838948 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11596104 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116962323 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108309342 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116279775 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126565079 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115733127 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097204466 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128856714 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126379325 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.116688877 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089338019 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116554751 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116080841 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116799869 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092439631 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127881042 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116230017 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091745822 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116888689 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116495794 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127228874 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125592685 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.102257482 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123512428 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117265004 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127727732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09866977 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117832567 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128197615 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132860749 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128165889 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127560686 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097456246 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126477316 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126753208 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132345056 seconds)
  done (took 8.049189536 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118496591 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121339937 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127395907 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101713687 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086018741 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114048275 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085417174 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104179304 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119279388 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100650336 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122112502 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113808163 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117122114 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102580589 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113753684 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117539903 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112989288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094598904 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121162323 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113151962 seconds)
  done (took 3.034040787 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095152921 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.126204553 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088127613 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113743502 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109841134 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093110575 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108469732 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109854878 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088187398 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110169454 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119545295 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099433109 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106852778 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113122763 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098881336 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114213993 seconds)
  done (took 2.522784232 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099052144 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128105104 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126065649 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086257368 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106885822 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103019887 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089571324 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102244226 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083303909 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123075524 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.107515042 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092614438 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109014424 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085311462 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102976823 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09318639 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102261173 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104067021 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089976652 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127386628 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.117930958 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086482714 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110458754 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088937804 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106770508 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112048483 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087284976 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104635292 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085592293 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110314073 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106249943 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095756183 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103451183 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085519904 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105272109 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10432936 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089903848 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109483403 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.092582909 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109474195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104345428 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087600569 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108346762 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089587317 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102784692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.09071388 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103356484 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11222979 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085367798 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106336055 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08892748 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109716455 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107868122 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099339622 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11165503 seconds)
  done (took 6.412769269 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102963938 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110916995 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082455206 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105056006 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090066942 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109279802 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110112445 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090267914 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107674104 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085135752 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108814257 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110661876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089096672 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110420119 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090199412 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111035277 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082233587 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10852673 seconds)
  done (took 2.639002116 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092789928 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10678599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095180348 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107995414 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08680249 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109842764 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102547862 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08645001 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104787625 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088452369 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106514424 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089936853 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105709693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089351677 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107661191 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106142886 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089457905 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104865025 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087576871 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102692653 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089844929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105465512 seconds)
  done (took 3.003693282 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123042575 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126747334 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095720551 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237462639 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106502992 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133928963 seconds)
  done (took 1.65963639 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111993355 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143802054 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108305434 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092036399 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119938148 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111765068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093440625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111698031 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12369473 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124563988 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094509088 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12367608 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124157226 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123175074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099435815 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120480461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11270505 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093411294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108569772 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132550556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112456061 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104065127 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113009169 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112761704 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093632268 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122908544 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123862505 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125997536 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113198937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103987508 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120378472 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111722727 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123555648 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105264397 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110999164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124342804 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092873507 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131647831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120029281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123645037 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110757668 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100633174 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123228237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119831089 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124070389 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093962684 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119786484 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113066783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093013051 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138459164 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120024039 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122806095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12023405 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12409182 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103653268 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137644338 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12559679 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123356619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12014644 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126162972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123785036 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101000176 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123386083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125147408 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119384778 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122675007 seconds)
  done (took 8.481269307 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126957911 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109527619 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112974695 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12521532 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10350938 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113347871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113328616 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092761225 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112709661 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108271331 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157223095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093273764 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124196249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124901951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112760831 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093658624 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112986228 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124136072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088848847 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159643471 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092849896 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124439735 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123867092 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123924725 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125451786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100935199 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113789099 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112520532 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093712561 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113060561 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11966003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094221022 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12461823 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108841169 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124142741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093690079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113155179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12005718 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093141402 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121637356 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124275366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133075263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112620722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093167014 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12567655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113873333 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093358299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109382276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113579573 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089354708 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125361407 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126235838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126777211 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124577067 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093491813 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114823079 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113394195 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09300495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11410855 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120873254 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123885024 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093974274 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138877237 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113601363 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114007703 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123168426 seconds)
  done (took 8.360588988 seconds)
done (took 159.216837767 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103853868 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140940015 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100721783 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169470683 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10856552 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121816583 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139292766 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101763506 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107780659 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088107873 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108796864 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.109857837 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152000806 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107498189 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089436888 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109089206 seconds)
  done (took 2.701813388 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202133105 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.271559237 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104898647 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107498947 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.11234702 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088354491 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10664981 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096178259 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109202031 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087402797 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108082357 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088506823 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1082798 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088508521 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109372635 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107620403 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087609825 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107565402 seconds)
  done (took 2.942160366 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115908876 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1525325 seconds)
  done (took 1.114037433 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122019986 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185235181 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301236067 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155588246 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121762085 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129979852 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157206854 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132993867 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.207016342 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125921661 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126734234 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119482281 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.124163539 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11825245 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116239808 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099222905 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145397536 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115271766 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096538658 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.118646786 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140311675 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087766402 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118017386 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115082547 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189766277 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101854245 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108045876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086145482 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12003126 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116313203 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094382435 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.128778484 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122439712 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.168308065 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125840422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.161840336 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121446699 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112835213 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097109285 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113286415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121068098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101215819 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127234824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120344417 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089349786 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120997332 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087030555 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107976462 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115685548 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101436748 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116203799 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113760582 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.161737099 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119511102 seconds)
  done (took 7.702151719 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.826763639 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155198172 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113742744 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.897179943 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140254614 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125526806 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.793151294 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136747175 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239887424 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.798915802 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131841839 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100753984 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236613052 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262652428 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.023247439 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319350874 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.685088947 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102761659 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140344754 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156190951 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11902646 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137739452 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110261532 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454120734 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096312803 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112480664 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096194038 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121715813 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164959941 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11341524 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093403432 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204168462 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253329238 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208289402 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115916815 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091831054 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111480005 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175109568 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270855372 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219019082 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179750405 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087303522 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111031343 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120329218 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109663403 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109275994 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168637045 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.198925859 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177398205 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113687885 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100717455 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120920189 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120007026 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.170576384 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122305069 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.324644456 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32174786 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09102256 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120168686 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126409075 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249092217 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125074424 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232828679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137458773 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196277124 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111932817 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808945044 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174815379 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111038662 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097591805 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119268931 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115737136 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099352166 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171134977 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.410545685 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124760343 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114331655 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090353643 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233193091 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090597725 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113013076 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167222519 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116572481 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118416473 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103070974 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123077588 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17450511 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.261203944 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101125591 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120398292 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115268649 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102016082 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116835654 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.218079589 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22642942 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.187581794 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.215826605 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120590502 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170563407 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172067858 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120972109 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177307468 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118551915 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125509281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100461522 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224440117 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149011303 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125910933 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116404105 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097398429 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151464643 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11642554 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118790901 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.176802545 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483919379 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173307312 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088066524 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116290457 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119865256 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166655544 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116769872 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248915415 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121825282 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172986781 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11909409 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108362703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099034759 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18962725 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103207332 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120736866 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121460045 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097696238 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261325384 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200584029 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124552121 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243230388 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18404171 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118853032 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177295221 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11849719 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172473839 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121100434 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100911183 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116632929 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802401356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102427282 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119833407 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115451736 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190982301 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090721487 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125875755 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091209125 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109409909 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816560807 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093701107 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123779012 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12544976 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097900768 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119128709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117578552 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094879618 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189295155 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237514343 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099262426 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118717761 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110842497 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.166415294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094736963 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113146549 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111791579 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.092619481 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12041987 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094510972 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126076294 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174382737 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.189480572 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226650221 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.538647373 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112779473 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.090069351 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235124669 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114252659 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294930302 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119499955 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.211394911 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.191516722 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101592453 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319887859 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192373089 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190951007 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094479573 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199981031 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088264293 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118997383 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169850488 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112689065 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096976524 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1890304 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103565387 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123492327 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96574585 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112300038 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234782274 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088189605 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197245306 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095393432 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122993204 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.301201678 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111758981 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109032288 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.190226315 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094104326 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112998501 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.85683382 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.113840568 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120599011 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099107995 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229228512 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.167069558 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120665222 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119833769 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09981948 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188865337 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21501252 seconds)
  done (took 44.676788411 seconds)
done (took 59.983252891 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315723427 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.234083354 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2626006 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17447325 seconds)
  done (took 1.93798447 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179751414 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151186759 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.146889871 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087398557 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15559403 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085754742 seconds)
  done (took 1.68425854 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.372340263 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278141166 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244749626 seconds)
  done (took 1.775298091 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250878681 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273451049 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331145429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.417893757 seconds)
  done (took 2.247459077 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.23858444 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.142975385 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128483611 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.126625313 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221703972 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.264119701 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.160884639 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19093502 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.139726953 seconds)
  done (took 2.534075092 seconds)
done (took 11.060891279 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.259118055 seconds)
    (2/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.166343471 seconds)
    (3/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.255498173 seconds)
    (4/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.198935505 seconds)
    (5/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.129117206 seconds)
    (6/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.119938253 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.202827388 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.230711722 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107781948 seconds)
    (10/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.23272669 seconds)
    (11/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.127377484 seconds)
    (12/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096975033 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127441637 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.196032288 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118885468 seconds)
    (16/286) benchmarking ("sort", Int8, true)...
    done (took 0.227696377 seconds)
    (17/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130365957 seconds)
    (18/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.233858762 seconds)
    (19/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183519265 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.107533779 seconds)
    (21/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.212289917 seconds)
    (22/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.174362584 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138441056 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.099375153 seconds)
    (25/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.196207575 seconds)
    (26/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167850948 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15490213 seconds)
    (28/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.175942435 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114798562 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.213539228 seconds)
    (31/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094956305 seconds)
    (32/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.184175209 seconds)
    (33/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102979611 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138415013 seconds)
    (35/286) benchmarking ("sort", BigInt, true)...
    done (took 0.23906056 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118392039 seconds)
    (37/286) benchmarking ("sort", Float64, true)...
    done (took 0.238076756 seconds)
    (38/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11410104 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.25331987 seconds)
    (40/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101241459 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119764095 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104394298 seconds)
    (43/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.110465935 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199849703 seconds)
    (45/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133357678 seconds)
    (46/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169914795 seconds)
    (47/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138563842 seconds)
    (48/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.231621944 seconds)
    (49/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.169783374 seconds)
    (50/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.126048034 seconds)
    (51/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.103018006 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.136885711 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.213696901 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116975667 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099441922 seconds)
    (56/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17458179 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096465767 seconds)
    (58/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.190099101 seconds)
    (59/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115134451 seconds)
    (60/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096745481 seconds)
    (61/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189423438 seconds)
    (62/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.143792977 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.186106447 seconds)
    (64/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073217135 seconds)
    (65/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.146651427 seconds)
    (66/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.204160261 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136945428 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11568591 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091594959 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190043223 seconds)
    (71/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.177078354 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100229949 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13850637 seconds)
    (74/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118448059 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089585042 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108873907 seconds)
    (77/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.139532127 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114801049 seconds)
    (79/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176532194 seconds)
    (80/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095960297 seconds)
    (81/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.193964605 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068676788 seconds)
    (83/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.19548959 seconds)
    (84/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239289252 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067718311 seconds)
    (86/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113128976 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.111052703 seconds)
    (88/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.068849122 seconds)
    (89/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.069664013 seconds)
    (90/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118611049 seconds)
    (91/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07976179 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.15521901 seconds)
    (93/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.06851365 seconds)
    (94/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17494339 seconds)
    (95/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079667671 seconds)
    (96/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.209745891 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.069284956 seconds)
    (98/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.155377688 seconds)
    (99/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116711004 seconds)
    (100/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092427973 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.102184174 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18646403 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196596444 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.139182409 seconds)
    (105/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.123949647 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185058648 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137098943 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068129201 seconds)
    (109/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094695075 seconds)
    (110/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167555722 seconds)
    (111/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068871528 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085864101 seconds)
    (113/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113945694 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.097005445 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113659461 seconds)
    (116/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071384862 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124758888 seconds)
    (118/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.14111385 seconds)
    (119/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098069334 seconds)
    (120/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120482117 seconds)
    (121/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.124492464 seconds)
    (122/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153308771 seconds)
    (123/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093308652 seconds)
    (124/286) benchmarking ("sort", Float64, false)...
    done (took 0.178246569 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118293056 seconds)
    (126/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070395514 seconds)
    (127/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121012178 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105609951 seconds)
    (129/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121624832 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088839288 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 0.210826985 seconds)
    (132/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099470765 seconds)
    (133/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186571345 seconds)
    (134/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.122170242 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133133045 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111977627 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.102123078 seconds)
    (138/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.136471142 seconds)
    (139/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174471006 seconds)
    (140/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069377239 seconds)
    (141/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117745379 seconds)
    (142/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097412164 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068287934 seconds)
    (144/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112480358 seconds)
    (145/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166878008 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095078576 seconds)
    (147/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119430003 seconds)
    (148/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119367174 seconds)
    (149/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100196689 seconds)
    (150/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094038581 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06937261 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088951124 seconds)
    (153/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091506975 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070706714 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120878103 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088704684 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114650934 seconds)
    (158/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096846775 seconds)
    (159/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113862838 seconds)
    (160/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069485723 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11009865 seconds)
    (162/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.15330489 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.094269214 seconds)
    (164/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10808849 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092792101 seconds)
    (166/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098996096 seconds)
    (167/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106432856 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0879946 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.092355315 seconds)
    (170/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096784773 seconds)
    (171/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137511125 seconds)
    (172/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136671717 seconds)
    (173/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072454906 seconds)
    (174/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.175882615 seconds)
    (175/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.088843851 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.188256742 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.140552502 seconds)
    (178/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.090524179 seconds)
    (179/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.110914534 seconds)
    (180/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152348167 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138470224 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.321222137 seconds)
    (183/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069392197 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095266436 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093961557 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088824532 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122784378 seconds)
    (188/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10070501 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111641106 seconds)
    (190/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068349383 seconds)
    (191/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112786885 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069057571 seconds)
    (193/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117298512 seconds)
    (194/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069267524 seconds)
    (195/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102778611 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090080475 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118417762 seconds)
    (198/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099098112 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110004323 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088768027 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110541584 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08933751 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110601925 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090623728 seconds)
    (205/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093819505 seconds)
    (206/286) benchmarking ("sort", Int8, false)...
    done (took 0.195125297 seconds)
    (207/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097998792 seconds)
    (208/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114094193 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071943938 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109640774 seconds)
    (211/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.186720785 seconds)
    (212/286) benchmarking ("sort", Bool, true)...
    done (took 0.229378237 seconds)
    (213/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08788491 seconds)
    (214/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119427094 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08926064 seconds)
    (216/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092965369 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071683128 seconds)
    (218/286) benchmarking ("sort", Float32, false)...
    done (took 0.180058484 seconds)
    (219/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069006085 seconds)
    (220/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120825724 seconds)
    (221/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097776322 seconds)
    (222/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07066273 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111555255 seconds)
    (224/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223668267 seconds)
    (225/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113861272 seconds)
    (226/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161382323 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112035322 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.13778935 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.090886337 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111096918 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.140821501 seconds)
    (232/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111711522 seconds)
    (233/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068972354 seconds)
    (234/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117773768 seconds)
    (235/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164419389 seconds)
    (236/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.139979621 seconds)
    (237/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109657915 seconds)
    (238/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0984792 seconds)
    (239/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.09176718 seconds)
    (240/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.07741261 seconds)
    (241/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.078199425 seconds)
    (242/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.09111927 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114906688 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124715318 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138796813 seconds)
    (246/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070281274 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071371015 seconds)
    (248/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111257901 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087515037 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113320978 seconds)
    (251/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090147237 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117715042 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072060765 seconds)
    (254/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099595264 seconds)
    (255/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.088280857 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12019349 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069373673 seconds)
    (258/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069358404 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118174334 seconds)
    (260/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.123829311 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068550232 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.144833012 seconds)
    (263/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088084301 seconds)
    (264/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.099723157 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097451253 seconds)
    (266/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158157458 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087529032 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110051192 seconds)
    (269/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.088440191 seconds)
    (270/286) benchmarking ("sort", Float32, true)...
    done (took 0.238535556 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120660581 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125240771 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070255494 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06989282 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.118851144 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0723622 seconds)
    (277/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117643639 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09204829 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.09672184 seconds)
    (280/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.078229622 seconds)
    (281/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070514597 seconds)
    (282/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.095018163 seconds)
    (283/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097447409 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117605623 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095990063 seconds)
    (286/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.09107706 seconds)
  done (took 36.85456292 seconds)
done (took 37.743028407 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104126981 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15248708 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099025165 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141314765 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125226308 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093580201 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119653332 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123190744 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102320153 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126154064 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100666504 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09397719 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099431277 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121760314 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.121797218 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120162158 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124962918 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095243824 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120690427 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110849438 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097428525 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110016559 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091370001 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093015313 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101474579 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117498863 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095089878 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121931638 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088148493 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111635632 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093695484 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119470844 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087981943 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125982249 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.11690882 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097574003 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122183798 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099224601 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113527473 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088134363 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11890558 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088011041 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118558685 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.118686334 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094926947 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.115526825 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097454875 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124092262 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.143707474 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094361812 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.119654466 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099301585 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122000858 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.095718431 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11615215 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0971231 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117195215 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142462011 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098234119 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117109745 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096755972 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.119789001 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094519671 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120050808 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120870812 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100604895 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122761232 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094524377 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122040361 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094068726 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112321878 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119867066 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09349278 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111317644 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098604248 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122441835 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088125993 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117725819 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096708362 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117332922 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088255211 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114930871 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090461373 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118604109 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091022611 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095381384 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092800491 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119056733 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088453259 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121648567 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117299874 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095868605 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113756751 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101480317 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111245473 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094718742 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111322489 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089818737 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113807823 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093039175 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111256751 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091743504 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121653746 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090715204 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118280465 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124871623 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089133152 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117599795 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08954275 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111955787 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104176401 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122316609 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088658104 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117029314 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08821487 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119923254 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111108786 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089205971 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111009049 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089120762 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117880802 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089251987 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114087601 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096715629 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126053857 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089614511 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11560645 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09210376 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112063031 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094915255 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112283443 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08846102 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114587424 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079934383 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114611693 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088786832 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119811733 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091574454 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120547127 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113431007 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099637303 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116956003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096438862 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11690612 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088084668 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098758843 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094923667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113828058 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09091415 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111866003 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091111492 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111318186 seconds)
done (took 17.222209432 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089820403 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186098904 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157333185 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147037452 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110137681 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113318149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123323682 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.14482705 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091909201 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145878182 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.135128655 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109883975 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.15300661 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088502741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113425212 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092565201 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114551062 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128450772 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128329155 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134109171 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167251009 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11188822 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148016953 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.114238989 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121660259 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129837878 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090919486 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117110401 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094275226 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138635987 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110450824 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116425303 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089754928 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135746671 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.129989208 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097473938 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112007003 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096741583 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113279236 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088610127 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142750566 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134521273 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117907375 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.096024857 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115977562 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092629374 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114923404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.099364514 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124076785 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116937102 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104665198 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158039241 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.116554098 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123182005 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089661889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122663267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.09954798 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115106783 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089979513 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115142211 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089348485 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116748698 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127979331 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14276619 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093910469 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122351527 seconds)
  done (took 8.747590261 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124831949 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143047888 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131469876 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109024876 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111943253 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090968009 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113759541 seconds)
  done (took 1.769542919 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090808167 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138316249 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116316849 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140350065 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.136547625 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11713925 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119160899 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090169805 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135282365 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114871228 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11512341 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15555386 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091382622 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12253578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14190989 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090856609 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141073578 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090647106 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119074041 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.140918478 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094919363 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132982374 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092385755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114584748 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132946441 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090645178 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163645694 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09561878 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112934383 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117849912 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089021664 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.15397481 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.133051854 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.099017903 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114047358 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109985537 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.132939513 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08891175 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131887633 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119685343 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.108745207 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115740162 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093025309 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112705706 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095790199 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.127549991 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094738284 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116386847 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093606076 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139776772 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115615024 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109129304 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115733025 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096017005 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116041164 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094090665 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125040597 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091642516 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.139428487 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112859051 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111443766 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134649157 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132655665 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110878379 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117808937 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109696798 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.132331884 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093745844 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115985711 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094455276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134414244 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112796056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.093751449 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.12850365 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093142947 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.144397802 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142893707 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094158027 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127219685 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091367046 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116378671 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091545488 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142719476 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118876512 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091283198 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11944113 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094459838 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113572663 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092462257 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118625453 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090695514 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116304182 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095244268 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11675796 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094090176 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.135815225 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115994438 seconds)
  done (took 12.071731942 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092079881 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115766233 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094382319 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116108738 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092374417 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116431397 seconds)
  done (took 1.581251556 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119292738 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118766327 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130777015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098306252 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157641305 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134125802 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111559372 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124702995 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135637035 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104763868 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135115866 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.11167462 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142480149 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122357726 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110474153 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122514371 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135331543 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103208311 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128430786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122954041 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114404882 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122945051 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099051115 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137624062 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119629648 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098602224 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128533525 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128972038 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105586265 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124701266 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122111727 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095543038 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123297297 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101389716 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135126923 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.122716274 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097146718 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121526167 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127154467 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096228933 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135970427 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098836543 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129548614 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121315194 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101603784 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123320817 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120532362 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103813317 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.134016997 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12014229 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096691005 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121543672 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095992372 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121131575 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122583803 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100887872 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120995384 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110338307 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12273569 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122512083 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094823321 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119992199 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125679639 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096000638 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132287801 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096600764 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123012116 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123403815 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099897612 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122141389 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096431417 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119987958 seconds)
  done (took 9.425711511 seconds)
done (took 34.534083023 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.681002869 seconds)
  done (took 1.63409615 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.838054022 seconds)
  done (took 1.794585918 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.323096178 seconds)
  done (took 17.309225914 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.502613671 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593362244 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987650751 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173574789 seconds)
  done (took 3.212695517 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.925988009 seconds)
  done (took 1.90315678 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286410642 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238222114 seconds)
  done (took 1.484723688 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767500504 seconds)
  done (took 1.73943971 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.440385197 seconds)
  done (took 2.404992398 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330163832 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187741176 seconds)
  done (took 1.496408515 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559091799 seconds)
  done (took 1.530162477 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.768412505 seconds)
  done (took 10.745015069 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270083074 seconds)
  done (took 1.254170633 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307455306 seconds)
  done (took 1.28448152 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.418149497 seconds)
  done (took 4.394685111 seconds)
done (took 53.153131925 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101044345 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128065864 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104727414 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125376546 seconds)
  done (took 1.428741692 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106484777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123041546 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106394544 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122228011 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.13132852 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098287219 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124672326 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103741443 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121713541 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.123389678 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.097481324 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121310881 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100863812 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124878011 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094605967 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12497582 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126762668 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099983179 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.126575155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099073904 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119894031 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124323107 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102215248 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121175952 seconds)
  done (took 3.725042432 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102721659 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120526799 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09879998 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119453201 seconds)
  done (took 1.422749861 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103254528 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133551948 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108414041 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126412299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133791242 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108362708 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118338076 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094438879 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120474215 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102136619 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117479137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.141822848 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109574412 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127059153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103928107 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11551281 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117136523 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109171034 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125752229 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103392398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118926568 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101728529 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117518228 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135204598 seconds)
  done (took 3.775584601 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174615983 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129130145 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141171515 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.098069859 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163289727 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142396557 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090925874 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142086016 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090863747 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132313384 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119592444 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136660756 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130066812 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090099294 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115351285 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113713292 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103604222 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128213338 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093121979 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129142657 seconds)
  done (took 3.447731497 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100080497 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118586608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09043184 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117795305 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101979033 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121238003 seconds)
  done (took 1.637833578 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098784252 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115376849 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095831056 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118054506 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09612795 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115533139 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090698443 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116852468 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092054188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114569267 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092707189 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115170827 seconds)
  done (took 2.248841186 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.513296415 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121231298 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121647776 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090391244 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127287625 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091044961 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.13240146 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095286941 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14390346 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089646974 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116222016 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.118420335 seconds)
  done (took 2.749096648 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237826471 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125974061 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286769786 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359119562 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177534301 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170618825 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.305735679 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16708303 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212334374 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158416041 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203187588 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206919407 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131409324 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235622527 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11807805 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.148447381 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221992363 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255168502 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155359383 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246777085 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174561166 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170640168 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183874976 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154802281 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140832571 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174621533 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12129116 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107160299 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216582759 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182194778 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193253291 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164968938 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158477206 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23445333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264755179 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197810587 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284552314 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136271713 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170881292 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171988568 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264456283 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118608783 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239945728 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16558316 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131888158 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212513969 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162299798 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185679395 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149612687 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145490107 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22955592 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199760361 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201504523 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140626413 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306761732 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15255626 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165618188 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220323745 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219485294 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23031097 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197420604 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122563088 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190908197 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195685166 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215088576 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135433273 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.213876762 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148239046 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181434696 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19917111 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181114156 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17422175 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211341941 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13918223 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172396687 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174316732 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172582183 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267244131 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190346815 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123654888 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171720144 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152797626 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107611995 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195603159 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127252818 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220330552 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146122607 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165810684 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239605158 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134848882 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163254237 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21675908 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180041104 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15061249 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085514069 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157692321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157917757 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176193079 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143490607 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16052752 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153648743 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106133993 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172326684 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126484546 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189266623 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120193484 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171531061 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187473793 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129024864 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167704889 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152613392 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126846842 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214442336 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201613296 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143688417 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135376915 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213678036 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183727141 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.144853302 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180988022 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207499366 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146162657 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152055859 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232226261 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220709631 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145635037 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20582277 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150987992 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137714368 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134330789 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18769712 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159549158 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164064578 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135222998 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186607108 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20443407 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128208073 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140277211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204691797 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136119187 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134978748 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122060157 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150226887 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139347416 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144428127 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14647539 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179077077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182682218 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157708819 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169256792 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150425088 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246395967 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142160324 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127319582 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15010274 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122736031 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.203055417 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203111958 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133509816 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231597552 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172310119 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20321418 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171129547 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137404601 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180247465 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131209767 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095313331 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227011154 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168929597 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165544718 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198942205 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225097533 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187971371 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187252971 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169416829 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177859025 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168670866 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156801451 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1414198 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163723742 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161754758 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124670407 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116153147 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136072609 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153920437 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144754307 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135599932 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201727729 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17463889 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217880647 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163586126 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125418666 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21057818 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104947458 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17513623 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206159768 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148555128 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200738358 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196954461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219764536 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120531876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235709582 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12203782 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100708049 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145755467 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171817875 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136114362 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112545337 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193699622 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185966519 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179888942 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175678778 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237072075 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185259211 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194832638 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122971163 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143444322 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205899221 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181450182 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157742245 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140279405 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154047973 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182378413 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151754302 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241744456 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169112382 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179386357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203897876 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154544296 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133148038 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151071204 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17518682 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156873967 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175445197 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147871211 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113852354 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155825815 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132739372 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164099935 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182632084 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164038783 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211010199 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151673283 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195224417 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128233346 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167805166 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163194063 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165797159 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083279143 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170574692 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223657667 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145095675 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162462119 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18466581 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106332255 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312931064 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229844754 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191192323 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140129125 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159374453 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16415643 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165452416 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168493151 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182044204 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162767149 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19081963 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161714404 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13847186 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139266968 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124061555 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155245366 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135151675 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149566112 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.18144063 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140040104 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186763367 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150010128 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160919425 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175389574 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151567364 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118668313 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152711048 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246581364 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188993543 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195144551 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151411108 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176411876 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233881697 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100617062 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134794678 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135825956 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182267945 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138456949 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198865274 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190648919 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229356239 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185896912 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175435353 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141697669 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121316151 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159861219 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170947204 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206483196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148297168 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152286241 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19927345 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13933605 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133247739 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16904449 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289016754 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147378971 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19127779 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081401208 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308220494 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10252195 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135597695 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165029344 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187972075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139128264 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153384874 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16758684 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155206702 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164784518 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151704072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220037054 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218350514 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23283211 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1860068 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134074637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132337541 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197306453 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188365326 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161878353 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138491878 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188332315 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197931398 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196537484 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144752086 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170993641 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171130832 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161122011 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222725203 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109937951 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235793367 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136175558 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199187211 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156693092 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141278849 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176760202 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191624286 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143715018 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18319195 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213995754 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110828678 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135011082 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163964467 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180930672 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150690728 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128389871 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180981419 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127605022 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201468791 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270492982 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135908476 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156195746 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121327442 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140224534 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160119351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164332023 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141765464 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162598444 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199274788 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137186759 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188044713 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23593124 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175592209 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170708238 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147742774 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.712055889 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105263561 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224324409 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122392468 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212052324 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124363553 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203404209 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135065598 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169791208 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228922123 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161018182 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233119309 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197705404 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208520715 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106959605 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162955312 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149895075 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147190129 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156627739 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170900404 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162377893 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147959257 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181512545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158858291 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136452026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115095072 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229939301 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15019127 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187203317 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183118537 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140972962 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177148159 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194659065 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136375512 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184374485 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214971634 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117278235 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152516385 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137336489 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155120474 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271830751 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099052445 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213214123 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19075791 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163684019 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170657738 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14899214 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198870321 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162564518 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219269603 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145353806 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158576706 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157729098 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112588755 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133191633 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158533742 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169129419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152096539 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165238989 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140540956 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218737258 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098452973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14711211 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289606008 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173760852 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245287401 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137645246 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110647146 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161538229 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150041211 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.179701705 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207693197 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110648503 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137953402 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1368985 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133662625 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138927292 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160319178 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196896664 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161880145 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207499447 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140657248 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284171404 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141489857 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156722401 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091407249 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134359032 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153690358 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148280029 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126935715 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221556002 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270094816 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146455599 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.110132265 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154290144 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126898425 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110801311 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166928357 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164016281 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18196052 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144400857 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110395135 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160763982 seconds)
  done (took 83.384258649 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184390961 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135824458 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150518912 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203584269 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18059495 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.292251183 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211423407 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258060544 seconds)
  done (took 2.69311435 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096069014 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.152743122 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157846968 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135679889 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093769231 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121175554 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.352322438 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133577571 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092542854 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.1486395 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172502064 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096550728 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.632753294 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.122118532 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120458849 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.156583382 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.117555463 seconds)
  done (took 3.971036503 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.070618997 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.463526882 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.770461229 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193975147 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176038998 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.119966181 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.660187393 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118182301 seconds)
  done (took 11.64985744 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126773024 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146784563 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.136805804 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.164817719 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.15049677 seconds)
  done (took 1.807477683 seconds)
done (took 124.912833205 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099791452 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129413872 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100794138 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13079036 seconds)
  done (took 1.52634934 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099228377 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072312036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101579922 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077001019 seconds)
  done (took 1.426211328 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.193645593 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.17018477 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392224629 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073282475 seconds)
  done (took 1.574640439 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117779928 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133637332 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105997723 seconds)
  done (took 1.444534334 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109014055 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130340698 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104609195 seconds)
  done (took 1.428095294 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108093049 seconds)
  done (took 1.190589089 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.111780672 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.140723221 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113585798 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139764078 seconds)
  done (took 1.589797102 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100291704 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127542939 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113758155 seconds)
  done (took 1.423185596 seconds)
done (took 13.046170037 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10866032 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421256058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.417637625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112067133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72589897 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381963299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02208671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147525772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169612518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094857911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139701328 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674293836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.013122244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.370574205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970228519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.460783487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701793187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094728764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11941159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09552745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007211466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093921966 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122897241 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092871221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703243319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426118199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096775923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.460115329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097048121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129754628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.407634743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096432527 seconds)
  done (took 17.046996741 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100018615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18056071 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132147784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097444654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128349516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095878473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124173978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095623583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183586402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123078678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11422455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122244928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126331992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097302705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142446837 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094071738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123434307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094534877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121669608 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122362873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11352483 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121821498 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096318922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121271776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095656054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135692564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122948536 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094406432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121836072 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102790096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124581497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096356208 seconds)
  done (took 4.856084769 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145201933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189186113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13370879 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128354556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174298142 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123412707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201251447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147165347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18696804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096903882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140367878 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094874443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157248947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123161262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116520749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122806328 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096271744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12189462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12042806 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096949541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141667709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094693485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123308579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094530659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123301032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137716203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096889376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12126807 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094613668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130570741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097683469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124195508 seconds)
  done (took 5.187709767 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099542212 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126583226 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110814145 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14011725 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096593322 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126797997 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098991666 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125306905 seconds)
  done (took 2.016611677 seconds)
done (took 30.191392012 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113242303 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127326018 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108930088 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134673735 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10471987 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13562403 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093157624 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134197587 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133586438 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104241693 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137762961 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093691831 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123096437 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094419722 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13588642 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099781692 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136270278 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.131322171 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10927536 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.135699217 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096366851 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134434352 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105717349 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.136502572 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136143066 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109271486 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13921569 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101519376 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12321812 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096367593 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.127404858 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.108059573 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124323142 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.136324939 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099540334 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.126442864 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096581139 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.125880313 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.107310769 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134881099 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100469371 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134866167 seconds)
  done (took 6.068873642 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112877851 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.142610991 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108677087 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082387444 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116555668 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082495577 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140130467 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080219373 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110377856 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112579814 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.102445897 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07910986 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079594537 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10148646 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07847789 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076533084 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108788089 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076979601 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077485327 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105213253 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080826482 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.101004128 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081099733 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07960136 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104265084 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082591396 seconds)
  done (took 3.603302493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102602776 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14196954 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114439417 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.175523499 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.155967289 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102227652 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13514497 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140210479 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112155247 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120241676 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097886556 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151717695 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111548611 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129923213 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.124341712 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110298208 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136772466 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096363824 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.133923597 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113846402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138382687 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132366426 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113936459 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132665565 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094486651 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124250774 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100909709 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135278537 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.128882915 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104327465 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128008827 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097653099 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125722247 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106294021 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128099502 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123293155 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115807139 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137361469 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104539711 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123530801 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102325053 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.125820151 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142795561 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136084246 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122696825 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102704612 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12566942 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132320439 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096390302 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1398058 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104844248 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121533966 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098255702 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.123724877 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095030962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139071177 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096920485 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125570703 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130318832 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100494212 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13519846 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099256395 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139375383 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.094752764 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130677555 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095246243 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.123434089 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092759514 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145363563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127625598 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134900829 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124449236 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123217557 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104713533 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13066705 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100709678 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122591827 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110645753 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133028902 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098265857 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132974576 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125312194 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098441571 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141388774 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097661523 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124649866 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094998448 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13023397 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096953977 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.124020381 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13588727 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094289463 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125617922 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108290738 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122726691 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095688696 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129993531 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099206002 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.122090873 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135283147 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100779001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123179929 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105679335 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123355668 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097462381 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133053514 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127973708 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095396956 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126958184 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102394885 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122986715 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099167426 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125913051 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096454186 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133826659 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10151159 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127880459 seconds)
  done (took 15.015656959 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234762213 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219889339 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190048506 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300002192 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135432048 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119373158 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215542665 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.160503979 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123090995 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162115677 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171208013 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186579088 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.143093384 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183091117 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17248992 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124201937 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142464381 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140178461 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.247501126 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.267077961 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144708473 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102581838 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16331373 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162064196 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137665482 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132597673 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112042149 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134634492 seconds)
  done (took 5.835694573 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11274384 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155878934 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.129152139 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.117657284 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150885815 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.0954744 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128454363 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.124794027 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109184928 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138441418 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094713572 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130010831 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.130405276 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105196995 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124376195 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104922048 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134378146 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09703633 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127053763 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098832254 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134321409 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133513969 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099942137 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122985438 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104660665 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123364579 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089152595 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143478891 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122940282 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117291997 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122299721 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102840814 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137012768 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.123987008 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09485962 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.12570199 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097698797 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126246442 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.09710337 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121762121 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094066794 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.10747266 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094218737 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.138212919 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101730086 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110452155 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.100853292 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129447801 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096118854 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12218406 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125407221 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09832158 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.126903979 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103297972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125830971 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096161776 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.127060888 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087406808 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130273413 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.096958645 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114020844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094626273 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128628342 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091048691 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.132361599 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101079104 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123180848 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098079047 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128793269 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102094785 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.126184834 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101103416 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121884269 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125100351 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099330437 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12930834 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098214855 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123138761 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095843658 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12416538 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077523265 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124099608 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076196094 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125228989 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095393319 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12167848 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096949128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130145222 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112359572 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.125457938 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131684156 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096988837 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123152075 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098755554 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112177268 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098446849 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13963437 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141591519 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.096375837 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120851699 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109982454 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126117824 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095482492 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106210803 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10436855 seconds)
  done (took 13.124662577 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132115251 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154864932 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125052977 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11341045 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158428635 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158673797 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102561399 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131753413 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096861541 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143120508 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096662169 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135338589 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095581707 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138435914 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157497327 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106294144 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126198108 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110229219 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128662348 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170516829 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113392696 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142533977 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141986674 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09663002 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129539621 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112670123 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16261061 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.137440111 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109315973 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144609912 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110201624 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161381947 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144578745 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100124331 seconds)
  done (took 5.51623516 seconds)
done (took 50.256447847 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208390751 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.416293226 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184743649 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.009336818 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.254409932 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.19183427 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197865878 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.183168956 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.699953027 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.186037846 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457111445 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.682920226 seconds)
done (took 59.783252611 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.202208457 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340669868 seconds)
    (2/2) benchmarking "String"...
    done (took 1.486205771 seconds)
  done (took 3.932930618 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.780006529 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.081923827 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.44020196 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18041846 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194233245 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483795459 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.754015274 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.466305092 seconds)
  done (took 27.707765836 seconds)
done (took 41.733622223 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.163077656 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.226225956 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.214945661 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.158117439 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.302493197 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.203928554 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.453277402 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.186365583 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.196391809 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.158278632 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.197283686 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.192284587 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.194782958 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.454428652 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.179125195 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.176964335 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.245286704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.647140749 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.544063716 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.186067518 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.19308743 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.199267905 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.191252328 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.184533936 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.235493206 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.177123775 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.180264853 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.175559335 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.139517662 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.182309965 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.273605398 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.620755087 seconds)
  done (took 189.139791048 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.175740282 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.26214978 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.343694156 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.217104057 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.849636232 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.378771999 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.325407305 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.896540519 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.190452255 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.204978394 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.50857452 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.177474993 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.52185437 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.173312128 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.206719167 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.240972433 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.505788136 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512570913 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.213090426 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.333361986 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.184397979 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.538250655 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.484950139 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.436648875 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.20075317 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.247680233 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.200364171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.216982331 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.384665839 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.459161889 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.2121622 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232722596 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.705490777 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.032315942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203628079 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.186671409 seconds)
  done (took 150.26754857 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.176947351 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.177122713 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.17815825 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.204533768 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.178081752 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.6587842 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.662074101 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.673722489 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.31709753 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.246618119 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.355017667 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.17880834 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267828973 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.193030101 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.179030327 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.19323292 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.219072206 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18227844 seconds)
    (19/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.180087136 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178706272 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.661105991 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.195012439 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.339720978 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.191457824 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205924108 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.563361021 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.384642309 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179827552 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206785048 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.495538442 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.2216791 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179320109 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.46773364 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.756288826 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286364877 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181081455 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207420132 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.179457812 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.449996976 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.180580848 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.180211877 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.182527633 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.762572686 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.183141375 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.662002618 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184116512 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.038559903 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.181353718 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180966031 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.180383496 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.543812157 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.667360872 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197884833 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.180573081 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.182783278 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.181636388 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181824632 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.208355919 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.472508273 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.272580827 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195613449 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184706179 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209125005 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180490949 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.181643788 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.378192069 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.180743468 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.720278168 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.2419049 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.291930552 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.663091938 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184415614 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275001362 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298194723 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.181973458 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181130139 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181568872 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.182479819 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.287756376 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.181762548 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.536949321 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.343430704 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196894364 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.245410963 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.278247611 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.182229015 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.181821188 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.496046131 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.185703029 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.18145595 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.836134208 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.274577031 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.184919191 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.181145768 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181307075 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.535372283 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.663325431 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.321243454 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.177405325 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.342693457 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.159511905 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.531550273 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.631217016 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.748922952 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.159703395 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.264987702 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.314160338 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.168423313 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.153957787 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.230712403 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.155252301 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.210320632 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.152663989 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.545924421 seconds)
  done (took 360.403158694 seconds)
done (took 700.918941828 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.747434549 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.745676275 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.844329125 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.741590617 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.70810182 seconds)
  done (took 9.866904337 seconds)
done (took 10.946294926 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.326716048 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.327270162 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.211329766 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.326733098 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.187220151 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.34160861 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.308784745 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.1780713 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.249861929 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.22656308 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.250057133 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.203714113 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.188018093 seconds)
  done (took 17.409346962 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.471824631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477463492 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.224583381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.498222233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.203361908 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.462550961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360717533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366806434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368874183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.189070408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.171381151 seconds)
  done (took 15.880264138 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.483002597 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.4805768 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.228213013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.472295292 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.204817942 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.474808291 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358360884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366093709 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365250268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.18879383 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.170772911 seconds)
  done (took 15.877216428 seconds)
done (took 50.250236295 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.168022773 seconds)
  done (took 2.252863166 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.198511973 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.357313456 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.183507285 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.172167719 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.168187409 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.169557815 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.173067369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.167483038 seconds)
  done (took 10.675303249 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.164681875 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.163268681 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.163290012 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.16313453 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.165465717 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.162634108 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.163531007 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.165514351 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.165902468 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.163712428 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.164112196 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.165773177 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.164130494 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.165789163 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.167905117 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.166337546 seconds)
  done (took 19.719569914 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.166330584 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.163822419 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.163386222 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.164231224 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.164511279 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.164248732 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.166267025 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.162660882 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.162496207 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.162975613 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.163699564 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.161861193 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.163477748 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.162646882 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.165733594 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.161391095 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.160171471 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.160240637 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.165566024 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.160402531 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.160712929 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.159316685 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.160587143 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.162772479 seconds)
  done (took 28.996239154 seconds)
done (took 62.728793981 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.720350729 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.590135727 seconds)
  done (took 6.391433556 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.220229339 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.221642459 seconds)
  done (took 3.524121149 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.162646037 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.161377626 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.162046711 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.162258173 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.161444359 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.161960236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.162637703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.161204684 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.162183269 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.162082811 seconds)
  done (took 12.700728521 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.16172096 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.161638445 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.159646599 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.162308945 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.162266434 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.159746396 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.162543812 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.162602204 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.16253411 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.160540296 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.163273871 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.160835781 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.163119328 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.161114356 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.163903899 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.162164738 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.161032843 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.160692356 seconds)
  done (took 21.993460811 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.163830532 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.183980701 seconds)
  done (took 3.429183817 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.290904644 seconds)
    (2/7) benchmarking "second"...
    done (took 1.202066702 seconds)
    (3/7) benchmarking "month"...
    done (took 1.270696794 seconds)
    (4/7) benchmarking "year"...
    done (took 1.258998782 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.202996067 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.18339801 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.203200629 seconds)
  done (took 9.694974543 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.163944693 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.337073627 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.434705007 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.771262699 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.164933922 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.167723935 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.037462202 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.168714738 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.16969202 seconds)
  done (took 13.499169539 seconds)
done (took 72.312941093 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.147206783 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.17187573 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.341519128 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.171707726 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.172608503 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.456115739 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.184751059 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.279338031 seconds)
done (took 37.009102791 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.162559171 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.133013063 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.806673827 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.147442212 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.13991886 seconds)
  done (took 18.304445435 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.080194756 seconds)
    (2/2) benchmarking "read"...
    done (took 1.483324541 seconds)
  done (took 4.636759595 seconds)
done (took 30.185738932 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155057876 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.154950642 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.152633608 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.152017363 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.155530475 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.153083219 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.153192275 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.154442852 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.155495303 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.155232757 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.155819001 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.155448392 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156155247 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.15426544 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153060668 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153257754 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154029016 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.152042519 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152461114 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153805047 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.152691005 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.155583777 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.153101305 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.15290572 seconds)
  done (took 28.771035066 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.156785369 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.154716923 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.156874553 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.156640269 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.155258961 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.156512837 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.157125161 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.154117372 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.155445482 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.157023444 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153399034 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.154730819 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.157137524 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.154763774 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156732194 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.154239604 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.15713123 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153072259 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156438665 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.154996456 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.156007756 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.15397612 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.154773286 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156451521 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.154781792 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155593859 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.157195948 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.154567303 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.157812562 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.154972653 seconds)
  done (took 35.744198827 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.160618041 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.163241959 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.158086559 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.157039993 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.158506739 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.158170317 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.156967718 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.158321491 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.157717082 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.157397472 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.158023132 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.157982182 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.157441538 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.158225241 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.157835943 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.157679613 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.158083398 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.157809771 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.15807266 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.156904487 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.158516813 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.158266926 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.158211746 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.157771805 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.157913223 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.157916082 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.158856683 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.160319046 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.15894189 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.157934927 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.157403403 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.157582464 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.158337049 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.159165025 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.159200153 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.159512211 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.162697161 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.165067888 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.159532403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.159015564 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.158672835 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.1587002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.159673082 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.159797692 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.159512629 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.159225143 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.15930161 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.160716642 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.158860067 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.16014451 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.160546251 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.159698253 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.160249143 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.160222254 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.159011354 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.160079654 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.160159348 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.16088202 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.159888069 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.160365814 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.160668206 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.160905191 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.161025542 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.160601284 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.161730733 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.161331039 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.161142312 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.161199428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.160403333 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.161844541 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.161533481 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.161535235 seconds)
  done (took 84.554472174 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.161743305 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.158392571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.157934851 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.159057737 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.158543781 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.16312254 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.159030725 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162002066 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158561724 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.161841038 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161976162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.160304885 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160366336 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.162116626 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162085816 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.158980451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.162209058 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15921035 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.162018028 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.161858798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.161946269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.160271649 seconds)
  done (took 26.614436337 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161914047 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.165140702 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.160046238 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.163788015 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.161348413 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.164245591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.163091321 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.164860567 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162929425 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160915925 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160084897 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163294621 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.16251701 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161242184 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.16005822 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.162771121 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.162984552 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.162358446 seconds)
  done (took 22.003816978 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.161673775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.156454746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.158502361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.156786841 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.156141037 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.159087532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157170223 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.159150625 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.162085321 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.1527674 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.154587626 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155326005 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.155106189 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152411884 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155984976 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.153732421 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.154986749 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153707544 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15154493 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14921661 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.149600921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.152788756 seconds)
  done (took 26.500861408 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.152310611 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.153012328 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.149199828 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.15121121 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.147991371 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.151140778 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.151328756 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.147630301 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.152432446 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.150104622 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148555885 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.151356417 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.151652577 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.149818201 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.148953296 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.148859709 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.151651054 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.150766838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151800968 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.148219767 seconds)
  done (took 24.078946095 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.152979862 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.152923285 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.153285459 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.153310412 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154074427 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.154022321 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153246823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.152790243 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.153660188 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.153427527 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.153267768 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.153359265 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154109326 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.15467235 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.153639858 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154013434 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.154428394 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.155213777 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.153979863 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.154121218 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.154887525 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.153927255 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.154380137 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.153975023 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.154101211 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.154294969 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153586955 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.155400861 seconds)
  done (took 33.380174858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.153822893 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.154516486 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.151601209 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.151973565 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.151471701 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.15208155 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.151645922 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.152163995 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.155531828 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.152429755 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.155022535 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.15479307 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154748721 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.154074682 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.154505895 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.154882123 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154412876 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.153028588 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153177398 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152700368 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.155351608 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155439841 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.156050394 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.15235708 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152975098 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.156053668 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153302694 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152582353 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156367399 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153507131 seconds)
  done (took 35.686082481 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.174892431 seconds)
    (2/2) benchmarking "in"...
    done (took 1.174963329 seconds)
  done (took 3.423054125 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.154682321 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.156159219 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.156186931 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.153758245 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.15415779 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.156444703 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.157547755 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15375343 seconds)
  done (took 10.316666606 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.157133526 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.157368296 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.156848058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.157503363 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.158249104 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.157455255 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164648613 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.174651766 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.159409936 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.15808292 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.161446452 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.163396395 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.160916832 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.157164252 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.157489887 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.160142264 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.15799976 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.158600493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.159454547 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.159755748 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.158572484 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160321233 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.159937596 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.156035216 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.15947791 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.169157411 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.179457702 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.15871444 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.159098158 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.163069573 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.158818712 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.156984331 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.159360648 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.159948687 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.160063538 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.160193613 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168809177 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.17860187 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.165322822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176822034 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160689958 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.156657141 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.159373588 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.161074894 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162030136 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.160567356 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.161919578 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.15773923 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.159295045 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.162917502 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.164458502 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160073997 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.156947824 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163224963 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.16031626 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167493701 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.177007302 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162289722 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.167950237 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.169875466 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.189762633 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.181454308 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.162980885 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.161133681 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.170172101 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.181158238 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.167742972 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.176125425 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.158879627 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.161808012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.168013047 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.189400536 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.183356291 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.16175897 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162227298 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.163052997 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161780169 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162046313 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.167650881 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.180665599 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.162388562 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.16322269 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171108661 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.181063586 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.162639054 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.162607705 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.161792937 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.163243225 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162870982 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172826479 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.180147652 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.164111835 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.161566611 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.163200229 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.163574527 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.16445905 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.162966393 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163749154 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.161292405 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.164003962 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164045767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167456699 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.170202236 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164452281 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163685711 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.17041645 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.180655268 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163895148 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.170087004 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.164652143 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164561566 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.1652897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.168859968 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.161973328 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.167496664 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.169992308 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.165122289 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.166580194 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.164880122 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.164783447 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172622988 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.185856215 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.164999296 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.164865729 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.168482935 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.173599 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165186882 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.167720639 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.165602858 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.163404496 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.162853291 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.165978772 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.166138343 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.166473614 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164673176 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.165887297 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163759786 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.165197566 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.165523535 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.166189901 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.165812809 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.165859267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.166391629 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.167451348 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.165953397 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.167430286 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.172662084 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.183514977 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.166941355 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.167103479 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.163959144 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.1678671 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.167695058 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.16737829 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.167284063 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.166752723 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.166572567 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.1667472 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.167691884 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.167928359 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167925495 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.16696708 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170055809 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.167605705 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.169666499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.166805616 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.165832427 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167973081 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.168595003 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.167522118 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.168590228 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.165630137 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.170069336 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.175137356 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.168996379 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.168005617 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.17095753 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168319284 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.16872534 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168621651 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.170506703 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.174293973 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.169052896 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.174517745 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.186257331 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169123173 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.169542409 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.169279334 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.16885209 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169468526 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.171216506 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.175742745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180604366 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.190160374 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.170405545 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.173539875 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.169204125 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.173467164 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.173604866 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.170420705 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.171175654 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.17070467 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168825335 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169016637 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.172273769 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.170672828 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.169879888 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.170615451 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.170732213 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.170495722 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170310202 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.170239685 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170163643 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.16842326 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.17037074 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170906196 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.170624153 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.167651287 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.169912269 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.170634177 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.172104173 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.170923181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.17578601 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.168283101 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.172161751 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172371956 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.171499913 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.170679652 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.172025457 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.17310904 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.171407152 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.178182286 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.188067101 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.174064605 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.178728632 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.187377522 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.170902261 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.174254421 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.173186882 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.16898108 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.17385501 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.178255246 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.173636574 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.17258457 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.172524084 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173377125 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172874488 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.178695069 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.187354622 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.172121599 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.173088667 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.173651921 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.170142851 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.174219605 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.172604916 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.172757551 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174176037 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174355193 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.17380178 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173437045 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.17363297 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.173498679 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.174399624 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.175471787 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.180012011 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.178383901 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.173709805 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.175649737 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.174628286 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.177646757 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.17438299 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.175605195 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.17365121 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184467234 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.196005664 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.179993469 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.191502873 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.175742437 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180284945 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.19153187 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.177320832 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174502258 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175181403 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.174432744 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.175875721 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.171737698 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174920833 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.175724826 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176011107 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.17662927 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.178717209 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.177279957 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.174978793 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.175224832 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.176511429 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.175205372 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.175406405 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.177027292 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.17680654 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177089734 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.174955672 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.175857856 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183076486 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192769297 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.176829031 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.176336939 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.175996328 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.17490115 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.177374052 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.176599853 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.178011394 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.183064535 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.178177887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.184051479 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.177270958 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18513835 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.176732761 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.179404693 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.183566441 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.174862194 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.175563533 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.179189413 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.177844646 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.184315323 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.195445949 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.178216038 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.181033854 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178064824 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.177954072 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.177756676 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.178398209 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.177799847 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.178322305 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187218251 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.196288335 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.181601822 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179672489 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.175319848 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.178672623 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.178415966 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.177051093 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181119907 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.178449291 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.178945175 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.17826178 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.178792151 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.179638524 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.179470055 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.180049061 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.176760314 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.179351655 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.185603171 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.197804171 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.182226774 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.180358301 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.186303882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.197915133 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.186431385 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.197465575 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.179393414 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.179798641 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.18007227 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.180751501 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.178671307 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.18009281 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.181078488 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.180612322 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.1837775 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.180639039 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.180810521 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.180976942 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.180544736 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.179613998 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189143678 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.199294506 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.182214061 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185339311 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.17897615 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.182477736 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.184421472 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.181140787 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.180664473 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.183821585 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188983114 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187870372 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.181511187 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.181812449 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181423611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.182256695 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.18125522 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.182475247 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.181921659 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.183538486 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.181996233 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.182382814 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182831165 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.181476589 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.182827961 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182969495 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.182028643 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.190921742 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.199994296 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.182500931 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.182904601 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.18336994 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.182212548 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.183693531 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.182780097 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183764597 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184147918 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.18415408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.188430503 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.18756233 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.185842661 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.183195231 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.182980741 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.182940057 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.184182928 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184009619 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.183813618 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.183426907 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.184569227 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.183276271 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.183156075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.183151746 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.183502213 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.1845527 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.18428607 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186064529 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.189294989 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18341653 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.180886227 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.184544998 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185131101 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.183628642 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.183196685 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.191297026 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203713503 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.19330802 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.191264323 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.18817712 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.184979955 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186634284 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.191556943 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.184075361 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.184862954 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.185205688 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.185356504 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.186596227 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.18825992 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185690429 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.190971308 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.202852358 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.1849309 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.193311734 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.205692769 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.185911679 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.186586287 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.189346681 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.18543322 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.18373306 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.186362666 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.186119626 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193337458 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.204539797 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188374165 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18676081 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.184990158 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.187524916 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189528211 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186902361 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.18773217 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.184450351 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.18747007 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187448753 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187672305 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.184261573 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.186310616 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.186404252 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190233857 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.191584014 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.185122475 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188436135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.187090813 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.188580064 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188020813 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.188025196 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.185502339 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.184825318 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.187603166 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.188789121 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.187628502 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.189482396 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.187017516 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.189141978 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.188681978 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.188632166 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190170727 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.195679598 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.194353948 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.185916279 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.188668594 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.187978333 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.189669717 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.189908473 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.189118088 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190113237 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.189506792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.190162202 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189402635 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.189479058 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.190822435 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20362931 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.209427092 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190126752 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.188780669 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192327238 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.190952092 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.187884259 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.190525669 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.192055667 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.192680961 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.196705943 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.190738684 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197250135 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.207426345 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.191229575 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.193196402 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.192100511 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.196022932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.193623516 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.19017742 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.190108463 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.194349771 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.203777594 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.209115375 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199675038 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.216238718 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.209311072 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.192218738 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.191408427 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192109083 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.190881576 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.192198553 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.192588553 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.191853986 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.191102212 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.191484303 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.192377183 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195075827 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.193010964 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.19182249 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.193033023 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.191956553 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.192627409 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.189623259 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.191790877 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.191913247 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.192937135 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.193194631 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.193531341 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.193191721 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202831852 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.215215665 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.194142674 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.193394657 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.190273629 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.195105682 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.194136328 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201095409 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.200036026 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.193419477 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.193192659 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.193589047 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.193313124 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.192515083 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.193060001 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.192608862 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.193513312 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.191168207 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.204982038 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.216824527 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.1984304 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.192820324 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.195002186 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.194454696 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194439977 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.19466176 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.194052611 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.194954001 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.194882112 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197607609 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.195511081 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.19474647 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.197727953 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.200078374 seconds)
  done (took 703.487081849 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193356869 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192946802 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.192265405 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.192396106 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.19309847 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193702093 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193579269 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.191948368 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.193217537 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.193256466 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.192259047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193407005 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.193525543 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.193694115 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192815906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.193185951 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193136528 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193468081 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.194028574 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193976845 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.193064682 seconds)
  done (took 26.166216652 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.196460953 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.19404981 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.194203204 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.197144701 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193770766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196864929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.19410464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197097927 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.196965963 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194008095 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198037429 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196611798 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.195017022 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.195063842 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195063723 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197596428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197986707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194950132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.196676465 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.196250526 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196968243 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.195210037 seconds)
  done (took 27.421096441 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.197304075 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.196686311 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.197095099 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.19547375 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.197417343 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.195084297 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.198288437 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.197302159 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.198687769 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.196906947 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.196998277 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.198634752 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.203455674 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.202193055 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.200122431 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.199455987 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.342927404 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.198591351 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.198729066 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.198200855 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.195671738 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.203339843 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.214428175 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.195890365 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.19681311 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.19923754 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.198734891 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.199323478 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.199518359 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.199712817 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.201665626 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.199419221 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.19934032 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.20093124 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.197903994 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.199664931 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.202967952 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.201296688 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.197240337 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.199856973 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.208414989 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.215898401 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.200227474 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.2056244 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.218730573 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.200859008 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.202195024 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.207734392 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.197283786 seconds)
  done (took 60.083009511 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.201329791 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.20084274 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.198621757 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20068494 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.200957242 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.200604639 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.200962583 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.200993157 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.198420453 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.198076874 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.201717607 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.198739747 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.198135973 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.200568532 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.201948371 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.199133971 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.19920903 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.199974727 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.200323548 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199450013 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.198336336 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.201006178 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.201567402 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.199710901 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.202488785 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.198733976 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.198777948 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.201619213 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.199903932 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.199026219 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.202008375 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.202346431 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.202348279 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.199781544 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.199805511 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.202017142 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.202635365 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.199943515 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20189407 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.201249639 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.202215518 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.204245788 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.203578454 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.203548759 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.200609633 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.199888011 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.200425984 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.200327248 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.201978145 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.202979268 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.203576708 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.201473074 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.205075271 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.2014198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.203485094 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.203939383 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.201594477 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.201461279 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.203888638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.201510258 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.201733966 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.204683553 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.202342652 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.205588247 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.20478558 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.201994538 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.201683813 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.204562078 seconds)
  done (took 82.807808219 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204226578 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.20538483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205292125 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20436022 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205093348 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.203894699 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204373537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.204640803 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.204770143 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205691152 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205801661 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.206030802 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.205453062 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.205588931 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.205583594 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206338732 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.204927982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206440327 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.205169905 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206807281 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.205593749 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.205377865 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.205546888 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.206853776 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205448772 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.20631101 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.206297883 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.206547513 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206915826 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.206701439 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205807787 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.206339767 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205828511 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.206928905 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.206955418 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.2070289 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207333924 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207492592 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.207271818 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206828546 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.207065363 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207371523 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207113958 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.207347157 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206674749 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.206835121 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.207613192 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.207721983 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.20771077 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206847368 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.207698024 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207735966 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207378813 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207661619 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.208379064 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.207828157 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206498013 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207959455 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207759031 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.20755471 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20776622 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.208526332 seconds)
  done (took 75.921675786 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209330842 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208374297 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.205963542 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.205759612 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208673328 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207547549 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.207906977 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.208626073 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208056089 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.20930281 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210501143 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207886578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209189366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210416825 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207957027 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209554606 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207378378 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.207637538 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20976589 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.207382165 seconds)
  done (took 25.289766212 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.207507177 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.210575278 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.207547072 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207402859 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.209894816 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.207719502 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.209629145 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209936904 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.208317241 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209822735 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210778799 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211759366 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207999901 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208730362 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210511904 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.208410318 seconds)
  done (took 20.47019522 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.208405737 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.210554124 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.210649407 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.210118062 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.207678149 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.208082428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.211714716 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.207350628 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.207732423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.211153558 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.211134369 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.211018607 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.211311212 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.211255535 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.208688681 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.211144901 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.208720374 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.209104273 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.211450278 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.211431072 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.210291518 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.21009317 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.212781518 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.212292675 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.209267214 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2110352 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.208475995 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.209339699 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.210169382 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.21298034 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.210374938 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.210458247 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21013914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.20948615 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.211995597 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.210457901 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.213383036 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.212916583 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.213846044 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.213367362 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.212406861 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.210004343 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.213889791 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.213142237 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.210555369 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.213132983 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.212132798 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.211972773 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.211809679 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.21045464 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.213486331 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.213970957 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.213609838 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.214716735 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.212626601 seconds)
  done (took 67.735162346 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21302336 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21421819 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.211062328 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.213882329 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.214794251 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.211715036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214005284 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21354966 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210592059 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.21348787 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212863867 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.215689853 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211532466 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214214685 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213235294 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214631839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21307123 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.212818724 seconds)
  done (took 22.966290063 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.212031946 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213174634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.21422912 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212239481 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.211673853 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.21625652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213319185 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.215970099 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216041219 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.213386611 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214078709 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.216020371 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215619628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.216577697 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.212834382 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213462126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.218033229 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214832395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212701574 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213332189 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216720901 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217700481 seconds)
  done (took 27.848178228 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.214926516 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.214748569 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.215293178 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.232414576 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.231134862 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.235564974 seconds)
  done (took 8.47341884 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220438389 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21675612 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.214166482 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217470274 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217402363 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214683665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21353443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215121221 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217620481 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215145177 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217839152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21962714 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217767597 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216783113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221600079 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218667245 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217706152 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215931531 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21542458 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218042705 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216646279 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218712479 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215445456 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215980721 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215902331 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215327358 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218356799 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214862381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215483664 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218424687 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218407451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215953737 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218275494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215729519 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219000164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219404952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216868087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219215737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218636291 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216466001 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219480091 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219888186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220231517 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216112945 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218601939 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216868453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216735312 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21756265 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217810241 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219472422 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219222477 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216872116 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220313493 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219939576 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221418442 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220207004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218082663 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21737122 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219965317 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21776732 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220082774 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22079739 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218541168 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218826976 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221307889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218573212 seconds)
  done (took 81.529204634 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217840135 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.21727252 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219931883 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219141057 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217377412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218850194 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218883785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219038915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219014432 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218947201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220898463 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219073357 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219331482 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219130212 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218624338 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219331093 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220050948 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220041972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218972817 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222477178 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220069916 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219615553 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220007231 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21902045 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220251463 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222241009 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219930105 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218787545 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218618264 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219495223 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219647331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219373194 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219092681 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219776744 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220505058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220292413 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220323929 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219751797 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220543787 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2227643 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220227812 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222993408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222016463 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22063324 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220818395 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219711907 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220585217 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219746233 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221332079 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220542042 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221781639 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221573589 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221421626 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220464194 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221633476 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221185226 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222235594 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222695131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221707586 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224492851 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221816031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221659639 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224648093 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221824182 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222573751 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223125876 seconds)
  done (took 81.683344119 seconds)
done (took 1644.030358417 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.386938567 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.338418802 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.22149236 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.221298981 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.222391454 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.220144184 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.221823453 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.223157887 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.222829931 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.222843179 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.22283533 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.411248165 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.226195211 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.223711169 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.222238666 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.317466554 seconds)
  done (took 41.26335298 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.249189824 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.230215345 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.335073768 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.245830012 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.252463711 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.403489218 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.281867048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.229804483 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.386717686 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.268724755 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.665999707 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.252498495 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.23073235 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.256303048 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.247181529 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.402152743 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.458465243 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.671767817 seconds)
  done (took 28.206747773 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.641277791 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.247266243 seconds)
  done (took 9.029945332 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.247522936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.229990519 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.230976197 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.229534569 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.221652965 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.222013767 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.229262324 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.220713421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.624957075 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.345251101 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.231681606 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.240479917 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.248858594 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.232182029 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.228658848 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.267442808 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.375246348 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.230034459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.227435892 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.237044568 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.231105975 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.313229189 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.268973841 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.228028837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.346528234 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.583462297 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.239509306 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.238328046 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.373374352 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.231103532 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.229604155 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.230897889 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.232002942 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.105550895 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.744963655 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.229907605 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.253623561 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.240086125 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.229550852 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.396652661 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.232633459 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.237917737 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.226354346 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.730586297 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.365714583 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.340066312 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.385004983 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.247860608 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.233744655 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.291291889 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.232196721 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.234871434 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.274945443 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.012902947 seconds)
  done (took 105.464768689 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.251527897 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.613602858 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.39354695 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.241823032 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938328869 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.937184402 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.240395191 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.490570672 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.302833413 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.225569646 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.506297302 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.709973104 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.248231711 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.237801037 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.730274091 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.285499716 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227109724 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.060740699 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.242440721 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.229184531 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702453089 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230170909 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.226832153 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.403905127 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.264641155 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.657520164 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.532343056 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.642973619 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.246773917 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.229509377 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.672307226 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.24191504 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.246535188 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.228513996 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.47699743 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.560440832 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.550094381 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.248784396 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.23326311 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.232741254 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.241362653 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.65272378 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.558661229 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.243812404 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.244869162 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.657970528 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.244334592 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.235691004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.232963594 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.433493769 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.896632281 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.230450708 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.53216 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.230179806 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.512749712 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.286259189 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.289793565 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.685670201 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244675727 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.304762912 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.291330111 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.228816174 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.228611179 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23399327 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.23254505 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.552639615 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.588042686 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.23107868 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.550047934 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.683741384 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.245223521 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.732658547 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.094034628 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.254097757 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.339761063 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.242633752 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.843170601 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.694476572 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.247347077 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.230605654 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.539673687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.248602775 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.496712785 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.244207378 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.244097392 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73052805 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.241539428 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.239010503 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.232475743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.238408483 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.971614267 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.230661256 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.486472379 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.292317164 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.23135988 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.230858454 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.244759938 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.231242681 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.247262764 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.231838185 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.734339147 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.253651044 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.334907422 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249090538 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23197484 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.232666412 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.233402112 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.233385924 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.454104702 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.68684452 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.25463509 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.234484883 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.232082793 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.237928386 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.401308588 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.236280131 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.515384154 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.248191969 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232313128 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.250855468 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963830854 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276053763 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.23293637 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.23349212 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.103160944 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.438043409 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.249932379 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.23415568 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.233309537 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.249570228 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.374995036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.249370741 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.313929845 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.238421185 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.917227901 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.253507015 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.264924235 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.557357867 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.237215377 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.003712544 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.253083281 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.233808757 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.513179277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.48864529 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.496932066 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.248019413 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.234588886 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.914062696 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.261376237 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.370323321 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25081261 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.226730342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.431356164 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.687921511 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.237218985 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.843847269 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.233952668 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451174277 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.234908251 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.526648885 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.703187957 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.2510227 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.237734821 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919809342 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.945930048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.08561361 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.235300055 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.4981303 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.179758962 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.714459282 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.235188807 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.236984417 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.793885755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.238928615 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.241938823 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.236976754 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.23555481 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.539917541 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.407458943 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.882728209 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238857764 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.663355578 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289066759 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.24522091 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.242756157 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.235847548 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582879776 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.327757052 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.238748246 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.253755581 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.238565234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.244916862 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.685221594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.133252648 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.240462384 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.386288614 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84748784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.252762202 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.237502036 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.845679748 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.462816936 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764417309 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.254573435 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.521527413 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.259806512 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.274193593 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.860337346 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.327039463 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.685479967 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.254187868 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.239132115 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.812281472 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.253307769 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.594453042 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.239399631 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.241425175 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.751809305 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.254444368 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.242295941 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.390340684 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.255125171 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506629873 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.240511532 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.245209917 seconds)
  done (took 1088.085182239 seconds)
done (took 1273.187014423 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.24244523 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.238286731 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.222539194 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.242607826 seconds)
  done (took 26.10320021 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.256638666 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.244896837 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.246849423 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.245441486 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.249859476 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.245427305 seconds)
  done (took 8.648040347 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.466700211 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.240869173 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.242403638 seconds)
  done (took 19.108350553 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.439347666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.43811585 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.554505396 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.265393303 seconds)
  done (took 9.856721302 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.249209591 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.248282147 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247531749 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.250511531 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.258872934 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.259241601 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.250777481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.251487192 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.258785497 seconds)
  done (took 12.43496079 seconds)
done (took 77.309248673 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.011948912 seconds)
    (2/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.494868834 seconds)
    (3/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.237690173 seconds)
    (4/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.466058651 seconds)
    (5/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.244943761 seconds)
    (6/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.242145561 seconds)
    (7/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.666949915 seconds)
    (8/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.212935895 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.497129572 seconds)
    (10/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.605839134 seconds)
    (11/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.342726732 seconds)
    (12/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.24182375 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.310336708 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.241472856 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.309020797 seconds)
    (16/286) benchmarking ("sort", Int8, true)...
    done (took 6.242181818 seconds)
    (17/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.567782207 seconds)
    (18/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.259212192 seconds)
    (19/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.250215551 seconds)
    (20/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.980014658 seconds)
    (21/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.225794785 seconds)
    (22/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.953555125 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.27732937 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.346275919 seconds)
    (25/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.718209842 seconds)
    (26/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.604155531 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.262360538 seconds)
    (28/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.224254643 seconds)
    (29/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.237019039 seconds)
    (30/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.658293484 seconds)
    (31/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.324790911 seconds)
    (32/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.98492484 seconds)
    (33/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.268370441 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.860684552 seconds)
    (35/286) benchmarking ("sort", BigInt, true)...
    done (took 6.245017325 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.364487689 seconds)
    (37/286) benchmarking ("sort", Float64, true)...
    done (took 6.242596415 seconds)
    (38/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.271371148 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 6.243294855 seconds)
    (40/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.25516138 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.347961139 seconds)
    (42/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.347665261 seconds)
    (43/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.226558882 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.226494482 seconds)
    (45/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.275803032 seconds)
    (46/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.036325622 seconds)
    (47/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.090975172 seconds)
    (48/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.24039545 seconds)
    (49/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.488652628 seconds)
    (50/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.416498674 seconds)
    (51/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.329383079 seconds)
    (52/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.587218611 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.642611378 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.375023977 seconds)
    (55/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.331441284 seconds)
    (56/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.446179954 seconds)
    (57/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.509800347 seconds)
    (58/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.224728471 seconds)
    (59/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.330294196 seconds)
    (60/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.272640766 seconds)
    (61/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.225866239 seconds)
    (62/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.110465856 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.235117532 seconds)
    (64/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.225754941 seconds)
    (65/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.821940669 seconds)
    (66/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.731229331 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.643921238 seconds)
    (68/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.684330137 seconds)
    (69/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.303702246 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.343209112 seconds)
    (71/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.421104927 seconds)
    (72/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.3467478 seconds)
    (73/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.594102429 seconds)
    (74/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.34411146 seconds)
    (75/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.24990954 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.643026693 seconds)
    (77/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.436270924 seconds)
    (78/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.312414291 seconds)
    (79/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.226869804 seconds)
    (80/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.265859705 seconds)
    (81/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.729853881 seconds)
    (82/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.168571231 seconds)
    (83/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.704104511 seconds)
    (84/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.247907537 seconds)
    (85/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.05519068 seconds)
    (86/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.248783652 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 5.400198432 seconds)
    (88/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.813790324 seconds)
    (89/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.231129657 seconds)
    (90/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.288742591 seconds)
    (91/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.968150263 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.442575561 seconds)
    (93/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.597170827 seconds)
    (94/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.474293169 seconds)
    (95/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.478713205 seconds)
    (96/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.064939925 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.91454632 seconds)
    (98/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.634103015 seconds)
    (99/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.260019443 seconds)
    (100/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.227462111 seconds)
    (101/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.265984991 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.34032488 seconds)
    (103/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.221813674 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.60716025 seconds)
    (105/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.028630429 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.350283055 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.126908619 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.747243069 seconds)
    (109/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.277027247 seconds)
    (110/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.29307806 seconds)
    (111/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.704435622 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.864240293 seconds)
    (113/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.38802741 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.461362628 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.311654629 seconds)
    (116/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.227703525 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.369542189 seconds)
    (118/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.087866342 seconds)
    (119/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.351170157 seconds)
    (120/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.288981701 seconds)
    (121/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.429499728 seconds)
    (122/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.608833031 seconds)
    (123/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.393727165 seconds)
    (124/286) benchmarking ("sort", Float64, false)...
    done (took 5.514991584 seconds)
    (125/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.028969073 seconds)
    (126/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.233732551 seconds)
    (127/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.275548424 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.542696033 seconds)
    (129/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.388597869 seconds)
    (130/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.249254097 seconds)
    (131/286) benchmarking ("sort", Bool, false)...
    done (took 1.809805619 seconds)
    (132/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.289302206 seconds)
    (133/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.230637071 seconds)
    (134/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.424700156 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.54277498 seconds)
    (136/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.278275437 seconds)
    (137/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.339121384 seconds)
    (138/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.530024385 seconds)
    (139/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.230209659 seconds)
    (140/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.066791385 seconds)
    (141/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.278132444 seconds)
    (142/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.276303031 seconds)
    (143/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.428056458 seconds)
    (144/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.263505218 seconds)
    (145/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.245482475 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.966990029 seconds)
    (147/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.516079613 seconds)
    (148/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.352960449 seconds)
    (149/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.261307746 seconds)
    (150/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.232361626 seconds)
    (151/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.884197873 seconds)
    (152/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.265433557 seconds)
    (153/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.461569062 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.230797542 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.153729547 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.995203104 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.272307662 seconds)
    (158/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.277029125 seconds)
    (159/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.314715708 seconds)
    (160/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.753552311 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.135115068 seconds)
    (162/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.23366161 seconds)
    (163/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.247656735 seconds)
    (164/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.012083586 seconds)
    (165/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.234387379 seconds)
    (166/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.274672708 seconds)
    (167/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.256884869 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.598381666 seconds)
    (169/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.21497422 seconds)
    (170/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.294193913 seconds)
    (171/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.267919962 seconds)
    (172/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.260062516 seconds)
    (173/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.238754891 seconds)
    (174/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.634795555 seconds)
    (175/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.458165919 seconds)
    (176/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.248562345 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.848328098 seconds)
    (178/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.252512092 seconds)
    (179/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.377996021 seconds)
    (180/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.233217856 seconds)
    (181/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.312894536 seconds)
    (182/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.271032069 seconds)
    (183/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.055692351 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.022501602 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.795366392 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.103950904 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.305414648 seconds)
    (188/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.26221138 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.829671701 seconds)
    (190/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.822917791 seconds)
    (191/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.25654383 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.84666464 seconds)
    (193/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.282184789 seconds)
    (194/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.232928427 seconds)
    (195/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.234030303 seconds)
    (196/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.38322398 seconds)
    (197/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.281264779 seconds)
    (198/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.295886883 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.658182121 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160515721 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.074577626 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.254176852 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.788705821 seconds)
    (204/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.313545209 seconds)
    (205/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.234729898 seconds)
    (206/286) benchmarking ("sort", Int8, false)...
    done (took 4.303450417 seconds)
    (207/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.281545987 seconds)
    (208/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.362132839 seconds)
    (209/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.234290126 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.336696821 seconds)
    (211/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.23858632 seconds)
    (212/286) benchmarking ("sort", Bool, true)...
    done (took 5.329049724 seconds)
    (213/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.328464484 seconds)
    (214/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.282099933 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.833422829 seconds)
    (216/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.264005095 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.236207842 seconds)
    (218/286) benchmarking ("sort", Float32, false)...
    done (took 5.26608305 seconds)
    (219/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.025952749 seconds)
    (220/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.892768174 seconds)
    (221/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.460687482 seconds)
    (222/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.350475856 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.885855236 seconds)
    (224/286) benchmarking ("sort", BigInt, false)...
    done (took 6.255029874 seconds)
    (225/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.374532421 seconds)
    (226/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.073350754 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.988084572 seconds)
    (228/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.535793433 seconds)
    (229/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.258565023 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.675448697 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.291765209 seconds)
    (232/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.255751328 seconds)
    (233/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.731252375 seconds)
    (234/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.278715998 seconds)
    (235/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.256795855 seconds)
    (236/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.581965864 seconds)
    (237/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.311623566 seconds)
    (238/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.265184886 seconds)
    (239/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.584851102 seconds)
    (240/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.595968392 seconds)
    (241/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.461981737 seconds)
    (242/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.248311162 seconds)
    (243/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.519583566 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.955755344 seconds)
    (245/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.357231104 seconds)
    (246/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.236968335 seconds)
    (247/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.23812561 seconds)
    (248/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.707115495 seconds)
    (249/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.458318689 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.374696811 seconds)
    (251/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.356857411 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.283299674 seconds)
    (253/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.237990595 seconds)
    (254/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.613521896 seconds)
    (255/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.587848819 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.648693873 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.344375372 seconds)
    (258/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.254249537 seconds)
    (259/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.284279925 seconds)
    (260/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.316495762 seconds)
    (261/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.492968875 seconds)
    (262/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.706902731 seconds)
    (263/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.955490732 seconds)
    (264/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.607632513 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.351757332 seconds)
    (266/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.352399924 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.340821097 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.374004191 seconds)
    (269/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.048663841 seconds)
    (270/286) benchmarking ("sort", Float32, true)...
    done (took 6.258217178 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.047096409 seconds)
    (272/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.572066964 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.248839629 seconds)
    (274/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.2401634 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.310600526 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.239761209 seconds)
    (277/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.302887565 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.25842452 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.53011877 seconds)
    (280/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.96876085 seconds)
    (281/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.239370712 seconds)
    (282/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.240444981 seconds)
    (283/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.270402513 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.282766888 seconds)
    (285/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.382940814 seconds)
    (286/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.418522858 seconds)
  done (took 909.345725477 seconds)
done (took 910.505165642 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.293190189 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296234631 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.270215053 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.292897172 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.389615277 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.297680685 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.281224076 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.27343214 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.318791347 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.321012911 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.278928877 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.297260927 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.281481125 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.279306983 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.270322535 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.295124853 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.276464102 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.280372757 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.296869276 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.281003452 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.29649273 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.278398183 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.322114674 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.297984482 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.275144106 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.27598335 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.283952414 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.300144612 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.392353877 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.283759702 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.276143949 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.291677095 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.277419767 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.270886795 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.267686389 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.300231242 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.291910927 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.282179407 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.276102786 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.312384388 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.660360844 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.296198769 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.283393607 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.27360303 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.274669376 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.277838826 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.282609349 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.281214085 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295658796 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297633405 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.646825855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.311979512 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.285084988 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.274126357 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.285655646 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.281841571 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.27841094 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.299549109 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.30234807 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.299688651 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.264633406 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.280150681 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.276494968 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.299132309 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.291531523 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.685496331 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.285299753 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.280553269 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.660675184 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.295250576 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.683856708 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.306700821 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.277717149 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.296694957 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.315678469 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.277145922 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.271757903 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.274652969 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.291245702 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.282481056 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.285258647 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298818022 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.281555925 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.276409817 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298884318 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.301149356 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.28626974 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.284836539 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.284557794 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.302338208 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.291632173 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.295592759 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.280301145 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.27206384 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.285816617 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.280811023 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.288794595 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.287444374 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.282129345 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.287005125 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.658371997 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318437254 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.273837299 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.274074362 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.276350678 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.299526236 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.66173179 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.301947069 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.299716104 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.326385096 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.280316057 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.270678253 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.290099744 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.303365243 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.287414834 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.281840877 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.273696464 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.269394081 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.652112736 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.315945818 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.280106378 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.284538432 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.305209478 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.280793076 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276896543 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.286218946 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.279912447 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303283977 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.408152307 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.289682361 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.320302111 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.285449639 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.283042017 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.300999536 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304658557 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.317938764 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.283428203 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.30476481 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.303034226 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.276149123 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.297941259 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.290142237 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.280777451 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.284784242 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.27437039 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.302599288 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.30113374 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.302345094 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.301632322 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.407977792 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.277868758 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.272821782 seconds)
done (took 216.530515071 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.338449541 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.272435361 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.368338165 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.277569281 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.376219966 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.37652586 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.274892864 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.275428687 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.274405781 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.654431854 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.275237097 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.274865691 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.278441222 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.27477669 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.360980832 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.277788678 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.275049659 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.61911969 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.278523884 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.349996145 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.271602 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.275541487 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.277047815 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.658518042 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.272690933 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.275537911 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.351614815 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.279118891 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.623978353 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.272978423 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.274482984 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.624403003 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.370325488 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.295980984 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.288868042 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.285460385 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.378064006 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.295575855 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.358943697 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.359588623 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.372856011 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.316322496 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.279487705 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.27820573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.280637343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.281164172 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.277508843 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.306418267 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.276188204 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.278259386 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.620743978 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.289209164 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.277916435 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.278757077 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.278832735 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.309237168 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.277601485 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.280987897 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.37045776 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.281351418 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.341524757 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.660308103 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.659472823 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.280402113 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.27957702 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.279187681 seconds)
  done (took 144.744333502 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.347366767 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.356199975 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.389990773 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.297272033 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.332131489 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.394797712 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.297645266 seconds)
  done (took 10.605043869 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.285129802 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.282763299 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.330596692 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331074444 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.281333959 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.470924334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283610793 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.293607859 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.28002087 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.332832913 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.283751411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283254957 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.289673754 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.280529695 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328603268 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.292698787 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.396006309 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.282658581 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.283207428 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.443362069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28153209 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.288745881 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.334831521 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.294136436 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.28466632 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.28817065 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.105165889 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282698799 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279750094 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.282936575 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279926255 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.359820476 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.283608034 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.28423434 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.280561546 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39654388 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.283828105 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281375249 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.283961195 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.281661912 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283670688 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284155635 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.284547266 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.28071394 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.283547282 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.306327899 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.284117592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.285846889 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.284609642 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.28534178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.334629624 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.285049529 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.282236095 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.28180794 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.336492916 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.290803743 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.28516843 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281159861 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.285942029 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283263188 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.445523738 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.340203217 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.28460525 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332338521 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.286084986 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.285273602 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.285693854 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.285350652 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339058251 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.285903768 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.332700761 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.284640272 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.471698799 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.308966014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288221443 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.288745284 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.288461972 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286664317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.280520814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.292036701 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.283499674 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.286740154 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.291859391 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283057158 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284640426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.45522352 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391230041 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.285240515 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.298516546 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.292281854 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.28384907 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.338678977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.287994194 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.285293251 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3380461 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.40138557 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.341682336 seconds)
  done (took 148.799165349 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291286522 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.294857931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.289498092 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.311780094 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.304818191 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286846568 seconds)
  done (took 8.975006591 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.290166242 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.288220681 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.287650402 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.288801112 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.288620658 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.288481059 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.288411074 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289638105 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.291362981 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.288283256 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.290745836 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.292313134 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.290192998 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.288613663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.289246001 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.288800565 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.289544428 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286750173 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.290204638 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288672434 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.383525916 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.289366327 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288371945 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.29002816 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.294044401 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.28969921 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296152981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.291057592 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.289668196 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.29662438 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.307633921 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.291564637 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.291342094 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.295446332 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.29432726 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.290905246 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293519786 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.295310664 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.288470582 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.29210493 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.294382543 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291728645 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.291129125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.29441462 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.293181603 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.294602958 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.298915621 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.299014726 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.290897051 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.29475026 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.29541731 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.290684492 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.291873468 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.295687723 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.293414943 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311603617 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.299290352 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.292927137 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.292180263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.291380106 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.292878076 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.293153466 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.29376329 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.295849348 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.299384866 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.296205445 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.292354841 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.295902075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293499354 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292061827 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.295791456 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.291650665 seconds)
  done (took 95.36232768 seconds)
done (took 409.671636931 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.600920158 seconds)
  done (took 7.802033033 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.530678098 seconds)
  done (took 7.733967895 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.262994567 seconds)
  done (took 21.472493796 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.311372992 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.369264366 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.305228904 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.296570382 seconds)
  done (took 26.485126194 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.42726027 seconds)
  done (took 7.629003149 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.298598783 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.294580923 seconds)
  done (took 13.797647861 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.727609735 seconds)
  done (took 7.930521455 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.566686816 seconds)
  done (took 7.775429941 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.298062718 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.30773356 seconds)
  done (took 14.063616492 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.286592124 seconds)
  done (took 7.490483659 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.064615713 seconds)
  done (took 11.271090743 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.293938053 seconds)
  done (took 7.500119478 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.342988421 seconds)
  done (took 7.54821078 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.115376004 seconds)
  done (took 9.319460568 seconds)
done (took 159.019589536 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.289546595 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.291549835 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.290914129 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.29013752 seconds)
  done (took 26.36753414 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.331429112 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.330341127 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.331427774 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.340682271 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.333858191 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.331555371 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.322876722 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.323737267 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.342179441 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.33446687 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.333371188 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.33340302 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.331315385 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.322486098 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.332990437 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.334258906 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.341893671 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.332299954 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.323646186 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.335092162 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.29981273 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.343244963 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.338285555 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.298981626 seconds)
  done (took 33.129555559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.818722122 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.369039835 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.451405665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.350598279 seconds)
  done (took 7.195578408 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.351139246 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.35191252 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.365175314 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.405827896 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.428434373 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.362619232 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.326346517 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.321284299 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.307460328 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.352492537 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.428803131 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.368905888 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.438091714 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.301321903 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.488358832 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.301194186 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.300025387 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.351620541 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.404154479 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.429875444 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.30160739 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.353753865 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.35633646 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.370437097 seconds)
  done (took 33.974363277 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.299961799 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.318546773 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.299838379 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.299459826 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.30839735 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.300180643 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.302725728 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.300293276 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.299502336 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.30641321 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.299295145 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.313305101 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.299069127 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.300616145 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.305889158 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.303174701 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.307832141 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.299318772 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.301783126 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.30630808 seconds)
  done (took 27.280361793 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.293566989 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.150736134 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.645210034 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.549002845 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.294659269 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.298302689 seconds)
  done (took 27.440905761 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.368646779 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.513538536 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.301757359 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.640636804 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.736356778 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.317303599 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.302620794 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537404305 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839368107 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.82836065 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.357516009 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.368108886 seconds)
  done (took 19.323090184 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.30873842 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.298767203 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.308987181 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.314004125 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.354137456 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.320516619 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.309459786 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.294675217 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.356465181 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.374452862 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.320807528 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.354903062 seconds)
  done (took 37.127293342 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384493184 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345357811 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.187011033 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331109412 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035798595 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50866489 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352266533 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.006764497 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.320490799 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571418311 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311456423 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388252075 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556879814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29855645 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.31798333 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.232786177 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54370068 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750364498 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299638174 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.390218932 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323623216 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308759834 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.283124527 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.522382471 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528002973 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.276460201 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.559023359 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.07652248 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575897562 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312465652 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310191199 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.300134478 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573874671 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938073618 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4161947 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504319792 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329656954 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928607005 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.287666961 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.205773827 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302872347 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.301976516 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310663875 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301223053 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.234217322 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307745928 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997672375 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.323567928 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.011355766 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.301379339 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552673966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397469571 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.305221076 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.870931996 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383836827 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326397533 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.304453291 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390286636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887688217 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439052909 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309096496 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.238161909 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302642687 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.213279151 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895225519 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.322375791 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.306627574 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304940393 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235540798 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.211867309 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.318556176 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449593008 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.327249933 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951764839 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968566915 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326356588 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.232105149 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81761915 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.303988277 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.239789558 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530595687 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.081006767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238647434 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.249791152 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.236335143 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962562177 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314535633 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.804533088 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325480575 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010402668 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527626143 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337769303 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327070615 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526942407 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.182070335 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30370139 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.309180252 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431584542 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325245703 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005412013 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255570512 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.308200218 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559687417 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.514816884 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315160594 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.23751866 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79428627 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323708443 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.322814344 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.317109021 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.513623807 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.878454386 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335472273 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453731549 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327240048 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.080645783 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003563578 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308997017 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.311762847 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.316900215 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570752716 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.020348563 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.191117957 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373214754 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310396698 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305612261 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231992601 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.155687252 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.465801844 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.495209751 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327207401 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.318127813 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.307667278 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253281646 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.30420522 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306416888 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.100879279 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52903619 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318729399 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.585554361 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239642736 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453288742 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315123402 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.528777665 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46711912 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.328396373 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565087563 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318403242 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.320009866 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321418688 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326267703 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407687167 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329005338 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.31918245 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564818327 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.312525984 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.311370835 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.235496535 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.09062145 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315798554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.312528347 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309848708 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869803189 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325160074 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312027219 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197574991 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.32266162 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375869962 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314354215 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.51598392 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.508132061 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339005218 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.313701565 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.318919942 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534918868 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318924449 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.231882139 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392848024 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.77613976 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891367977 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338977977 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.244591182 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.02117109 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.001581051 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3091014 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.498075407 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310426871 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516776939 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342060184 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308753738 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.873600995 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327496905 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.244700011 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.315796705 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322480627 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.315526059 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310953083 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.487731978 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484896089 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315801908 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.323175467 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453943924 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.325673433 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.245239164 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.82797006 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.316929964 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311460704 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.085661955 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346264318 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.257390946 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109898516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587606557 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316249276 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564050071 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.328287146 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.343234675 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.321224378 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32049307 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319190405 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.337912209 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319770015 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.323110122 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.254388438 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.749825801 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879043512 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007942276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834305673 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616611259 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.343000885 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.1983033 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011853792 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264725124 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.968938046 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544148044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040201706 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277769867 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789595521 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.502330664 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070962539 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570541932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542288602 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599719955 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.348144732 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568569269 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525825665 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34825002 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326124553 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.244428931 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.610644524 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857349778 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3385718 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391339588 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023810351 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335151159 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.106455228 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.367154143 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.971964715 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.709699208 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.879979663 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.736944325 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319367144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318933601 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12719645 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336785644 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.840679636 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912214211 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337955751 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.78566502 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270424089 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.523022317 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.346439625 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.312746746 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.818749442 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.763096228 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.57189183 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570073461 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251548221 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.315941893 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823579715 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.190277683 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.321136382 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316753826 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017595337 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319589842 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613291322 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.320188829 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.490228716 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33902731 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250312201 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250818437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.009277029 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32653172 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303334849 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772376462 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.323584808 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338764051 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323499604 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16344129 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.572902068 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.331132331 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.876225611 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.557409454 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321207535 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340209175 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.320414355 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.327511622 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.302467013 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.222693779 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.553560374 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345246933 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542967082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.233427687 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.22357457 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37700929 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532776545 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.199672896 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319067909 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572866286 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.045668178 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.329974002 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003408257 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35966935 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326516968 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331740634 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320130147 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360574553 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407942411 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527826258 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.349637409 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.329499012 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710803305 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34200032 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324501019 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.333747088 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413050029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505042394 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.508779794 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.108500154 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884700336 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034787908 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902772319 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591620924 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322752323 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321440362 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254375912 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468424997 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.846899635 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594354247 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449721819 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.329939938 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346372747 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332429519 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32415578 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550499954 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595275517 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.191077095 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33329718 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075866522 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.202081406 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331798799 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.533570525 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781332563 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84537438 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431718892 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324274402 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035490497 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613462839 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.412282438 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322037996 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911807485 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.341823959 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.000644195 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.331094363 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322513193 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468734587 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575277767 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972867118 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.353103557 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.48239227 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.095926278 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277250597 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.578564624 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.766466266 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.536124465 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906512107 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017268753 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585916809 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391931858 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533104379 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.458385089 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470385258 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.319871557 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.221149459 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32344946 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167797925 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.033501065 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.333273793 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894944111 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601941809 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.326768339 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.328473204 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347917404 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.333251983 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.546947197 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995794513 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549519275 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333316765 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334875263 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.897734623 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893292055 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596060027 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260169262 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.32862183 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561156289 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579173131 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350697055 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.778750271 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.036005466 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849949616 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.296785128 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346476228 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329255104 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00684273 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899183175 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.537108785 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80138772 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.983970744 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326119094 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602652657 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.331245371 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337395153 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604390619 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.329695138 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.326093133 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557004247 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.907864713 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096611206 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.327790978 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.323185616 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.265656425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.552016369 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340878309 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283117357 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326860057 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.728374963 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351638545 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456738198 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340217937 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.332713563 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327704458 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.063587671 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61237312 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.332490132 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.341229625 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.315300911 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345800966 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421250923 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878892413 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351630116 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.002100187 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.680396048 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582530058 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.330614978 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.311098194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.331937395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328430495 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045399911 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296245973 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337498492 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858426958 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.336802053 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.342461861 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332366655 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.543633576 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539828013 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330021728 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543689186 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350413567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346811565 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.228949876 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094294853 seconds)
  done (took 1644.282670578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.329987729 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.343234036 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374203001 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.350014008 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.358883952 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425222276 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.370832199 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418586386 seconds)
  done (took 52.211937698 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.328352526 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.499215721 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.359569326 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.339730183 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.338535306 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.331044536 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.785755189 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.348329335 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.339232322 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.341525703 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.338768805 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.334424269 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.95757226 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.339744254 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.33044469 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.345053327 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.339855149 seconds)
  done (took 65.245139028 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.229044095 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.597706558 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.990565303 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.403394342 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.3380804 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.333702351 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.810691907 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.346804467 seconds)
  done (took 58.293489688 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.341093904 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.341334407 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.343409655 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.341838127 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.342121566 seconds)
  done (took 7.95431152 seconds)
done (took 2041.03263727 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.335832235 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.338462575 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.333938794 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.33836369 seconds)
  done (took 6.589743618 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.31212008 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.002912034 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.313944665 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.330242075 seconds)
  done (took 18.202735595 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.367790313 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.341646799 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.014016841 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.915792467 seconds)
  done (took 5.175556178 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.083897067 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.093558765 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.079621623 seconds)
  done (took 7.503223288 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.331890232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.335319239 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.334613708 seconds)
  done (took 20.246609746 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.628197335 seconds)
  done (took 2.873498491 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.479747014 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.528612888 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.649810514 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.656381451 seconds)
  done (took 7.560648526 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.720336395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.714064819 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.522711166 seconds)
  done (took 6.201717435 seconds)
done (took 88.306611453 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.056798229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.333218439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.537551316 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.072138381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.563932115 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.538561626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.543265129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.036924567 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.54246937 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.530212786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.033042552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.565091462 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.49385367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334255439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.497392147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.71389102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.566619887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.110822247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.718480243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.916944165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.54953397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.670406322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.864125681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.689903765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.565203755 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.488895523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.251305541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.709904616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.893940333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.267306232 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.488323037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.091063123 seconds)
  done (took 188.48100136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.334875967 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.335009317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.351167987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.334781066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.357539865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.335574635 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.335887084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.352037503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335073309 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.336510206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.334772155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.334376202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.33613568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.349183614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.337748796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.33598203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.350821727 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.352689773 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.350929109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.335815255 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.351781915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.353173044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.364336481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.350142062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.336277486 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.33691955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.344523744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.346487831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350875917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.348480647 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.337395228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.337291039 seconds)
  done (took 204.233183964 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.336567683 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.367086074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.337897986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336821354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363038164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.336127599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.337200741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.336686811 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.337389241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.33725963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.360489964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.345414881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.338587473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.337202322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.345725517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.338992476 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.337896683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.337729514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.3420125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.337961436 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.356387662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.337394721 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.33741195 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.350921436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.338189852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.339463071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.338326481 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.354267452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.355555064 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.33860751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.338519927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.338570809 seconds)
  done (took 204.221551788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.534131651 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.346947143 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.346772218 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.280157204 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.346282883 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.346713165 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.340725781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.543887202 seconds)
  done (took 14.33658366 seconds)
done (took 612.51823677 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.618132557 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.328625303 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.54147773 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.366592551 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.096483625 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.384314534 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.366453489 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.532661972 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.251401365 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.538755496 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.543316845 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.380712296 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.683633593 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.365130475 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.615745177 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.465864501 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.250747857 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.37304063 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.68002988 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.870291512 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.620736135 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.784945342 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.551304394 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.250017097 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.697308532 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.781912623 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.038433175 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.242898191 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.383070808 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.682378253 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.961195103 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.313459046 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.407469617 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.424488539 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.481913568 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.464710762 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.258563639 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.422013102 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.562093884 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.551923463 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.866361155 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.074996434 seconds)
  done (took 91.32880558 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.331298883 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.331050345 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.330235231 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.331745237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.331752508 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.330619437 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.329540966 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.32978922 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.331117426 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.330716888 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.330729073 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.332320762 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.330363346 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.333099416 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.331009473 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.332076051 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.331007611 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.3331959 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.331104551 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.331339936 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.332303861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.331440888 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.332517033 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.33178815 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.331688348 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.332420469 seconds)
  done (took 35.872148773 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.350967177 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.596608876 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.759715312 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.359021314 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.350911621 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.354325821 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.427212543 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.356325722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.354220788 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.354436003 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.503542345 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.353772756 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.387727095 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.783486198 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.356399985 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.35283605 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.352235807 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.351991405 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.604169996 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364246296 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.449682905 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.354658331 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.428352835 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.364596756 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.375526919 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.352897416 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.357966765 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.92141946 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.37244119 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.505342796 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.119021947 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.427874175 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.875887567 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.787294535 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.122776444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.35636782 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.354145025 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.507829946 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.355509066 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.353364392 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.429534685 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.353626444 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.768158835 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.017234928 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.371750504 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.354851156 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.939306163 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.527633978 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.590022183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366304367 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.795407329 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.359792631 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.355342452 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.355945247 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.591533068 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.361196678 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.354661324 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.954664249 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.378304398 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.430131091 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.358585903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.354051005 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.609709897 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.355792854 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.599215022 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.357647024 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.363172729 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.374824212 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.767656152 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.357628632 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.041718002 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.372969941 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.357853839 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.504568979 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.599079224 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973348369 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.376525966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.614597008 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88998529 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.448200305 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.362548657 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.914235609 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.449886097 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.360639016 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.360419504 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.359094165 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.357950571 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.40865233 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.429868842 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.979076034 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049211121 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.979452623 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.4507981 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.365922663 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.357297277 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.957039952 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.375570041 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.356174973 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.763212758 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.043244903 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.37426263 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.366136414 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.040509966 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.376103297 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.434451688 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.362483587 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.776143661 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.35898565 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.410468492 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.358668857 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.365395707 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.379392346 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.435193159 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.361723182 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.358643412 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.01565282 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.532992332 seconds)
  done (took 178.996492847 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.361808934 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.35236253 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.361612762 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.352613975 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.351050559 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.360877899 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.352459053 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.352137188 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.357386341 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.351960828 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.352625431 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.35595369 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.355357721 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.356678544 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.364343699 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.359498758 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.963959729 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.354378621 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.352009379 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.352516061 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.144215741 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.357162625 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.353382583 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.372677463 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.355986435 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.356593917 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.36064987 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.355356591 seconds)
  done (took 152.640357503 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.360856873 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.905392632 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.378008601 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.486753656 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.38414831 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.359773781 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.486393418 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.418370494 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.377728177 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.358574933 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.361428459 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.65232348 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.363347355 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.857345778 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.547384487 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.504632575 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.857560915 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.37892496 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.359162462 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.359581197 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.488887124 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.366416379 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.655393615 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.914445061 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.382035448 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.91109394 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.348512917 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362941124 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.36088546 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.913059781 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.379534787 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.65733388 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.440006659 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.421722163 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.923765742 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.876472387 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.875827218 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.505159912 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.362092459 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.361317416 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.362621551 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.34462867 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.910130351 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.380365892 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.362531251 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898680327 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.381900954 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.363970158 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.368606832 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.360729635 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419765367 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.438898388 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.67450887 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.91705295 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.454389636 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.375610928 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.490268989 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.731694406 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.36618355 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.863868889 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.347950401 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.916260589 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.381639684 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.346505278 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.362966436 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.369530268 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.508771226 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.494224107 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.867646463 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.383167969 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.861957004 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.526622115 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.366673201 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.364374987 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.365091234 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919673566 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.882964759 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.526355871 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.497272063 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.555920566 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.34880139 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.364399927 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.347338772 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.440491597 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.364315866 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.91853545 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.883109652 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385190791 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.367096239 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.366363669 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.368269825 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.535696973 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.933757761 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.457682811 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.853044516 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.677729465 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.661910105 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.367162471 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.422190837 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38076117 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.663561895 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.367806927 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.422218055 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.795974697 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.665253393 seconds)
  done (took 162.203911378 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.598431169 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.517145151 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.455775025 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.50872796 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.952743341 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.916555467 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.597756577 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.504135603 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.474007856 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.623743617 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.484385736 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.455118356 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.574623484 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.44266493 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.077757773 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.453303755 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.473733793 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.5125807 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.523856484 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.3537438 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.029781641 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.642813319 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.548733748 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.218355441 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.458628533 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.109713894 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.917160025 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.935038665 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.542296842 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.62267704 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.896024574 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.463464711 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.315953948 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.048177227 seconds)
  done (took 65.519891662 seconds)
done (took 687.8126044 seconds)
SAVING RESULT...
DONE!
