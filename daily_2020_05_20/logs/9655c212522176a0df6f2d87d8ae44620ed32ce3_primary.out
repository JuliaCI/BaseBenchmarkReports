cset: moving following pidspec: 18331
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32369803 seconds)
loading group "string"... done (took 0.592232397 seconds)
loading group "linalg"... done (took 8.038310009 seconds)
loading group "parallel"... done (took 0.168443181 seconds)
loading group "find"... done (took 1.326996065 seconds)
loading group "tuple"... done (took 2.014210409 seconds)
loading group "dates"... done (took 1.33350145 seconds)
loading group "micro"... done (took 0.279744361 seconds)
loading group "io"... done (took 0.932255455 seconds)
loading group "scalar"... done (took 40.68685405 seconds)
loading group "sparse"... done (took 12.532202632 seconds)
loading group "broadcast"... done (took 1.01684194 seconds)
loading group "union"... done (took 14.239489767 seconds)
loading group "simd"... done (took 4.957687946 seconds)
loading group "random"... done (took 9.29454772 seconds)
loading group "problem"... done (took 1.815407954 seconds)
loading group "array"... done (took 21.443616531 seconds)
loading group "misc"... done (took 1.747346369 seconds)
loading group "sort"... done (took 3.397473908 seconds)
loading group "collection"... done (took 18.107387293 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542652731 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123759898 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136616489 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120046859 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149689254 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11726012 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124419621 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084416046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.860094357 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147541183 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114090956 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416514888 seconds)
done (took 5.331050213 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17541997 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08840848 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079617718 seconds)
  done (took 1.231323507 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065831432 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127580441 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06725348 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067748206 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070460119 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068016759 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06866775 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068524351 seconds)
  done (took 1.602217331 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073703113 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069428818 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066751546 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069431851 seconds)
  done (took 1.346618974 seconds)
done (took 5.497132489 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.796496482 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209360961 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188861141 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411194259 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135957639 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.17820606 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6519015 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320753628 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192956067 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094213928 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113093066 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39096816 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124515097 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.655318272 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077974877 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096124746 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141884069 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.471794402 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071318464 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085931856 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093428152 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130955484 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080670239 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076735302 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149906103 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070987694 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143737643 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083304601 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069602626 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255526858 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175591178 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661870831 seconds)
  done (took 10.503993982 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102124352 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099797398 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069429989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126289741 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098024764 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071710161 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077926842 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070060541 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092826326 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133567138 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091527203 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108242682 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066664396 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069769776 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084985785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199797095 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08031156 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081639699 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071127804 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080462234 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11551815 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078409092 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081700019 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082694711 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131737912 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169522944 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096922457 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098385565 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06756298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081549505 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115747399 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127704637 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066521896 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06731431 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125583672 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095506522 seconds)
  done (took 4.585973581 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.008858771 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151302659 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090043999 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135607663 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065229245 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110047709 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06649009 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083376854 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237934715 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.382239582 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638973929 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.150005814 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119804393 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106756448 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071049033 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070217511 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072198236 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.275698809 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098703662 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112805373 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083601426 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07161797 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06963009 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065754971 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072249542 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064467304 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069138472 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087962877 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077308176 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.331571857 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125753641 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069153615 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.050513679 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.069971445 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165988703 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067818797 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064239451 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105365152 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094079037 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140760004 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068356712 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064255423 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.300369427 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067453041 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07426224 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069333662 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088355619 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112018409 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125239827 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067424697 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068686551 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172446773 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067911938 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084563314 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066650894 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.217565665 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152875793 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065953022 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.299985718 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092798029 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073997164 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067607041 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.192692881 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120108287 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069174293 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069518106 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071910848 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071102051 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375828437 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06888064 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.067061476 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071585488 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079325209 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073257366 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074134439 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079510184 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079156206 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091538387 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067783849 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074482165 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067511882 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066239216 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067093006 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093989279 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392042601 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067703033 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072413537 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067045557 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094737448 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100871194 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069703015 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067883355 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104820913 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092230388 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070366628 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066235205 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067830326 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118657418 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070583734 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112520604 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069656865 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170381689 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098517599 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070286696 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101839223 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079619169 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071463619 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.468589391 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066298451 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073023342 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067597455 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065558193 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068661565 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069787657 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078933915 seconds)
  done (took 22.078072297 seconds)
done (took 39.243154357 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242225435 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08320519 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083519793 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083918562 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084104046 seconds)
  done (took 1.730477314 seconds)
done (took 2.865910498 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125991189 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099198187 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064882668 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097995686 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065089356 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103771403 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102918464 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083834206 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099507149 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065208877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097324147 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065149096 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065443742 seconds)
  done (took 2.286792574 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082381166 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083699191 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069460381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08218425 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062839995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08208103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080988996 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088938368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081194464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072045724 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062760495 seconds)
  done (took 1.979339604 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082221491 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083414289 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069287392 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081507676 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063080884 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080966784 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080925237 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084893341 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081967802 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07398679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063168036 seconds)
  done (took 1.97330666 seconds)
done (took 7.360693005 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076310265 seconds)
  done (took 1.193175894 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533765828 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.569859679 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078244274 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099857568 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194785276 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108260154 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235590889 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083440314 seconds)
  done (took 8.19419667 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107155099 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070420086 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070264385 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069234513 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070637902 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069568511 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070260353 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070809214 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069611624 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068907269 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070316621 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070954689 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069277048 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069720959 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069266961 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069846515 seconds)
  done (took 2.357326562 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09770717 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095594367 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073832547 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075531684 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073343514 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072063052 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07501874 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074693486 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071616721 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073097311 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077139746 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076223769 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075423888 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066295355 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076651321 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.0783443 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073565253 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07671238 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077419959 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078373088 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07761107 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066184625 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075732419 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076487506 seconds)
  done (took 3.061585049 seconds)
done (took 15.932352961 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105331169 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068285994 seconds)
  done (took 1.295987122 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079184708 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080022187 seconds)
  done (took 1.28880611 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078100124 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063504648 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083744321 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074012295 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063530332 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06342795 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08209543 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063383672 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063247282 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063682898 seconds)
  done (took 1.828349933 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065346867 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072967431 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069358793 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078927141 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070574928 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064860919 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069090086 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065571846 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075008322 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065663634 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070142062 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085640567 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070279476 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086813816 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071056357 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07013189 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071851591 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068663748 seconds)
  done (took 2.424853881 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06319022 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064940225 seconds)
  done (took 1.264097182 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066737135 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063579394 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066278847 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066458752 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063411401 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062548301 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06432645 seconds)
  done (took 1.586799979 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.3985234 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122226537 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329491556 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070406656 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080264801 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256185683 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064480791 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06942232 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069479215 seconds)
  done (took 2.63690464 seconds)
done (took 13.465929014 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080868719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086686515 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096867528 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409976567 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092786912 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068043477 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113896051 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17880004 seconds)
done (took 2.277931514 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213681774 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.81017542 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.480763756 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206043014 seconds)
  done (took 2.640593803 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344968823 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.195789025 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07714823 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066958672 seconds)
  done (took 1.840292485 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067037165 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070168649 seconds)
  done (took 1.285525924 seconds)
done (took 7.127735002 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066299555 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064732564 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065648659 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089607734 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064596951 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064587451 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064766184 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06504656 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064966398 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064747195 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065258187 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06484137 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064984077 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06483588 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065066945 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065198702 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064731969 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065012321 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065872471 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066542367 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06723495 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066457182 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066828145 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066355837 seconds)
  done (took 2.775583404 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081832268 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066999333 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068973663 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06847106 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069016016 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068716877 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068487675 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067176875 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069147821 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067105499 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069197954 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069099187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066700974 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068858518 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066600556 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069399056 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068381194 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067478795 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066783953 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06923721 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068266583 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067357504 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068741267 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068582763 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068798474 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06910667 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066924784 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06704452 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06869455 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068993126 seconds)
  done (took 3.218370919 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065504424 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06107409 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061860305 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070709341 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06136839 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062428897 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06128552 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062331994 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062400275 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061601963 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062159191 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061140754 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06123394 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062189489 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061867974 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065375288 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079377943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061186151 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061635173 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061946619 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065747134 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06220214 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061340381 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061128758 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06420866 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060929835 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06214345 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061239808 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062000566 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061408562 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064916176 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065802144 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061132542 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069825216 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065441805 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0610007 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065483542 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061275181 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061653332 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060907712 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061299436 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061535538 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061176716 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070325151 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061738592 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062311468 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06109376 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062397158 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062208562 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063358714 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061128977 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06124561 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062944547 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062301791 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066297769 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060998531 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062121166 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061001234 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062366941 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061222206 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061652904 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060936802 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064746108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062368302 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078443212 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069847131 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06133668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062398811 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062041881 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064224229 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062678025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076931685 seconds)
  done (took 5.725262954 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085679957 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088046319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066521522 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066126852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062075086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061857456 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07019746 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062017561 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066961058 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080926666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062080134 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066431244 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066675054 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066455205 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062201972 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066831965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070206044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062345832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061851904 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065898104 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062546757 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069778817 seconds)
  done (took 2.668088252 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.145908354 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068462649 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105276342 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072646157 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070348746 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072495563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068445857 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067908295 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06827668 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068320317 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06880868 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068333085 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070398253 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068890067 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068915946 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068259783 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068299851 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068323472 seconds)
  done (took 2.526718401 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078411032 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067623048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087119376 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067343144 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067476857 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067096158 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071416776 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072152207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067071004 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067846056 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072183283 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06699008 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067112126 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067918622 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067059095 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067244724 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067484859 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067277971 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072073874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071244775 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071324806 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071991072 seconds)
  done (took 2.711320082 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087531294 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066256928 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083053689 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06884207 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062051694 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061839682 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068033451 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066924493 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068094163 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06619815 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067300003 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062185208 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068978799 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067296208 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069468471 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066836512 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0667488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066696757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06657554 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062088868 seconds)
  done (took 2.532838154 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084021366 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06511771 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065032681 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070879036 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065130127 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064881152 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071487748 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065529675 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065426339 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085962728 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065278753 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065525794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071319778 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069192716 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064889581 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07103364 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073672964 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070975934 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065137384 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06516165 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085565822 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065222766 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071131252 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064857544 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065116844 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064986442 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064762819 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068982628 seconds)
  done (took 3.106157828 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065444156 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06477096 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065648995 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065677935 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066530967 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066534015 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066899711 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067256823 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066346422 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066571249 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066556978 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065714556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065654692 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064688077 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06482034 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065259425 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065168513 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065542422 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065265605 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065135677 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064836694 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064985441 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064638802 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065207687 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066687956 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065991204 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066997346 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066672322 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065843851 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066514955 seconds)
  done (took 3.148235526 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074769996 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07389022 seconds)
  done (took 1.322868227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064171155 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079754112 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061348865 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072785963 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070109518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06534862 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071404103 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070770987 seconds)
  done (took 1.725178176 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085168415 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075901177 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064774476 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075974597 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074994445 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084578654 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126591582 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064328106 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074381741 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064903668 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082642689 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066213808 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07422511 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068953362 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0743491 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077412975 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061820084 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068748733 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065415603 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062263402 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065001822 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077452435 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073575404 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062043591 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069326364 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091582313 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079675441 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063331593 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071310984 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076126911 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074002054 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061268784 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06416132 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063909858 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062215474 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074917463 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082149625 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070911161 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076345986 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064410936 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071697906 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06170802 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072434355 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074561083 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079025282 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063880298 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063486901 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061916696 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064843939 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069742093 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061750317 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068179913 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061829904 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075690895 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071931503 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078897544 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062082742 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069622615 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070025186 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070837065 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074824876 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070137353 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073001638 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063576177 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078904418 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073792233 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075426721 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062046103 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061294475 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06198348 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077014026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091599251 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072908981 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063654793 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064127538 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061447394 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070330818 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063696927 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072803238 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075526619 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063636208 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068181783 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075467754 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068353272 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069968385 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069708602 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062311233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066610589 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064416114 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083095538 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062356455 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061499682 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064452155 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078429184 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072851434 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063085978 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06446071 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075005522 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060863112 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063583623 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064158086 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069187175 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076570916 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067241135 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067640965 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076598693 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072448349 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068370768 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069924369 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060847997 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064188392 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065173658 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074450114 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060393775 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069646202 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066781722 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062737942 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073661461 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060926054 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062105969 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074508532 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073498858 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061241089 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059736384 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068652391 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062043848 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063968711 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075292143 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060596041 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060792152 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060087725 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069660485 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.061496549 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069396339 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065543818 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069682807 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05965408 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.185988057 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069745625 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077261642 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067818595 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070583845 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074981181 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06998494 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063493052 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076333013 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070381142 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065842241 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074070404 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068402919 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062172045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066258784 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070478287 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063188919 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071538059 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066076912 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070803892 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064457673 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063492322 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070273507 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064628553 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065724584 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068608711 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06280448 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078982249 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070954669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062052056 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061124767 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07073156 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065534346 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065122761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066776313 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070895366 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063832058 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06206848 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06396128 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070754065 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073019673 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066829482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065435467 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073998381 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08072844 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064083896 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072348118 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065256346 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06633398 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065147485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077905025 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07443059 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06808862 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070611535 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06115409 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073199749 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07593134 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06588363 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062097532 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065973778 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067165842 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075074386 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067174305 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064155103 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061960596 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0693113 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0662118 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070248227 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063420066 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066145806 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06890921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062224371 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06924846 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064395723 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077922001 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0709141 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06185964 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065671977 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062012042 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074508087 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06144887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0648779 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066089491 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064580452 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062743248 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070143094 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061062683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075841097 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076151455 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068748049 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065638261 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063330996 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07585554 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068762481 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071577223 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070725293 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072950599 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078615157 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065913027 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070275397 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078361156 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06335906 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060837548 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072790757 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06499296 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062250665 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062711889 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06223169 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070507876 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070181013 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073603942 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061010456 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070128936 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062528811 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066165182 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06186039 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072336434 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070723314 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067578859 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075270574 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063469992 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063182864 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069953088 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062059357 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063296401 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063068675 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069236153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062969856 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068695535 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065407587 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068183572 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064539317 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060455753 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067774207 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062040304 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067484353 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070803371 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061905484 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067752475 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068646277 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062514979 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068248929 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066390193 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.195344268 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072757161 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072527281 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071906257 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073055805 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064270243 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077799044 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065775392 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078269408 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071397182 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062219628 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070974328 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072272094 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070528132 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066009789 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066392468 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070998532 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065342449 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072545352 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078240973 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066611281 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081270275 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07667837 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071477433 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07266777 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071196042 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071501802 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06830158 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069594898 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065948764 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071362779 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066154088 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073617646 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072382498 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07037764 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072152655 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066481226 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070595385 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067044396 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063218552 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068024767 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066903784 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063747823 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076113449 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064652805 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066933041 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062792095 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064727245 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062959697 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061176034 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070717483 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070701846 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064167529 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074179769 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066317179 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069750705 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0791764 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061802824 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062852703 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061793151 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065158586 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076492027 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064032052 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07721196 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069164987 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066277783 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061270812 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06415091 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062443846 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061413195 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062108033 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072568368 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066345352 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062916856 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063826639 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070615068 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064526145 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076126929 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063335269 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06764794 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064776416 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061484498 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066243968 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065961747 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070499234 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06430198 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065014717 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061606056 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063779567 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068383384 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069559762 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063748344 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069845246 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075511517 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063718322 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070600857 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066123932 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061450639 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070542665 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063338777 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063250692 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066513978 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070702282 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070750039 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063744956 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077955139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063329271 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072086561 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063601177 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061751988 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062958142 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063440603 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063284546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065939813 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065008499 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077119997 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061719634 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069503265 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068578868 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067359363 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073461365 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064284747 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070093361 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068020632 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064971715 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069103052 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075867694 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.066607594 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070259816 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062850083 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068657067 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072295032 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064834366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073670734 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06763832 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062781432 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067934747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063689602 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061898402 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062030162 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061483227 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072129202 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062754864 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064581726 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064369935 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.192753797 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068867321 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066692827 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078565559 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071273902 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071922425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062861357 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062190338 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064285068 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065101452 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070035186 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071135057 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073787987 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070663392 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068682422 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063436126 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07783393 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073692004 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072167052 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064986967 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072370983 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064623449 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071245283 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068649684 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069207382 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064666638 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071624078 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069455428 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066252143 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075047303 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071295465 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065135089 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069981798 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069485692 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068200939 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06210294 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064189477 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070010548 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072715248 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071179869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064013404 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078653039 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065777489 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068992481 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066585107 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062986459 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072031022 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062159043 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070608231 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06457467 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064235215 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062032544 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066978338 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064900876 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070655171 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066119378 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06192934 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079138649 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078227927 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06989335 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063261248 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062899597 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062349968 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062572066 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066156183 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064805526 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069866627 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078515444 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066153209 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066275359 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061847407 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063604788 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070734033 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071613312 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061246826 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061800931 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066146659 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069818054 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075119506 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062548962 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063623819 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071142156 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07060496 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062227574 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066166291 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061209765 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071360637 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080229787 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.063870799 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070011033 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07357108 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076202914 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063900321 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062098147 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064156341 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070076519 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069098346 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064231845 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064511449 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082617394 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070877109 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065902956 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06253796 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070701437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066189075 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077339797 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06477049 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064368404 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072218027 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072533565 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070575198 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073544801 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074915461 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069636553 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069709004 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062973391 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068261232 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062428417 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06602083 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064147595 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063615301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067475735 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070018229 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067434918 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078423489 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07732581 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065823463 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061022649 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065681924 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066022512 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061694513 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063562532 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061413062 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061612057 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061338692 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062086031 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068473071 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071145942 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066578352 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062356231 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062493338 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060067911 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071808684 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068967201 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068330684 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059922407 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.194973996 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065424811 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07294957 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067223289 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065823704 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071048304 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070517753 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070553349 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062579331 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075564124 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06305031 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070545325 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067382991 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063924816 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064954702 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071406872 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068296333 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065763312 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070268926 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071039243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066003911 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06175867 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06148628 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073460467 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063042444 seconds)
  done (took 42.347694202 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099701219 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063565382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062424535 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062067423 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071802774 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063682299 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062599595 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063180038 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063036272 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065494076 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062199448 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0624238 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069781116 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077591427 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072410361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0669205 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062866975 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063613458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062618081 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063512007 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07041142 seconds)
  done (took 2.667035943 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069886195 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077640798 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074029309 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079438948 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070952446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067342639 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074849029 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067356992 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075200986 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072575069 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075314205 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067442675 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07220659 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073212025 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072300666 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067700931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075169542 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07161987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067562787 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075186704 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067740156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074732241 seconds)
  done (took 2.835257342 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063875492 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063300862 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070592989 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061898718 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063464287 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06173041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066128404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06210676 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066286341 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066123789 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065919034 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065626677 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070362037 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061694875 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067343397 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061795446 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108481531 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066890704 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063669506 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06433051 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062008984 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070444373 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062308097 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06249291 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065560584 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066393532 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063955994 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061805675 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063014877 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065416914 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.079816457 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.0617755 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069846403 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069275424 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065093685 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065254122 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.062777058 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063010388 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061659594 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061537932 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06895233 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061948245 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066040654 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069839797 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06190617 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061351936 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070515904 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063086652 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061981003 seconds)
  done (took 4.479648437 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075101241 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110632746 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067764773 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090543148 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076058517 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.0688022 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067899513 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091840828 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063484617 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06451188 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077787184 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077654791 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065336048 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.066942506 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067931462 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065545936 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066346946 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064942093 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068582843 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065590794 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069141704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069352772 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07637237 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07664251 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066350812 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064403812 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064840278 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067243416 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076225433 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069108688 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066766923 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067949285 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076511962 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068095682 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065166496 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065317861 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077410936 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06542564 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064779874 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063518284 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064587513 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066439908 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069169267 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077893138 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065160256 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069985542 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065276609 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062670063 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076838368 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065213189 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069543126 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077701784 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066356572 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065463489 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066567569 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076304679 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065570389 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063623957 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065148032 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076069286 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063258394 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066011298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077456873 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065047582 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068925044 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077167677 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070006219 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066077397 seconds)
  done (took 6.174423421 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072531169 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093510781 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079319338 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079042488 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072443884 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073464501 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073858523 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073594056 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073514897 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078160121 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074451887 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116104368 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068857549 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074967309 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073167193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072918013 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07337105 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072965903 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07317252 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072755622 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073460374 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079067119 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072812834 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078822622 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076201161 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069110017 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073210826 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073110052 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079703523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072863453 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075951532 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072518605 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07303764 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079374278 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.075954888 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072888835 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063642852 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073061618 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073258228 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072842194 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06893573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079031601 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072775899 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068860655 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072887127 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073111245 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079146476 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075917266 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074820489 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076363768 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073543127 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080936807 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074968688 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074743204 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081148536 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083762163 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081129651 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08126327 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075181182 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081009561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081140721 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083750828 seconds)
  done (took 6.006854431 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077932989 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070570707 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081288967 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061727622 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062017363 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07195062 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061649514 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061967435 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070105035 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073120468 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072038658 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071889884 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074190964 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071745029 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071947373 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074611686 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072452965 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071786426 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070043913 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071842611 seconds)
  done (took 2.705630655 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076330781 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081175892 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067698916 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071510658 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06716113 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071865825 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066734239 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067311464 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067618546 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067702151 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073409476 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073217413 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067931543 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072090732 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073358029 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072044963 seconds)
  done (took 2.414618002 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082726722 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069849212 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077878912 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063681126 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06668895 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062350576 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063484533 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061629679 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06273238 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076377697 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063462432 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074466099 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0632803 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062204665 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062864673 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06872 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062317263 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063024774 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062978904 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076304624 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071068782 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064161988 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067473229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063033018 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068446254 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070159787 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064600319 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066520232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063014813 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063400429 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069096542 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070239217 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063496382 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064162195 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062399179 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063267659 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063122201 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063546448 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069155616 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082550178 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063346592 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070922951 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065460605 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066001528 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063885442 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065625038 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064054721 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070723181 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065235357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071252156 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064853072 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06739583 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064747 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071249212 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066617681 seconds)
  done (took 4.960397403 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077917339 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067170377 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062315301 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061996843 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066825695 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067900774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067334879 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067476679 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068584325 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063150807 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069815882 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068561372 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069922413 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068785951 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068503344 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068084718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061713743 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067843564 seconds)
  done (took 2.505239265 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072541208 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06699367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072244099 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067223084 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066445057 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066130598 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062137072 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062045882 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062008491 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066939035 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066920115 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066567682 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062073326 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066641239 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067508083 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066821372 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066532063 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062432738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067399856 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062723854 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066871273 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062101005 seconds)
  done (took 2.731515653 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095407725 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083469673 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139062636 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079089444 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086108665 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071890583 seconds)
  done (took 1.838167756 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092290715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096995674 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066889059 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067176473 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072448276 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070496205 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070426885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070963887 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07493673 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075533515 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070589136 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075255074 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076032996 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078574596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074792713 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073105807 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070499792 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073396667 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067409056 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079786224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071002228 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075134911 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070669252 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070542092 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071104862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076741349 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07495807 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075454823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070849598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075119884 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07303167 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070529 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075374258 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075278456 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067212428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07467296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070546233 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080485464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072840298 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076740668 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066801675 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073050114 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074867469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074727548 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075021959 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070595896 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074185589 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070750052 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070464519 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081331238 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072623653 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076304358 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072387879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074891936 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074341123 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081259209 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074888824 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076497971 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072423726 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075186025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076477704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07302595 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076795724 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075000928 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073137104 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076921695 seconds)
  done (took 6.186329117 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104420495 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067951908 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070664306 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075574848 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078217811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072301979 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072674648 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072857168 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072765897 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069992065 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108303811 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072949835 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078537687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079272395 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072525911 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071474581 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071962789 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078805967 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070044319 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084292733 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072636431 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078948447 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078704097 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077133322 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075451392 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073267085 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071007493 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070917051 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07057409 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070562652 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074444637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070525123 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076801087 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067828821 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077026332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07161896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071203774 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074544502 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070393178 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072711344 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077332795 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079930534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070614756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070533788 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075784006 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070554155 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070569837 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067670614 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070246452 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067344337 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075029543 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075231002 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074889914 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076212907 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070768953 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070376127 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070168993 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070406984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070428484 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072382442 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077541528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069967443 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081439247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069915755 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070536307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07661658 seconds)
  done (took 6.210998847 seconds)
done (took 126.672821543 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208547901 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185100463 seconds)
  done (took 1.66672674 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074189272 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104402465 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083660728 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136002038 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071432303 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105554652 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104611754 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08376582 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071301189 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071533305 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072167294 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075931909 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138776673 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071655359 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070881881 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075144614 seconds)
  done (took 2.702731878 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104679242 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167006775 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109174545 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07039561 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106511212 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077296068 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070446408 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084313479 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078397962 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073122443 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080159999 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077798212 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072760699 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079199125 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075813765 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077284647 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070950867 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076792589 seconds)
  done (took 2.848411188 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102569723 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094500058 seconds)
  done (took 1.493282093 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172645506 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133695711 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202071541 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343885102 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153743166 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.419196974 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138850186 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14046486 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112255902 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135131987 seconds)
  done (took 3.24442218 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105015243 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168642151 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292771267 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119770384 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075780024 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090574396 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122150953 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081605788 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083315715 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083071687 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082985619 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078303254 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102865304 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076576318 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075651278 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078423335 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106238973 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074973539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075896947 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078382844 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106005294 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069830784 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076481267 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074914731 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080666134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080755379 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070749179 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069653562 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07808685 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075682324 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078743577 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08701914 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080923218 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105596489 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073932477 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106344943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078373139 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076001481 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075337027 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075899683 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079577524 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079502619 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078802803 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077716635 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070876006 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078103739 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070942501 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069285439 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079670045 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070666355 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079663179 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078922965 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105049119 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070752905 seconds)
  done (took 6.084263401 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107712741 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106852476 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070446473 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112219982 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103864016 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070436995 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104978285 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098918416 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107755113 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070699763 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069293533 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070878563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079399101 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080902285 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115278777 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107278155 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072627084 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06995447 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107959279 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107451353 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069673433 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101701062 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098081958 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107447026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06877559 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070531421 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069671412 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070614804 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075691241 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077876118 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069441266 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078830399 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083112546 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077081772 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067871311 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069067489 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068836626 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078262275 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078696897 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077883219 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076543092 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06806141 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068633809 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070086477 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069828959 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068294536 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0771684 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078575209 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077185014 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069026476 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070360036 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069302079 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070030277 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078279367 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076340589 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07851893 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077966419 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069126305 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069091239 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071641614 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078695638 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078461564 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077341787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069556357 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078320336 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069010326 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078994639 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082337028 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068919863 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072452079 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06878485 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069155617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069733801 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076067964 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07590819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069955793 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068614628 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068640136 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078765887 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076799064 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069039443 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07557534 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067941933 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068709829 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070343517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070543936 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075928783 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077865565 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070622936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068725544 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068729425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068860254 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067659448 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075984684 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077935717 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078204011 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076772348 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069974784 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077589779 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076741928 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071393124 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077328249 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068559323 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070115844 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069401354 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076213036 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075319484 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07772381 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06839641 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06862935 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074719741 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076962073 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067779733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074145561 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07680536 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074928529 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066571747 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077249774 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068031018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076400377 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067650352 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076842799 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.201001484 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078766104 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071020976 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069914136 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070450807 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078041935 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070786676 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069672532 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070500075 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070350886 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077064235 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08073171 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070544837 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077793809 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077490232 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070645017 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07719648 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069236918 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078709007 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069391006 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070185957 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068231725 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080391729 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069615457 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069585958 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069277406 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079395242 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070065767 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079177702 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076778815 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06911254 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080292462 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078911758 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075608195 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079469917 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071023761 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069594309 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069213251 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069468829 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076861599 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077931628 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070310951 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068851343 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076416917 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079054561 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068486082 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077241122 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07675684 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077208311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069320692 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069821612 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079322252 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079321851 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077088093 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076793991 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07765723 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06987557 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076360285 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07817061 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069583597 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083664069 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069349192 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081164128 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077606649 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076010082 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077722558 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079245033 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07877925 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079470376 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081738608 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068735153 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069453976 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077414729 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068904961 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068911947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076898765 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070723654 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07074487 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081064411 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069762939 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079482846 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068736541 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077775075 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069135511 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070222903 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081653253 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069100176 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070097244 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077036693 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069264641 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076135446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078459879 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076592994 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069071859 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072620732 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077684115 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077470705 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068945328 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068738468 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070446974 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076179202 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075825839 seconds)
  done (took 18.398625959 seconds)
done (took 37.745885172 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204098331 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152795327 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182183338 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114045726 seconds)
  done (took 2.048103669 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107184918 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097733356 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087132519 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065130012 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093138324 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065239535 seconds)
  done (took 1.84504617 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284081794 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193605984 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177586559 seconds)
  done (took 1.983775413 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207155479 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188641687 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456416151 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281264986 seconds)
  done (took 2.557808152 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140157918 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08175316 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064258541 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082492611 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122429068 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148749129 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09225034 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116863619 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075830847 seconds)
  done (took 2.307460124 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145817472 seconds)
done (took 12.236251793 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.267119496 seconds)
    (2/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163967372 seconds)
    (3/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.199966568 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.1505278 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075547003 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072716061 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068716422 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199583593 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102603845 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.160356679 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196872556 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119660716 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104515671 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112394005 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.417614456 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.164129023 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076211795 seconds)
    (18/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.107504019 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.215202443 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075069779 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075235646 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075256878 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182301508 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.205370885 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074377698 seconds)
    (26/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072071702 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074816123 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.173089246 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087215262 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.157637391 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.178656064 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.181539865 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076201303 seconds)
    (34/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078412439 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.210906726 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067018498 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073201427 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074833331 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099409207 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084537846 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099094938 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074782547 seconds)
    (43/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066459231 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064786235 seconds)
    (45/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.232651759 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175774935 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077099163 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10101607 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169468426 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.225888792 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073915945 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171359164 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194000043 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072436125 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087344371 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.156190126 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174458989 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.164895714 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07504397 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165558963 seconds)
    (61/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125779308 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.066478891 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135454356 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066444432 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188890359 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069567945 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073307784 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.178780717 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086835068 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064995643 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07439711 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069150824 seconds)
    (73/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.129864509 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122224849 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065927095 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064281541 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065791693 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090647407 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08217596 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087682915 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.168668697 seconds)
    (82/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.163169307 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076020306 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137231091 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086769664 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.122639199 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.064534132 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127487771 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077746423 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.259261879 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12119059 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070327552 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067329556 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196931499 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067099858 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075029061 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07088276 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078197723 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06822791 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074213545 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06814891 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088872791 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.0666318 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136197863 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175243512 seconds)
    (106/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125762353 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065649153 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.224270019 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068716523 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066673213 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075614921 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088824947 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084382387 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067820498 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077539941 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177330825 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073645143 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075228656 seconds)
    (119/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0798429 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091443075 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07924618 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.173322938 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077095597 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06645696 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.201192459 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067080729 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086662145 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066713337 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09911947 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089798446 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067223993 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074171257 seconds)
    (133/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075535936 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06675394 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092481835 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076860037 seconds)
    (137/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094199236 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075112402 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069828723 seconds)
    (140/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092251217 seconds)
    (141/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066469635 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075787291 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130924434 seconds)
    (144/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137343345 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172268549 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073706777 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 0.131463072 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132712876 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07285083 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066019074 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065854208 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.07672452 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073404164 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072151004 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069110034 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066598306 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065925707 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073915695 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078787624 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180551873 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089518138 seconds)
    (162/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06603378 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142069008 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090210109 seconds)
    (165/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070228946 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073941706 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06906624 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088867372 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126485281 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065224459 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073767375 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06547403 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067285715 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065730874 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065506497 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076452239 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.125340228 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072556037 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.06663585 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073927528 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.226671772 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087897611 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067007295 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139569696 seconds)
    (185/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.137406238 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130433214 seconds)
    (187/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087041763 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189701871 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089543587 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069694126 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.087745515 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06524635 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065339447 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065433067 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073900887 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.214313148 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065565685 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141475052 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125149159 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.068612183 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213224719 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073392885 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178660277 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073445481 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162054376 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064084228 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065505757 seconds)
    (208/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078192121 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065243763 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072162796 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071852297 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064236141 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.224445726 seconds)
    (214/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076201119 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077434578 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144688134 seconds)
    (217/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081040855 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.1747184 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.081610599 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07403349 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069531359 seconds)
    (222/309) benchmarking ("sort", Int8, false)...
    done (took 0.145881498 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068604777 seconds)
    (224/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067420506 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076689143 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074654294 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066463124 seconds)
    (228/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074907145 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137476346 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067558848 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108323855 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121595849 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06729543 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073168405 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068033052 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074270636 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066396425 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066643559 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.0788167 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088534512 seconds)
    (241/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067245038 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17470799 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.07900781 seconds)
    (244/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075662135 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066499219 seconds)
    (246/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070831343 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065386832 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066245739 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09080127 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113348214 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.229141408 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065423104 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119907663 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066233732 seconds)
    (255/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072396942 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066537869 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136574214 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066131484 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112247533 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067614794 seconds)
    (261/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066389026 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091282763 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073141259 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066372904 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 0.132616235 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066259981 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065440108 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066601509 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066661171 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075156357 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087857257 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073292709 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066894739 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073273357 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06671505 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078340745 seconds)
    (277/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078870009 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118166698 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068026201 seconds)
    (280/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070998062 seconds)
    (281/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068976822 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068513608 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069830216 seconds)
    (284/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069455944 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069271167 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067525439 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067330966 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079764316 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066004701 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065866782 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069131001 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067341608 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176987262 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066529202 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136688201 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074231805 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066507607 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067142234 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072935908 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065890899 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065560965 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123304999 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066562927 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.06886402 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090263938 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086021332 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065335302 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065459871 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066802118 seconds)
  done (took 32.797323532 seconds)
done (took 34.138735786 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087852583 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100071886 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075525885 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093916898 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082547719 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096545815 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074876832 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079941268 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08218683 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081202531 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079847157 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07314818 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076125462 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076264403 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073992044 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097344465 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081063929 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074648353 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075171263 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066988711 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075023916 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06687692 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066180984 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072653157 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077918317 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073636222 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076344709 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075356737 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066741871 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067238599 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072320132 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076355317 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066310188 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079206643 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075746794 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074752063 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076825546 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078796658 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066538978 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067524027 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07670905 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067168574 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074629636 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072836925 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071360333 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073237206 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074652206 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078839174 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097251831 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070869315 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076428039 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077346953 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078145481 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072695783 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072105695 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075201883 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072423044 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097462209 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074820115 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071123938 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076050091 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075853816 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073293624 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074468405 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074828605 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077296412 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079331046 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072895685 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07715528 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073551414 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066495227 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074892757 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071291372 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067190659 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077448913 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079564716 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065798393 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070849628 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074950055 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075434291 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067063254 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073601768 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0665126 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071023178 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070834702 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072830062 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071413924 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073936447 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066146945 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07509427 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073778585 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074429137 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065752919 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079897828 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066415748 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073120443 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067035649 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066655004 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066339147 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071657597 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066225191 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070425392 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074922902 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065423361 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071131089 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078940579 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065536279 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073025515 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065225447 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066203958 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077457595 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076098069 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0660346 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071411871 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066069563 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071758743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065763998 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065799606 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065901761 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065568117 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070552076 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06579525 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070305087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071329773 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077900346 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06528847 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070264439 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070024167 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065819076 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072646804 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066388833 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066447535 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065984807 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079134921 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070392943 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066256286 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071239651 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070493355 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073816247 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065107678 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074088173 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071544219 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070033235 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072047322 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064092125 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07539152 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06967406 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068826662 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064499429 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064381776 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064054328 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064276378 seconds)
done (took 12.567308987 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070895762 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117869037 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093433883 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093196819 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083121384 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067271374 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074429755 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091766623 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068675923 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096292266 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088282648 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088757902 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109622957 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066010853 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067019359 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068170643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068616915 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079036542 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094198391 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089379838 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105624574 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066745796 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08602896 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086992018 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084011672 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088563104 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068186036 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069393823 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070997805 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090638582 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092034212 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070237816 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067948389 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090635424 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085159952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080811625 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06794937 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075458008 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067962005 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066883049 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068825142 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087608806 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075323182 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075458222 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068778422 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074913628 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06819262 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083094534 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087515545 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075518922 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082571658 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090675429 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070781558 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083535837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066381368 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08261422 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076372975 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068041384 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067871159 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072073198 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067644863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069749909 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078591237 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07599494 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072047712 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08185541 seconds)
  done (took 6.624641016 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085330427 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095322523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084288458 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08410383 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067248394 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067862079 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067419613 seconds)
  done (took 1.98388867 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067716777 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090210807 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091043822 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09117532 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081259241 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09211093 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075412959 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06756795 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096034421 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068312599 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089719875 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101085913 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0739517 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081522171 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095558968 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070065394 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093576994 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067724928 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068009355 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092038993 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072207644 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094575027 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078936595 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068058529 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080198103 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068393618 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100508299 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075972141 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06935472 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069779132 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069613697 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.09392092 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079675753 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081284359 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068706087 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082319297 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081277075 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070843667 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078664557 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078005017 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083361331 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070877521 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06847818 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070129415 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071128317 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079459558 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066332673 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06930107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06860347 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08697341 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.0664392 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079634493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071471555 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07368995 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073528216 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074936904 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078597726 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071556374 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089469914 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069994351 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084623644 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083946678 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080961952 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083547148 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067459172 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079839984 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080657263 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068625574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069632651 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069128984 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084011737 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071127548 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069436476 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079244673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067540725 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091511066 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09153047 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067253654 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080698165 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068340753 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069293727 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079578138 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091232557 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073578994 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06896527 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072479063 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070649826 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07103584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06645863 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0723138 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068833171 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072640343 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068452698 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070757551 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069843103 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083375055 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066288226 seconds)
  done (took 8.893785908 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069887799 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068719465 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069606849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068619682 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068273036 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068733907 seconds)
  done (took 1.873521825 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091848659 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068746889 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081541778 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068409568 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10350412 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083843237 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084292083 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078009123 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082198136 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080454403 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084254885 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087289672 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088110076 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0713596 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084554465 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070821455 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084059288 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072706598 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07987491 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070977144 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081341903 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070461006 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071396327 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087685967 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07204207 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069225513 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077339719 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079814985 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079493557 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078286969 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070387728 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072199797 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075310116 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077377841 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083964837 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075378217 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068069319 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074892253 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070837866 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071920658 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085776466 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070958641 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07116591 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074572683 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078016967 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078339778 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074260807 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077048336 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083076329 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074338071 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07463743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069143734 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071637532 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074883598 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075622511 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077298665 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074325983 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083095441 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070406478 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075056012 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068097242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07161765 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077167413 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071510861 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075535574 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074489726 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075261894 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071174292 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070695533 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068529772 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074393226 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068572439 seconds)
  done (took 6.934495991 seconds)
done (took 27.763485828 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.523124463 seconds)
  done (took 1.938646576 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623579562 seconds)
  done (took 2.068551467 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.540711352 seconds)
  done (took 7.981337055 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.380967527 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453261044 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.748420696 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133475469 seconds)
  done (took 3.196107846 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707670095 seconds)
  done (took 2.160208124 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237716465 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226249808 seconds)
  done (took 1.925341358 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348133158 seconds)
  done (took 1.790472547 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.077787672 seconds)
  done (took 2.523073291 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235651796 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160766786 seconds)
  done (took 1.849741822 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445197667 seconds)
  done (took 1.892560984 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.225530854 seconds)
  done (took 5.673077584 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218753985 seconds)
  done (took 1.699208035 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234797086 seconds)
  done (took 1.68285184 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.737782431 seconds)
  done (took 3.185837396 seconds)
done (took 41.022838111 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083514467 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086690023 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085578994 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081790288 seconds)
  done (took 1.768786386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074990628 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070863103 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075424705 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071135243 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074637885 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070915317 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072513404 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073741414 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070345788 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071054833 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070808679 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070784608 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073479121 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072470533 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069595574 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073821549 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07461611 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071161327 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073827426 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07086285 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069156754 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073328642 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073726578 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070029174 seconds)
  done (took 3.184470671 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079517263 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073526292 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075812414 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072428527 seconds)
  done (took 1.759023005 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076936077 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088072296 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086460395 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077677726 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088489758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083899737 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067029277 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067121542 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069181542 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076623064 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06618595 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092368208 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085812441 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076857524 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078774224 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063591453 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06554299 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084726836 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077443916 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077856093 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068863919 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077271078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066343561 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086712697 seconds)
  done (took 3.304527378 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0810871 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067175277 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081040187 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091828596 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093030982 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066622874 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079506354 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093503173 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135251955 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066312037 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071926053 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06628466 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104535474 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066458087 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081353955 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109139291 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112347187 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070119957 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098747294 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066648267 seconds)
  done (took 3.164670135 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083325555 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072486585 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070397026 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065978573 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076877962 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073263118 seconds)
  done (took 1.904476079 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068612672 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068165177 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067433016 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067428117 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072411301 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067457336 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06611656 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068239155 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068468344 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067603399 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067077814 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066926027 seconds)
  done (took 2.279417365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19121513 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068629784 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068789303 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066330472 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070829097 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066653819 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081729503 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068048867 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093336727 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067360734 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067045091 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068935224 seconds)
  done (took 2.442616873 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191031037 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073685564 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220125721 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14352484 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101620325 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108943259 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110857869 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107191379 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132549576 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096908046 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152850994 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158333597 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10285749 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127749179 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086788584 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119095252 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142799241 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154698572 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098871945 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153344972 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134024338 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121416196 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140544778 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096189714 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100269858 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112106715 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071848924 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076921914 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157493309 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122084886 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134250786 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104623485 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088969556 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16344773 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160939105 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130693561 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140586463 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081377158 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117215438 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127902797 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191840204 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086899163 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147854802 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100985766 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076902186 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122269104 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107900145 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113169326 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098393965 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085556259 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274351082 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17275384 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127858004 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083880107 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116243294 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104923264 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108387284 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113497432 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169296824 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149288023 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120679596 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069392582 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106239379 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14175948 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125911428 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104652538 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117947275 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089756385 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123739953 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147907022 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117113795 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134751656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111120319 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084803289 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113949431 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129529707 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119473637 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159944413 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117215463 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070505605 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114216624 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094908194 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077641193 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141163353 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07415149 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163289938 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095415173 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.120701562 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124767124 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104026028 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104079392 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148287985 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133543439 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100304214 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083958282 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098515216 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113552018 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135455775 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08404597 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10358812 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10845301 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076404865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124944293 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072339523 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113932539 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091848172 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112097129 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117471634 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076153136 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113518493 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243288367 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100029618 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122464301 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149406269 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085332659 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07843611 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156873221 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115595929 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100459421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13464397 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149082934 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11808787 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094677664 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13751421 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162610937 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087299148 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151935977 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099483214 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081173272 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102629994 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117156667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105659679 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118229973 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079196746 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114426511 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152736528 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072419024 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093272495 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125879203 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079210504 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078026354 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100615877 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099645576 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093372332 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097185748 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100010556 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129471929 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11621833 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101536082 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116970534 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093590475 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154717595 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08495661 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101693687 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099795846 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070209739 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125536291 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145328673 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076129383 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149284689 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115708383 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110287182 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112497323 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081006876 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128397502 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07699554 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070252111 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130638018 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106933348 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102899158 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138767845 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254254071 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119693901 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115869659 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124731005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122580035 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123178013 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103983963 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086293647 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110884929 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123075529 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071587753 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088804967 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079857589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099050592 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090735234 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081044347 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131943811 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114614439 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106474014 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109632415 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092841115 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140285095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076327561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118245668 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115981435 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09175072 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144163953 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142463753 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12519064 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097083386 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128556506 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071442598 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072731407 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085861252 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117397462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081445272 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081109144 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108131159 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140817685 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118980936 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128871054 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117427933 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111120198 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147428197 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070670278 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115942916 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134882159 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115134748 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100282212 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088522108 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094429072 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134647473 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099222952 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168718137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1077738 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116616372 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145608986 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09703819 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075562416 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098690358 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122038191 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095479564 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.281910095 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095707269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085166002 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103927475 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077199522 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096312121 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119309839 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112377967 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131135721 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107710466 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125003716 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076206581 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106998411 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117693304 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116414912 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081148668 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111527409 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155939729 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09336657 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110834603 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140635069 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076139889 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13389357 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160963014 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134740137 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082073338 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100157622 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115637337 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119893645 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112270413 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130488482 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099746126 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12999518 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106699859 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082043641 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083470817 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091968523 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099117501 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108701872 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100222266 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109309326 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092376201 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122150161 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09844637 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105975212 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111857632 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096755264 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.0923738 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092431338 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1625399 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112148319 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157559718 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096779251 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132594645 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148437379 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073135525 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075668512 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07714585 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128045463 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080993416 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120524109 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.105205588 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258199377 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118286363 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130806499 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092924889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070229604 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105744501 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126041929 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118077202 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093921941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099902765 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149772148 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114106735 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077617581 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108541902 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112016762 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100603831 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162651777 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079801913 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104511437 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075062723 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077079081 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119962102 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141354131 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080469497 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100166093 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114362574 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106065635 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119221902 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09388973 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106630366 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12531913 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138052433 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119778453 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087155211 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105547887 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121348141 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143350182 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0998878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096789376 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162260262 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141582318 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148341445 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084810839 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11188943 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108960836 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105195017 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128942332 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081420387 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1499468 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079175157 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125978751 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096843194 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085109193 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11991781 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107235763 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084386878 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133635988 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110110882 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07854371 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076430924 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254901555 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114595987 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09968193 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073138336 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130512044 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072087909 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128140637 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159938063 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078488666 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101375334 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093622754 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080260491 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100169507 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098530982 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08390721 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096049671 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158909573 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084828779 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138174423 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124946134 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105380781 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128524898 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099982208 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639161956 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077673437 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141786488 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110063155 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164967075 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095419417 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112991775 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105641577 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114233539 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13338716 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097679605 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173811231 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122358534 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112182708 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076777869 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097393006 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098912058 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085484164 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102459823 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108277501 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107765555 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091305059 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111822622 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114766667 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080111186 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092704638 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14488146 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110128624 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133720234 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129834532 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081381436 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111575441 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127243115 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076614383 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110681861 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138159171 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248527597 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097066267 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081125636 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09749416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161836547 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071260202 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149888899 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113641545 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106488869 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111504409 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105880313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124042214 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099149302 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115071874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09006557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104430088 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144449623 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081486124 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076721165 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100977443 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105618818 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094268755 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094408304 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.095675228 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141354362 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070137469 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094192236 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1092069 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134636514 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159276653 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102126227 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081143877 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112851729 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112887211 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108981948 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115063674 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078756637 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079000059 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078665895 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098091322 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119706374 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108770461 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113914897 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10383157 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150019038 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081284434 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221934472 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092694791 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100787231 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086583431 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077843995 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092562372 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092103765 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098865643 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106387694 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161565332 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091819754 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086305458 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088847466 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072689547 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080484344 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11814326 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102982532 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110032859 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098226216 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078901413 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097067338 seconds)
  done (took 56.214409341 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105219469 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077383159 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097589341 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146045887 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121064351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199212936 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150224414 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188808646 seconds)
  done (took 2.682022173 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068325319 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094059928 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103771746 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082906708 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066609374 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068467844 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222647831 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081068173 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066958501 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091021494 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076810927 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068469615 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439256508 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069029459 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068043383 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07599756 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067533621 seconds)
  done (took 3.365063137 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382083042 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603201383 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345255694 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077671745 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.985605803 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092078262 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.220739764 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140515351 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081609706 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535616788 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.3659241 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131789245 seconds)
  done (took 18.525909718 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083102807 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076773377 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09102681 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09107342 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079318623 seconds)
  done (took 2.067219006 seconds)
done (took 104.130153746 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082251228 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.432751744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069716405 seconds)
  done (took 2.093311272 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091750804 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090491226 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089421166 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087757365 seconds)
  done (took 1.929365523 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076076265 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077972761 seconds)
  done (took 1.716943915 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228515688 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176358933 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096502013 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084072551 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081362855 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08140617 seconds)
  done (took 1.815016999 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074248772 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073658807 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073738039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074617898 seconds)
  done (took 1.858408702 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06900536 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067798149 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069649839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073638037 seconds)
  done (took 1.843481772 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085602369 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085513809 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080631481 seconds)
  done (took 1.815675677 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102370337 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091671562 seconds)
  done (took 1.757126282 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081982546 seconds)
  done (took 1.647214218 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090878012 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09990976 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132243922 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115127867 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13869748 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116887695 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087007883 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087372573 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082251749 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090131829 seconds)
  done (took 2.605290411 seconds)
done (took 21.226978383 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079758051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376385871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361188707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091376337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66981947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358108892 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988919634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093566515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141165609 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069281634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085852347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649990799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98185845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330534095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964984262 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331251251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6511977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069554981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068858236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070526056 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974373327 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069190268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068801307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069681504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650151307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374321911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070121497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332535515 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07017988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071712599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357885071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070728703 seconds)
  done (took 16.159887452 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071556604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121874746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074205347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08576443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07153835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070916949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07239543 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070069742 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121816349 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069329817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086301685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069466453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075164924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071030829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088845264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069752853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070436363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070515066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070138714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070256789 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089378612 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070294573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070560131 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070993124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070333249 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082766196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073269262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070318645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070773868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072404563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073327652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071441701 seconds)
  done (took 4.035715788 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11761773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126069289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07485229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108083824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113713404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071614226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148043702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094655339 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128648135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06977297 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086314506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069617422 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104243594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070220636 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090116483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070462872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071644938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071101398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070363164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07072308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089727896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070687044 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070423979 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07090716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070758253 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084405849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070733066 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070277792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071000716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07251851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073572952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071209218 seconds)
  done (took 4.294316643 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071910926 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07440505 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081829758 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081882098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067881356 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07073136 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07221792 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067898305 seconds)
  done (took 2.170563667 seconds)
done (took 28.232933428 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079029775 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06889346 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072519847 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088028088 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07473318 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079635093 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066436124 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075284172 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072890264 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072895584 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07432004 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068186508 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071535978 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066505477 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073454149 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067615762 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081969952 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071437716 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080899401 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08163281 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070479906 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073774466 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076189033 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081866286 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082096055 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081548192 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077381514 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073777661 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068766533 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071701836 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071148094 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079798672 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082277509 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082182925 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068565182 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067975367 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072580075 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070144203 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082620319 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077220962 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069943902 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077436288 seconds)
  done (took 4.702821893 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085357127 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089964591 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08326863 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080029045 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090752718 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083287982 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087264924 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078616435 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07854104 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086722283 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074566369 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081886773 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079164753 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073392729 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078048787 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075489189 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.0805495 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075250895 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079141566 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07927762 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088274472 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073791388 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088541735 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081002577 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075734881 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081463471 seconds)
  done (took 3.699898578 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074664754 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087034027 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094401288 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144498984 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112248293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080651493 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081879805 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0928334 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098140911 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069303963 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073540586 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093503224 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093602576 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075190935 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069792587 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085220292 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085209933 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071009205 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076242913 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097820183 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090096919 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086416287 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095032941 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085705908 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068537849 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071494003 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073609689 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084758171 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07119376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080535365 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071594832 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075555658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070360098 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079508774 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071353771 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068317284 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093464242 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080198602 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081884256 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069470952 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078336271 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070024444 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094337211 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129505019 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068342462 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072736453 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072328018 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080100307 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068116738 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096339819 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080488244 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068373421 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069350241 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06776643 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068405625 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071193296 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070416909 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071195824 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079275368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076022747 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090902951 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073857171 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086528799 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068479572 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079036561 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067855392 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070091311 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067822126 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097381237 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070258493 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112835071 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069944545 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067426348 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079474712 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07910527 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074679407 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068482541 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086035599 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079833363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07292486 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077565785 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071716373 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072949687 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099202624 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069054212 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068196559 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067538371 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072574345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072140083 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069534911 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080733035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068121957 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072162973 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086604068 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068369328 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069687481 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072175386 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071192304 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068594335 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079397996 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072836312 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069973248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079264057 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069399438 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072227325 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081951351 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075709436 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067618394 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070855378 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072284937 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069844275 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069941794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072277341 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07057726 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075371169 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075142056 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074517725 seconds)
  done (took 10.750512259 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165682592 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158003793 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07201673 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148660287 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077546207 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081455839 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152733544 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095310895 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069015867 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070427602 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069281313 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110923169 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105701982 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11653931 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081547046 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070135593 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092120874 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115531307 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15480178 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148503357 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092371833 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077492482 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072096998 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07103323 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070657085 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07921628 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086129726 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078315971 seconds)
  done (took 4.412113986 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078238062 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104402008 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073081202 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091900696 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088333015 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069683722 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071016935 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07080529 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085590897 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078694845 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06960898 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074935124 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073236992 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073522636 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070111011 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075787374 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076502087 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068829394 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073325838 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074965682 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08000211 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094409973 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073007791 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069952876 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072289254 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069051314 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077706403 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081843095 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069746104 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104448961 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067686342 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074454919 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086425234 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07027604 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069073483 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071532685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07155683 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07191047 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073119422 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068712391 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068133213 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073421046 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068299326 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077115908 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082811591 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071628621 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071325605 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072229572 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072291518 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066975651 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07228519 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072528495 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072118618 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076917954 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073596992 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072179136 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070118192 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096251549 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075305003 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069005618 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068597982 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068531937 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07171776 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079361562 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085116778 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071728828 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068195803 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069355068 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082169769 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082281744 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068851233 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074075593 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.0674877 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071480931 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072073366 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07243612 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070088325 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068325832 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068998131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069802118 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069950797 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069534589 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06858101 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075524643 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067800967 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067914935 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069921625 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071301502 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077847233 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069317081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072854086 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070204403 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068548302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07238479 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074747097 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0728209 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080211529 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080203985 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069853258 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067902719 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082724766 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072251125 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068716983 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075332332 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07443792 seconds)
  done (took 9.411674932 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092814003 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069724324 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086162189 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092324055 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079208755 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075027709 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07984669 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069043137 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085945007 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074451471 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077211075 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06770439 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080389091 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079755873 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070489791 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080441736 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072899948 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086744524 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08414462 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067860767 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078170245 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082153944 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081695878 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083515383 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082827903 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084648998 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081440921 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079432256 seconds)
  done (took 3.861040122 seconds)
done (took 38.415087918 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.665212213 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.834580596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.654064825 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.851037671 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.716184436 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.866426602 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.745895708 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.650399733 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.927584008 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.695939176 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.970996428 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.869946073 seconds)
done (took 64.178624172 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.686322812 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.807173807 seconds)
    (2/2) benchmarking "String"...
    done (took 1.920620069 seconds)
  done (took 5.319118067 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.938047194 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.318605561 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.883767445 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.650372675 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.658249285 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.905737763 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.430817488 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.098840914 seconds)
  done (took 29.539658326 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.845933423 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.876898951 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.379190188 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.393715809 seconds)
  done (took 15.137898086 seconds)
done (took 61.304366688 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.661242739 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.699741748 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.692573878 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.652645367 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.746286051 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.664981394 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.7925364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.685143905 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.653689879 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.661252905 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.655084043 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.137014393 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.663243217 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.805460931 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.652584094 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.66549777 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.660127063 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.168154498 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.806552033 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.672764759 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.671651206 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.705155507 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.65464189 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.796338372 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.690412432 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.65271256 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.065658677 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.657567939 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.271847713 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.657281334 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.692112945 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.978136378 seconds)
  done (took 199.883572133 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.654085922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.669041456 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.708706973 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.663764409 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.259449611 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.848873495 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.762144218 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.286991785 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.656474914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.682739042 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.978029019 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.655917561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.998082899 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.650784207 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.691553763 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.754948514 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.877849643 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.99414839 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.693405776 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.80694207 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.667636517 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.764188035 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.712914164 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.945974179 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.700944437 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.726785282 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.678437567 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.666354452 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.836235604 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.856153763 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.660640703 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.682989218 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.852626442 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.528297037 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.672332368 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.669765145 seconds)
  done (took 166.51336085 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.837811507 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.657246603 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.6554934 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.6580096 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.662193845 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.657616378 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.778270563 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783143816 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.317549683 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.993680457 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715539215 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.65769605 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.429624025 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.659916013 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.721400007 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.668489647 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.658288765 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.671919736 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.681760128 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.660646956 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.658123101 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780117324 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.673149742 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.660920939 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.666697502 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.657175695 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.661879228 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.042393079 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.656081509 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.750632362 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.663127607 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.663156051 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.765796063 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.905542909 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.658403483 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.658955283 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.658398519 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.487208298 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738318612 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.659184777 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.662351819 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.657430599 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.875257349 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.660500273 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.658976396 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.659072267 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.659781279 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.770186173 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.658782227 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.784066737 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.658279753 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.137244135 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.659411602 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.660092557 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.659055161 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.821599469 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.474842712 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.657927162 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.662656551 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.659000552 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.659083794 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.670469373 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.820720448 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.737840252 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.660272125 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.660498352 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.664070935 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.660294434 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.890401944 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.659480867 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.028091282 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.674642825 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.78282816 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782173499 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.663006633 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72520529 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.751887476 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.660791887 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.661482138 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.662007691 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.660676973 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.74177769 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.660382219 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.783953622 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.669305305 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.66106277 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715434256 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.729072022 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.660235821 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497263166 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.663414435 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.659511214 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901324656 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.66058409 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723693246 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.660353311 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.661598241 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.758203251 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784226068 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.382052572 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.663768843 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.888477574 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.754626561 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.661222482 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.766902069 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.661925766 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.740458813 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.669561506 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.662282277 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.697801729 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.661236212 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.659928651 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.660355471 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.672856004 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.035475516 seconds)
  done (took 387.432344668 seconds)
done (took 757.320333507 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.262116072 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.22809795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.334428305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.24504672 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.216602651 seconds)
  done (took 12.887158928 seconds)
done (took 14.487253041 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.742107431 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.74302663 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.681531077 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.74249215 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.677703085 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.742808173 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.72506509 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.684234048 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.710654371 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.685280337 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.713423278 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.684221586 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.670114415 seconds)
  done (took 23.805362885 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.890018889 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.89819819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.727184865 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.891740625 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.703254724 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.883120353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.822254863 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.808785 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.803768961 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.67286933 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.670601818 seconds)
  done (took 21.375523381 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89158772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.893196052 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.732888172 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.889437272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706152919 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.895282352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.816361061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.807402891 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.80459679 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.673094535 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.670435499 seconds)
  done (took 21.383013926 seconds)
done (took 68.163626116 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.666515466 seconds)
  done (took 3.270750581 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.684581511 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.841399251 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.665221228 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.66756216 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.666042322 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.667157092 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.666097657 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.667140355 seconds)
  done (took 15.129967157 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.665965958 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.665679024 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.666630849 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.665178382 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.667842062 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.666529795 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.666649885 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.665998816 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.667456676 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.666895814 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.667129042 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.666843033 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.666471514 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.666175509 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.66615236 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.666181716 seconds)
  done (took 28.268424134 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.66861737 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.666943627 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.666058488 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.666563853 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.665753627 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.666734407 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.667419001 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.668605719 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.668262838 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.666902715 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.667661695 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.666654715 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.667043247 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.667858713 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.666812565 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.668802351 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.66748973 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.667864473 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.671997897 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.668034266 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.667464727 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.667941163 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.667531274 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.668723143 seconds)
  done (took 41.632004903 seconds)
done (took 89.904005819 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.42108821 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.281024666 seconds)
  done (took 9.30776806 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.671866538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.66753081 seconds)
  done (took 5.017090312 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.668207802 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.667702829 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.668115613 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.668328526 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.667431666 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.668234169 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.667757674 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.668299483 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.668272072 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.668773745 seconds)
  done (took 18.286896835 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.669224857 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.668085329 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.668038511 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.668445261 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.668513488 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.668252113 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.668403825 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.66842249 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.668867837 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.669113634 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.670050414 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.669383399 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.66911614 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.669769348 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.669548019 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.669400744 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.669407151 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.669093771 seconds)
  done (took 31.647503665 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.66905209 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.668226936 seconds)
  done (took 4.945002655 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.66912975 seconds)
    (2/7) benchmarking "second"...
    done (took 1.669737732 seconds)
    (3/7) benchmarking "month"...
    done (took 1.669945331 seconds)
    (4/7) benchmarking "year"...
    done (took 1.671564806 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.669035075 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.671877902 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.669229565 seconds)
  done (took 13.298987323 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.670389901 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.81875187 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.882079259 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.312190115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.671963569 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.673355547 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.586081566 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.672844843 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.673715363 seconds)
  done (took 18.568541392 seconds)
done (took 102.676397632 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.565207386 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.670166494 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.941853468 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.797956398 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.688133091 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.005236395 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.686396963 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.942844458 seconds)
done (took 41.904252527 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.697508315 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.444967103 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.500475542 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.696602135 seconds)
  done (took 15.250800603 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.674264648 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.975874936 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.696140544 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.580060251 seconds)
  done (took 21.598946478 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.031270023 seconds)
    (2/2) benchmarking "read"...
    done (took 2.018202113 seconds)
  done (took 5.662316281 seconds)
done (took 50.818070986 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.671881573 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.671197592 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.670858944 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.671665572 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.67197097 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.6722557 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.671094353 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.672286826 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.671127414 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.672504947 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.671304455 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.671833637 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.670774747 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.673353092 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.672223031 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.671006851 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.671511099 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.67177465 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.672529892 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.672237614 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.672571127 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.671737265 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.672408245 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.672547182 seconds)
  done (took 41.73508433 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.672337477 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.671704011 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.672644015 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.672056064 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.673404259 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.672531025 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.672776871 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.672579767 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.673116317 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.672813525 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.671982858 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.672990032 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.672914 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.672648385 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672263693 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.672312865 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.672681288 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672476978 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.674039962 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.672726593 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.674518666 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674388927 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.673682006 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.673660968 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.676185751 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.673395426 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.674403053 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.673194905 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.674330068 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.673915064 seconds)
  done (took 51.806080536 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.673761813 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.674228879 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.674538974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.67365275 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.673418884 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.674686001 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.674091482 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.67373293 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.673764745 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.673589341 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.674083148 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.673496465 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.673400993 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.673808707 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.674160294 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.673291264 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.674236295 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.675562187 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.674561355 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.674299251 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.67464536 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.674996842 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.674267641 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.673942468 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.673843141 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.674440859 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.675036267 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.674521066 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.675241259 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.67727235 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.675046558 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.67500428 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.676613869 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.675884161 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.674615733 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.675451212 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.675224665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.675169038 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.675568501 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.674532539 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.676629285 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.676414729 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.674811554 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.676439528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.675344568 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.675474587 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.674382974 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.67516052 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.676714865 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.677371959 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.67507339 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.675949048 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.675906754 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.675571719 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.675900801 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.67547222 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.676386685 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.676318607 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.675770107 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.676049068 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.676037698 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.676895611 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.67761527 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.676707884 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.676289912 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.677005531 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.676852092 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.676898456 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.677361111 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.677387336 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.676825172 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.677385269 seconds)
  done (took 122.236523808 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.675933722 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.677272498 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.676882252 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.677774463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.676001881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.676749021 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.677496294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.677241778 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.676909032 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.677619681 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67658542 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.678139179 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676784745 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.677460697 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.677684076 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.678467422 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.67777705 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.678414943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.677955488 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.677169415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.676901004 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.678414945 seconds)
  done (took 38.51652813 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677907508 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.678675087 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.678688656 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.677680238 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.678881179 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.678969667 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.677848893 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.677952055 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.677786009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679497905 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.67857969 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678869401 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.678237864 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679831346 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.67938425 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.6792392 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.679511275 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.678991463 seconds)
  done (took 31.832815911 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.679873615 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.678504516 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.678412361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.679237895 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.680072847 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.678689925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.680488523 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.677990154 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.679662138 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.679606846 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.679703025 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.679383405 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.679880269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68027047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67930734 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.679712619 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.679401276 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.679551721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.680528947 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679983488 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.680445613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681071111 seconds)
  done (took 38.568417708 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.680238999 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.678934312 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.680092474 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.680592795 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.67988597 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.679851421 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.679920377 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.679492596 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.680995075 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.68084701 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.679982918 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.681098005 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.680402536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.682416466 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.681081734 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.680548168 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.6823387 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.68038421 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.680290189 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.681262945 seconds)
  done (took 35.228434286 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.681815 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.680940538 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.681533833 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.681572834 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.681005326 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.680587401 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.681301891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.681842826 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.681302381 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.683253538 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.682205177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.682699811 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.682290405 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.682290235 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.684593968 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.682971488 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.68307437 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.682004565 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.681916325 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.681704846 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.683060439 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.683069122 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.683648649 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.682004898 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.682213388 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.681754886 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.682575905 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.682562556 seconds)
  done (took 48.720925771 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.682078426 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.680898737 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.680752963 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.682456485 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.682370829 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.681614632 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.683059759 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.682415232 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.682922702 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.681960612 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.682977057 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.6821176 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.683446276 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.683348528 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.681607184 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.682331903 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683038649 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.682147554 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.683233088 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682863998 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.683013675 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.682401158 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.684581516 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.682706352 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68378144 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.682778664 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.682911289 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.682686385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.683645206 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.682425691 seconds)
  done (took 52.09921587 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.707502961 seconds)
    (2/2) benchmarking "in"...
    done (took 1.703789752 seconds)
  done (took 5.031430405 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.683538629 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684002228 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.682669858 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.682886965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.683315517 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.684176948 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.683557216 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684078573 seconds)
  done (took 15.089391391 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.685085105 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.683843411 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.68422547 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.684621575 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.683921351 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.685790683 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.692383736 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.685141885 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.685925484 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.686150016 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.691977479 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.693412217 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.688871531 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.686327959 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.685992512 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.687637735 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.684478018 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.686165349 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.685382173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.685117561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.684551251 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.68833251 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688014227 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.685872333 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.687281847 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.696633607 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.690418236 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.685156833 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.686128572 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.68974242 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.686750434 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.685538097 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.686106408 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.685507745 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.68530872 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.686369204 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.694464619 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.68800162 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.692154418 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.685458847 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.686249564 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.685851883 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.68785781 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.689247718 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.688971396 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.686713409 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.686445131 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.68537212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.687070656 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.689957788 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.694698063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.687127991 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.68642104 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.691172183 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.688858995 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.69392402 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.68782169 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.691191595 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.6981818 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.697847086 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.699363843 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.697230026 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.689341553 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.68684378 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.697508181 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.7136207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.694630564 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.68794524 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.68679187 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.68726782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.695107397 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.69988429 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.698339046 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.687946759 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.687671354 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.688565509 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.68963071 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.688207152 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.695529637 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.691929189 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.688511838 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.688681898 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.698533157 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713202194 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.689114192 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.688995634 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.688119876 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.689073814 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.688849851 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.700642386 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.689109194 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.688105367 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.688391219 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.689518599 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.690302014 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.68768372 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.689528879 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.690630319 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.688592397 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.689247338 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.689362288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.69431284 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.699640764 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.689125582 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.688186255 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.695803743 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.688467411 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.691468434 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.696931528 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.690224651 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.689667049 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.689685924 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.696889782 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.688634001 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.693176063 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.697700611 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.691174683 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.692079955 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.690302333 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.689379105 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.699751426 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.718307188 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.69008408 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.690543538 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.696513031 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.702918323 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.690203662 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.695268779 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.689873352 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.69144384 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.690215418 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.692225695 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.691222076 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.694199536 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.690884639 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.693534518 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.690627583 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.69133453 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.690913275 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.692497075 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.692404731 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.691778307 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.693353078 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.695299756 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.690749497 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.693662685 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.698868811 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.692167989 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.693869049 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.694007584 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.690297718 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.69190736 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.694115395 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.692008965 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.692015011 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.691662617 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.693349884 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.692325073 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.695101776 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.691852034 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.691205328 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.693187248 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.697495139 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.692402265 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.696513515 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.693917517 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.692268086 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.691958342 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.692414641 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.69249575 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.691705005 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.691943969 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.698024535 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.700986469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.693172375 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.693446925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.695337766 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.692160853 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.693191084 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.693382611 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.696813855 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.702974603 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.693906985 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.700211053 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.694123148 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.693083963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.692623603 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.694564126 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.69492265 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.693310955 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.698521771 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.702363855 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.705456172 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.704376421 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.694837812 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.698384367 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.693998637 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.698802308 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.69870696 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.69463822 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.693338961 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.693965102 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.695191729 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.693798728 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.696984068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.69358284 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.694113879 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.694185611 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.694156189 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.694222989 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.694696903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.696733864 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.696588063 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.693784482 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.694259278 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.694497306 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.694958835 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.694544629 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.693453529 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.693802729 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.694242958 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.694984872 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.702310167 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.695326909 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.697369837 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697415783 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.696119425 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.694027056 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.694467787 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.698668925 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.695547003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.703686003 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.696548053 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.697911578 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702223221 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.696108753 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.696173005 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.698031765 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.695480878 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.695508109 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.699142226 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.70301493 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.695871967 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.694824741 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.695404212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.697368521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.695743691 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.703143374 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.695333058 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.696622467 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.694148941 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.697956108 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.696250125 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.699344062 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.699071589 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.697631243 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.698636313 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.69667925 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.696151103 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.699317734 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.697911218 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.69668703 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.696247055 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.701145993 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.706019126 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.7025043 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.696925817 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.699800003 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.696920429 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.7015783 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.698578628 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.697541357 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.698488844 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.709760114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.706007997 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.704420482 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.70010923 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.697550541 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.703669187 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.7000463 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.702487033 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.700332951 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.698902684 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.698831736 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.698960124 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.697611428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.699750575 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.697744314 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.700469311 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.700482762 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.70273408 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.698512022 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.698904882 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.698661248 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.698875235 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.699461384 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.699646367 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.698752473 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.702773387 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.702395804 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.698250443 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.700456937 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.705651263 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.702155507 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.701042307 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.700852969 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.701020708 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.699821693 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.700795713 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.699364389 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.702436711 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.706324277 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.70450873 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.710512773 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.702016487 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.709031148 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.699442323 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.704005583 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.708271907 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.698191713 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.698758176 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.699552456 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.699507138 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.707124673 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.700748508 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.699719321 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.704245061 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.699876652 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.699718625 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.699958097 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.70205824 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.699751978 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.701167403 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.708095314 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.70208258 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.70548084 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.702991872 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.699036 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.699778201 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.698697302 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.700742495 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.704559706 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.701837351 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.701659263 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.702129403 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.701260594 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.700560187 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.700458614 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.701545265 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.700666276 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.701500829 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.708135687 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.702267807 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.704943081 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.701901132 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.709326531 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.701940897 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710073143 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.702465114 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.70241849 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.701485948 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.702356325 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.704044902 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.702285714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.703333621 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.700994437 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.703617944 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.706042493 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.703720813 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.704793443 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.704449146 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.702954818 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.703017105 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.71172262 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.726937116 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.705194066 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.706630456 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.701777163 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.704427388 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.705716382 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.701424845 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.702240078 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.705069494 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.714188253 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71082039 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.704108813 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.703009612 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707270886 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705170263 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.702516844 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.701706689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.70335384 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.701951043 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.703384205 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.70214949 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.707208792 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.702804345 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.703283606 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.706175302 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.704216285 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.713954372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.704625553 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.703825791 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.703040123 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.702598994 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.705355102 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.705543317 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.704416539 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.70562308 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704879348 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.705213245 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.711900398 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.7104915 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.707411725 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.70615542 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.703669139 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.706709267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.705311479 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.704439845 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.703832261 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.705183116 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.706759457 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.705123031 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.705627712 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.703823924 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.704968034 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.704790935 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.704478137 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.708483637 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.714618627 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.706117475 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.705272862 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.704459497 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.705284481 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.704819939 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.706658347 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.713736677 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.709390409 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.716051812 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.714718006 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.70978889 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.707994354 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.70866737 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.715090418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.704128363 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.707181851 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.706347488 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.70819606 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.706100345 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.710536384 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.705841929 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.71314139 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.707697804 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.707168663 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.713882596 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.708615573 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706866745 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.708215216 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.711784103 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.70766034 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.705673396 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.705450064 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.707578078 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.714214725 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.710080351 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.706438111 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.709251493 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.705305015 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.708911048 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711379617 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707161326 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.709931409 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.706635854 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.709418237 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.706946977 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.707294964 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.706890695 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.709193876 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.708993689 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.712906522 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.714801438 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.708058466 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.709666607 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.708639115 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.708526276 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.707535679 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.707352993 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.707361191 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.706951708 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.707296999 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.707782033 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.708920523 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.710162339 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.708759383 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.708915495 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.711614764 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.708359615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.712786693 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.719093982 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.714907198 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.707260507 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.70836559 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.709040321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.710516651 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.708232918 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.707911352 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.708901587 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.71128321 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.708865153 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.708241454 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.711066532 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.713240468 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725939935 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.708625767 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.710747103 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.710641648 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.713057827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.708689315 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.708481751 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.709039139 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.710181965 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.713108543 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.71737534 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.708865026 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.716871972 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.711177629 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.709760546 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.71382204 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.712714983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.718532482 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.713515902 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709796508 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.709940266 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.713922763 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.726859424 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.709828919 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.719849349 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.74189414 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.710343732 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.710982532 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.710640848 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.71027209 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.710315196 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.712040895 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.71090381 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.710598573 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.709789804 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.710651015 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.711033822 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.718542105 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.712058022 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.711147505 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.710757962 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.710239717 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.711464809 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.710261728 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.710708261 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.711093518 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.710602544 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.71062874 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.710345801 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.711519476 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723039078 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.722246726 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.710402912 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.712129634 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.710796069 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.715310846 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.715138489 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.723306914 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.71954154 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.711425552 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.711539224 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.715085853 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711448838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.710842865 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.713758106 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.713397845 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.711936308 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.711772949 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.723106361 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72002096 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.71710928 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.711749501 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.711772918 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.7123812 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.714669338 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.712259533 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.712429012 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.715013642 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.713766292 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717795231 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.712311464 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.711824003 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.716803388 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.721514364 seconds)
  done (took 1015.427652191 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.715283021 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.713144825 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.714890126 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.713220747 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.71342311 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713188756 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713943558 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.712886026 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.714115967 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.713092651 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.714277079 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71465576 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.713930383 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.713753977 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714006072 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.712989947 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713707219 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.711828668 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.713610241 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713635281 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.713035047 seconds)
  done (took 37.636491998 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.714168382 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.713237762 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.714482667 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.713940404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714938137 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.713381938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.714962622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712814665 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.714111033 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713171421 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.7142423 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.714028567 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.713888512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.714305747 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714206375 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713856599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.713713639 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.714061293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.713968457 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.715907144 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713085079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.714545034 seconds)
  done (took 39.359886489 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.714409557 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.716732265 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.717299864 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.714623141 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.714380403 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.71400974 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.714918942 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.714711109 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.715430271 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.716721602 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.714336524 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.716575125 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.723405229 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.722801943 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.718002058 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.715610243 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.861079037 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.716190751 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.715331737 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.716873305 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.715522003 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.721837945 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.715319131 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.716007733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.715807183 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.715018458 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.716343032 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.715705717 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.716150127 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.717150344 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.720497111 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.715893609 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.717193831 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.718719261 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.717437906 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.717769824 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.720707982 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.717245644 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.716642627 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.714996162 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.726415069 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.740351144 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.716381886 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.723398796 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.716437811 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.717033007 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.721097659 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.723593082 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.716816303 seconds)
  done (took 85.969903049 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.716427929 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.716189061 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.716757954 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.71580422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.716111234 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.717393944 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.716606599 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.717043645 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.717216464 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.717843884 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.71676013 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.717218287 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.718462513 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.717467209 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.716605958 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.716615817 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.719058536 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.718455581 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.718220853 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.719359956 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.716756362 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.718082062 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.719621815 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.719191644 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.717203594 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.717241162 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.717575859 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.717441168 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.718896846 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.715963831 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.717060878 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.715752028 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.716542263 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.716140757 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.71718101 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.716367617 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.716897882 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.715526342 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.717302243 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.715882255 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.718978437 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.716074237 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.715571144 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.71689601 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.716388167 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.717277671 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.716895809 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.715760906 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.718881307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.718973646 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.718458535 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.717264996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.716574203 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.716294291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.716051184 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.716163175 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.716131113 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.716273193 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.715867568 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.715327647 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.715562332 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.715950899 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.716684263 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.716267169 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.715622964 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.715565704 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.716668519 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.715162739 seconds)
  done (took 118.407004791 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.718156213 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.715824617 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716604315 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716195408 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.716209716 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.715887264 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.72045616 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.720706804 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.717212036 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.716778864 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.717228017 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.715626062 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.716300553 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.71182104 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.713255755 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.711835197 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.712850968 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.712552363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.712589314 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.710837401 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.710960244 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.711442548 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.711092925 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.71078711 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725413944 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.709899106 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.710546904 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.710054957 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.710122317 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.710862529 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.710467596 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.710043003 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.710504522 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.711503341 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.711266859 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.7108727 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.71121381 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.710985889 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.711125053 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.711632963 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.711299433 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.710220801 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.713967631 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.710667805 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.710953281 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.712293449 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.710957119 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.710911979 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.711269102 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.71148509 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.710905716 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712824497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711431117 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.71168584 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.710923151 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.711639422 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711888095 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.711490004 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.711877637 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.713232017 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.711529998 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.712051612 seconds)
  done (took 107.850049936 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711847065 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711745445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.711412434 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.712020361 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711176285 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.711949264 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.71134373 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.712177048 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.713654659 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.711204641 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712279695 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.712308953 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713542001 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712440086 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.71159932 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.713531165 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711594444 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.711889949 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711297231 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.713092246 seconds)
  done (took 35.891824715 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.710735095 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.712816992 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.711423839 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.712813279 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.712886484 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.712077514 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.712014521 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712183084 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711038939 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71155053 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.712631198 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.712613845 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711360975 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.712488938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.711741415 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.712909363 seconds)
  done (took 29.041966394 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.711929501 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.713052156 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.712956068 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.711859483 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.71376208 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.71288508 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.712213851 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.714378195 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.712686644 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.713484565 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.713253098 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.712139556 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.713406701 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.713080413 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.711008328 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.712672376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.713315589 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.712609516 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.711437705 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.713190558 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.713282037 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.713438888 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.713805205 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.714219566 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.713811832 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.714368084 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.713402142 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.71319068 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.714660376 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.711247782 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.712672223 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.711946633 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.711546006 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.711913294 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.712221029 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.709685494 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.710147356 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.709297761 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.709874999 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.71034174 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.707663245 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.706212499 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.705624657 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.707196908 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.707032993 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.706225797 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.705723422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.707034284 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.70712802 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.706418436 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.705403267 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.70772769 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.705601674 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.707986617 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.705760592 seconds)
  done (took 95.75019552 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705255261 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.707513571 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.704256708 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.705951608 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.705719211 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.705382217 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.705686667 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.706658706 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.705224601 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.704905141 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.705516818 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.706662881 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706314114 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.705739987 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.704892951 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705004389 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.706468046 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.705750612 seconds)
  done (took 32.344970917 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.705742213 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.706146552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.706203435 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.705092595 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.706742316 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.706375914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707165366 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.705993061 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705905592 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.706828182 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709744402 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.70710948 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706427846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.707421415 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.706358295 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707094312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.706473649 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707479437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.705455644 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.706788366 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.70629986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.706658844 seconds)
  done (took 39.187054953 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.707544823 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.706859501 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.722580635 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.727959467 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.727676268 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.742186862 seconds)
  done (took 11.977188308 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706999242 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706517378 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.706929316 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706980769 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707741926 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708864637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704865846 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705118705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706692607 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706510291 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706920546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706866397 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705711458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705731503 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704560145 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705529335 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705012035 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70663444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703971687 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704284886 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704034081 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704307285 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704232896 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705470674 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704599723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703494471 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703111875 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704327774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705164121 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702979696 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704622887 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704380782 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704557926 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704881642 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704923307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704438145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704547364 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703828422 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701984912 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702747862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.703681924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700928945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70295182 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702449937 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703168873 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702210781 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702621713 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699455013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700080478 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700572332 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699877244 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699787906 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700844193 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700633364 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700495749 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699808802 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700658896 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700151367 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700551124 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700396036 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699980532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700593341 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700906286 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700505418 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700931468 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700014839 seconds)
  done (took 114.075420704 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700678791 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.699742321 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699981665 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701275564 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699723803 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699642769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698745687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700265471 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699155627 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700448297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69977872 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700373945 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700621565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699721187 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700355225 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699764758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699519521 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699175272 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699573101 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699005591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700509924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699473042 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699689733 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698559342 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70008079 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699251358 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699840351 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697906217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699610214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700224482 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699923555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699711907 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700336992 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.70064267 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698907328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699933819 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700164893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699307226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699289582 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698398822 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699456239 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699308758 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698329692 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698926085 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699268712 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69881475 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699660276 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700013628 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699429284 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699357426 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700129382 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69935933 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699506684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698954042 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699583799 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700391852 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698933893 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.699274461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699196626 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69998726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699055708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699967445 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697361765 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698689657 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698734353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698589673 seconds)
  done (took 113.807257913 seconds)
done (took 2359.204559197 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.747866429 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.711704635 seconds)
  done (took 15.094790057 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.859669448 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.815124779 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.700936767 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.731380963 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.700110025 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.722263732 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.698813933 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.699620212 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.698765325 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.700050972 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.699458762 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.883907815 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.759972537 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.699655984 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.700744778 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.790487367 seconds)
  done (took 49.498457269 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.70165655 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.703286447 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.712034859 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.704005059 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.701969076 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.712610926 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.73235329 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.704479529 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.735752104 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.71354729 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.769349187 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.712378882 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.700605879 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.751036499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.715355043 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.716900659 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.795504775 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.776488526 seconds)
  done (took 32.693358772 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.777415344 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.707620571 seconds)
  done (took 10.124911278 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.701049561 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.709000969 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.726701684 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.712017875 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.722837978 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.706140747 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.735563083 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.733103342 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.723027392 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.738492657 seconds)
  done (took 68.843380308 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.70291962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.701054472 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.700773094 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.696298685 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.694726691 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.70243531 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.697146945 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.696754669 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.349781945 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.736712679 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.706850077 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.702412792 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.697565175 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.697111572 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.695446239 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.719365362 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.81493603 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.69405312 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.693513014 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.701810292 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.697331886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.748545296 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.712921843 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.698028782 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.728638152 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.352393676 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.708928872 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.705410175 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.806952389 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.695650253 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.697267299 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.884011529 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.699262121 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.156699249 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.96876678 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.703749097 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.711036683 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.705064116 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.695810796 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.81016417 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.69898942 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.704886789 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.650848963 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.948589522 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.804829388 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.741412067 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.997117044 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.716322803 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.697371872 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.726194404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.699344326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.699072801 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.711870152 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.20924085 seconds)
  done (took 123.328383634 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.697048513 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.041761193 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.865143019 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.696431729 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978758538 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.90538722 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.69751327 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.742487948 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.698356891 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92262326 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.953742295 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80000537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.697081157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.698050634 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.697565332 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.69572919 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.851072651 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.766106953 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.697110396 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.697996163 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722830426 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.936122721 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.817714971 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.700044409 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.726373419 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.904936685 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.817560457 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.797674156 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.469275802 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.696365574 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.75791748 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.699428652 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.699322839 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.696093843 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.853481216 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.788777667 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.777273829 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.698806222 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.696265728 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.696713389 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.444801802 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.899157635 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79279767 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.825258763 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.947187741 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.898974813 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.474817689 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.697252296 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42944363 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.858944443 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.924708059 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.924288245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.817128404 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.70002676 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.22621127 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.696732668 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.697170868 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.944969142 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91666797 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.79146334 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70002098 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.697784175 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.697718096 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.985788085 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.699883705 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.792232801 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.700242147 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.69916898 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.792297056 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.793552809 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.926880867 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909160585 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.728158883 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.033593585 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.204394739 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942566098 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.762418761 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94746286 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.699721218 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.697410765 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774814589 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.542105018 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.948650465 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.977520541 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941465719 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733806397 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.415708854 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.698101354 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.923071873 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917424989 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.957061244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.945800576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.937158574 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.020030589 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.698274089 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.698528311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.919370935 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.822119582 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.70057042 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.044649147 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.927344644 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.230266127 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.727732005 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.001739356 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.828999291 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.700950343 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.329177385 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.700634298 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.927957545 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.73757677 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.700656748 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.701367876 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.917375479 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.686323411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.699620413 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.637049238 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.760335875 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.704174179 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930281972 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.703239428 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.96698932 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.703633868 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93271272 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.12086524 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.730668598 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.93116552 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.94519524 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.702632798 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.938112566 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.941682378 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.813963925 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.968533566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.610789477 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.702194292 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985161289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.703636295 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.700091009 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.868385893 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.70101669 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.841155013 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.702899914 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991363765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.720459393 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929552725 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704220137 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.953945562 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.732396575 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752221035 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.704058368 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.829885761 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.702400377 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.533654028 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.856825319 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.117391863 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.701214354 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.522776294 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.704250088 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.848505698 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.925870981 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.723883236 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771261123 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.359374281 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.701842841 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785722971 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.724463628 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.089211411 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.703615974 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.951572779 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.702973541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.701013261 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.700664945 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.987425231 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.9369607 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.70409723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.701743422 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.604344613 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.702184431 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.7029879 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.883963824 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.080827313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.702837274 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901211467 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706394569 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.828134311 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.705915756 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.776575876 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.039065209 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703801514 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.702021914 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.70330265 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.703546962 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.704306014 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.963058015 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.726895193 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.193564099 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.83938604 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971640218 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.011144445 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.941892101 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.744385885 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.704232236 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.955918628 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.70551835 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.763625638 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.704985052 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.723085631 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.927467139 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707079347 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.909587866 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.970825732 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.707756285 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.750350371 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.705701154 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70357605 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.703529725 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.849436395 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785309028 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.704849188 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.704200063 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.818378935 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.822944197 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.909422248 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.705243583 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.752840088 seconds)
  done (took 866.111665453 seconds)
done (took 1167.330233118 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.704389406 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.708105977 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.707160758 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.709291416 seconds)
  done (took 28.470270969 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.713545728 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.706851997 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.707331106 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.705993418 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.706971529 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.705617307 seconds)
  done (took 11.885975781 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.729291783 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.70702588 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.705796225 seconds)
  done (took 20.783101327 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.776061867 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.087845448 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.835027429 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.115370203 seconds)
  done (took 9.454546541 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.707049294 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.706360021 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.706512093 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.706338989 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.713619026 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.713441078 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.706665911 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.7060329 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.713751578 seconds)
  done (took 17.022061848 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.813289974 seconds)
done (took 93.070045591 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.214706972 seconds)
    (2/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.722591043 seconds)
    (3/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.900950723 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.7223176 seconds)
    (5/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.854445264 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.779079458 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.847542916 seconds)
    (8/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.090071678 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.993131503 seconds)
    (10/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.854629285 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.841303333 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.745056792 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.713199469 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.786231748 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.94598409 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.79363864 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.732563079 seconds)
    (18/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.597267267 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.719932375 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.499283114 seconds)
    (21/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.807384952 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.733074129 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.714365662 seconds)
    (24/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.472992358 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.88077187 seconds)
    (26/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.813646537 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.737997032 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.903811858 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.026178794 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.017133756 seconds)
    (31/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.719888973 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.347851902 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.72008756 seconds)
    (34/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.96097207 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.971213396 seconds)
    (36/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.057439018 seconds)
    (37/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.8147871 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.733875743 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.991770911 seconds)
    (40/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.806375884 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.047734803 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.891824843 seconds)
    (43/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.792791972 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.824478608 seconds)
    (45/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.025296622 seconds)
    (46/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.825183091 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.720482588 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.238699303 seconds)
    (49/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.011915977 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.063549937 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.742142105 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.716787095 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.905624034 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.739732741 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.974389841 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.939622719 seconds)
    (57/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.82074172 seconds)
    (58/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.970264859 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.721663146 seconds)
    (60/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.442402788 seconds)
    (61/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.81985777 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.417454532 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.745053465 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.716903422 seconds)
    (65/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.169252046 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.784644396 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.967262733 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.02517546 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.501710438 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.873767772 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.74092048 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.777292064 seconds)
    (73/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.608416399 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.827322948 seconds)
    (75/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.455437333 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.811823603 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.904453197 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.511290501 seconds)
    (79/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.536293159 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.736525199 seconds)
    (81/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.910289892 seconds)
    (82/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.843897234 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.737043084 seconds)
    (84/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.922069418 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.711707009 seconds)
    (86/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.836531481 seconds)
    (87/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.803609912 seconds)
    (88/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.767112801 seconds)
    (89/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.720407736 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.924994122 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.721889097 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.822193551 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.205769632 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.895236641 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.722621251 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.790935133 seconds)
    (97/309) benchmarking ("perf_sum", Float32, false)...
    done (took 3.39840166 seconds)
    (98/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.910745984 seconds)
    (99/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.726084005 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.536985443 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.72256736 seconds)
    (102/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.827875019 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.082506954 seconds)
    (104/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.725924187 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.942972336 seconds)
    (106/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.82484557 seconds)
    (107/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.877236313 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.731044596 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.839035114 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.727956787 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.728462457 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.656955139 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.108482092 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.938497667 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.726508552 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.166086973 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.740394679 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.743172281 seconds)
    (119/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.280483394 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.733561697 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.872286967 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.962012315 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.723152295 seconds)
    (124/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.848715481 seconds)
    (125/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.158917276 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.500420626 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.630130502 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.806878461 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.117947498 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.396904478 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.117423817 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.923011004 seconds)
    (133/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.745023262 seconds)
    (134/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.892373227 seconds)
    (135/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.2119238 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.863479128 seconds)
    (137/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.757943076 seconds)
    (138/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.745222134 seconds)
    (139/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.781666057 seconds)
    (140/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.722477127 seconds)
    (141/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.954109352 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.755876124 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.75736037 seconds)
    (144/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.229864051 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.841553176 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.977119643 seconds)
    (147/309) benchmarking ("sort", Float64, false)...
    done (took 5.447737673 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.727942032 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.988845884 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.988395662 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.079953395 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.726185477 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.085853477 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.732457871 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.783164483 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.722563268 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.126895716 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.754768844 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.405931362 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.728154814 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.629621195 seconds)
    (162/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.043107379 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.730396894 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.041763102 seconds)
    (165/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.881684267 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.746277644 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.038627247 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.745563655 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.82407287 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.739511245 seconds)
    (171/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.748377723 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.117373722 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.728318838 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.165593142 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.393549156 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.18318075 seconds)
    (177/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.821654872 seconds)
    (178/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.811013459 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.006792083 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.727289247 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.279292304 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.936889792 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.730611389 seconds)
    (184/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.264685833 seconds)
    (185/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.963490728 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.855988145 seconds)
    (187/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.10266324 seconds)
    (188/309) benchmarking ("sort", BigInt, false)...
    done (took 6.729930897 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.55007754 seconds)
    (190/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.74612764 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.040675963 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.042755848 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.972641303 seconds)
    (194/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.728849948 seconds)
    (195/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 3.216684133 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.189706173 seconds)
    (197/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.729298198 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.982888053 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.862813719 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.042441278 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.731493627 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.881685006 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.724806922 seconds)
    (204/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.874593763 seconds)
    (205/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.868737351 seconds)
    (206/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.814760512 seconds)
    (207/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.101586566 seconds)
    (208/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.971243396 seconds)
    (209/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.731405915 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.948753064 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.790042891 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.098059114 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.726819423 seconds)
    (214/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.909379422 seconds)
    (215/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.854700359 seconds)
    (216/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.724704282 seconds)
    (217/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.553496621 seconds)
    (218/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.655058309 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.984831762 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.963949952 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.731067897 seconds)
    (222/309) benchmarking ("sort", Int8, false)...
    done (took 5.293853615 seconds)
    (223/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.731508967 seconds)
    (224/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.855687283 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.800519382 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.950269758 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.336991667 seconds)
    (228/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.753301054 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.727649778 seconds)
    (230/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.735026911 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.995394808 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.859919838 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.065520248 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.051670508 seconds)
    (235/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.112036811 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.758392986 seconds)
    (237/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.060127765 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.050022015 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.731732658 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.667935467 seconds)
    (241/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.864370366 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.725830943 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.911166967 seconds)
    (244/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.744068766 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.838072044 seconds)
    (246/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.810558547 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.729923521 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.935043398 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.410193103 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.879894399 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.726697864 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.922095818 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.728891282 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.268770113 seconds)
    (255/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.737706016 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.029537566 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.867099703 seconds)
    (258/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.841706279 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.864377865 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.728914355 seconds)
    (261/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.175311736 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.357365116 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.876103603 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.1337539 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 5.476209697 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.73405728 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.936029575 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.176876352 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.612381616 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.056279868 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.631998406 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.750803491 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.911556824 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.742206145 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.120713298 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.874081866 seconds)
    (277/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.000590639 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.736084015 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.862208474 seconds)
    (280/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.811725017 seconds)
    (281/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.806559645 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.918543804 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.730834936 seconds)
    (284/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.160890831 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.960106361 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.818720771 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.906553396 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.624632678 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.98586726 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.813023686 seconds)
    (291/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.890355261 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.748816957 seconds)
    (293/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.811779388 seconds)
    (294/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.040178667 seconds)
    (295/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.736577037 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.486215984 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.051431921 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.064980956 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.774333217 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.978663509 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.828732246 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.855045401 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.918357053 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.946801907 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.358865093 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.851868965 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.949428781 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.900587795 seconds)
    (309/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.695729463 seconds)
  done (took 961.662044676 seconds)
done (took 963.59165213 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.757807351 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.750020234 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.73262039 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.754672898 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.845185851 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.779387466 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.745736619 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.736585777 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.783712373 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.783908884 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.732532192 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.778023547 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.732893995 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.734570507 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.733437484 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.750876968 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.04306964 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.767248911 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.751807528 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.746785333 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.752080486 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.73424264 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.783619878 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.779052239 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.73886404 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.738608215 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.737961197 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.752845413 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.846654361 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.738012048 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.739105397 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.746103296 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.043022792 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.763841555 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.733417208 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.753071347 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.747031991 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.745239357 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.738575531 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.76723237 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.13075419 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.776878901 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.735497111 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.734976946 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.734389866 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.741765632 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.735532327 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.742772648 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.749601008 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.752092364 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.124650068 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.7932395 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.738568141 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.736098746 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.749176085 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.736374752 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.739747543 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751399277 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.755393612 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.751234443 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.030521727 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.773133003 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.740130047 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.754522628 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.745563487 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.157981629 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.77548855 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.742041525 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.131601271 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.784731395 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.161056306 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.789029125 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.740660276 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.750694605 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.768992718 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.045169947 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.767542537 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.736086208 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.746155868 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.734200774 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.751943723 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751596845 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.741922387 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.735675003 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.753055824 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.784335118 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.750888269 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.738546144 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.750643916 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.756856082 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.74581315 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.748957762 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.741136508 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.735119385 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.750196139 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.742471346 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.74076331 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.739984326 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.742662977 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.751845981 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.133650663 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.795905771 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.734847714 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.735390113 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.738960719 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.753031846 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.131281075 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.78007132 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.762226251 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.789181513 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.740422476 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.031412517 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.773093772 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.753722764 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.751011349 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.741864717 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.737971622 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.032620206 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.158244995 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.793643447 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.739791295 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.737010884 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.755620711 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.741051228 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.73640386 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.047563389 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.773847731 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.753881039 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.861844454 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.752005118 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.771805384 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.737706251 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.744733251 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.78921902 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.758403083 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.773008168 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.742575649 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.756549005 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.759220709 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.738116273 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.753781195 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.753405756 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.740537178 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.748696074 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.737241925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.790537803 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.755333704 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.755963022 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.760934996 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.864266562 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.737401647 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.032579892 seconds)
done (took 273.804560942 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.820064048 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.739787042 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.829504793 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.739766164 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.830219683 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.81374244 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.73952869 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.739814978 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.739858744 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.225872818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.739990067 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.745791022 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.736974523 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.739943316 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.809124008 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.741240132 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.739113375 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.172270635 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.741912718 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.821616812 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.737918125 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.739944033 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.740689956 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.231848101 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.738382297 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.740311981 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.81885181 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.740594599 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.185536031 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.739912911 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.738085134 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.184871294 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.81801725 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.767233783 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.74702045 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.748360731 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.830829855 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.748731226 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.806707855 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.808678746 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.844909453 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.772928906 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.73989583 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.740082458 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.74446625 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.742046907 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.74057839 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.773626641 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.740983382 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.745747916 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.175044694 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.744858368 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.749031451 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.741871499 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.74287639 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.769173357 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.741462215 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.742003155 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.820430903 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.742710191 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.810351786 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.237099888 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.224503139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.741884567 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.740815943 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.741269151 seconds)
  done (took 176.543512127 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.80793831 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.818186032 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.807086703 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.747789484 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.791371433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.809831603 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.745883132 seconds)
  done (took 14.204232209 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.748862191 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.742236435 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.79106109 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.790561031 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.743123893 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.902238689 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.743718943 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.753090394 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.747571973 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.76900265 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.743041574 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.741608562 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.74985064 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.74236085 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.791505377 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.754703893 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.858154173 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.744770856 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.742854168 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.889826912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.748240813 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.749682589 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.768954713 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.753546278 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.744817281 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.749251615 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.308415736 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.743488358 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.742853394 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.7425807 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.742600339 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.784262877 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.743517958 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.742925933 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.744622399 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.856925511 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.743343062 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.744971229 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.744877037 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.742557285 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.74491145 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.743354365 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.744978267 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.743854383 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.744417015 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.766863729 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.74395714 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.743918048 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.744161145 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.74463418 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.768892286 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.745622374 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.744227812 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.749975267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.7869907 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.751392186 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.744291583 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.744771856 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.743844663 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.744695602 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.894058544 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.793971881 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.744125462 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.793194496 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745488463 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.746817451 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.744001619 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.74422138 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.832741772 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.743331539 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.794724994 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.744947143 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.903015708 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.767312613 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.745990486 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.748134005 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.74909625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.74621571 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.743292753 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.752503789 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.745627075 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.748313563 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.752804474 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.751901563 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.746453008 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859966798 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885539928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.746622677 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.748096727 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.754285947 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.745880504 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.790858128 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.746460375 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.746069619 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.802527617 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.861551648 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.773554199 seconds)
  done (took 193.484701211 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.752210395 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.753512205 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.748157079 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.763537882 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.7473732 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.748145238 seconds)
  done (took 12.192618693 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.750465431 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.75191499 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.748780361 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.748816883 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.746708537 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.746738301 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.747269663 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.749797196 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.751290738 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.746644794 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.747795463 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.748888592 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.749124173 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.74820894 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.748860954 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.747731219 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.74745992 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.746789056 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.749042334 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.747980025 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.998977663 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.747562517 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.748413235 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.750838827 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.75196234 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.748630548 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.764580711 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.748864473 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.748466889 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.756911655 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.752920598 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.7507399 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.751928167 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.755919 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.752002526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.752366612 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.753437877 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.749292421 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.750473705 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.751736193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.749699489 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.749073483 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.748979435 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.750301236 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.752780124 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.756353028 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.753959253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.763790974 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.750577275 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.749879821 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.750238121 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.749975943 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.749237363 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.751669997 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.753274669 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758016276 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.753651817 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.748103548 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.749898414 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.754596466 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.752592123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.750126335 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.753401804 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.753396224 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.757231767 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.750878674 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.753402735 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.75280348 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749163639 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.750310857 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.752077208 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.748879003 seconds)
  done (took 129.007726633 seconds)
done (took 527.123641198 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.990812728 seconds)
  done (took 8.674606355 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.863239545 seconds)
  done (took 8.605393629 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.254634031 seconds)
  done (took 9.941217973 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.771826843 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.798908164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.767129271 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.750947502 seconds)
  done (took 28.797218592 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.948898243 seconds)
  done (took 8.636149923 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.777511174 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.747310286 seconds)
  done (took 15.278841921 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.897485151 seconds)
  done (took 8.581630222 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.787776069 seconds)
  done (took 8.480819125 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.773014973 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.751308315 seconds)
  done (took 15.233151058 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.752346841 seconds)
  done (took 8.434661467 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.97675025 seconds)
  done (took 9.763164264 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.776906625 seconds)
  done (took 8.530597853 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.773077058 seconds)
  done (took 8.456016147 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.774247895 seconds)
  done (took 8.457028637 seconds)
done (took 157.553407799 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.753318938 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.753021094 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.751054123 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.750516616 seconds)
  done (took 28.692271698 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.783269604 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.783793431 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.788001491 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.795200705 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.787713706 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.783043601 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.776371212 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.776934399 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.794522856 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.788625626 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.786892631 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.786697238 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.784657956 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.777293696 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.78691944 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.78682485 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.795085376 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.785937092 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.776996981 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.787036996 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.752667917 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.797948081 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.788046429 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.752307674 seconds)
  done (took 44.48840314 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.945042417 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.822716238 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.908666345 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.80750857 seconds)
  done (took 9.168904584 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.804446663 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.806055275 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.816967161 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.856313649 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.878571127 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.815304138 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.77855298 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.774174689 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.761150846 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.805260313 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.881772544 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.801285551 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.893176358 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.754567432 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.939668167 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.75272434 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.752399201 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.805326519 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.856238667 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.869631146 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.753309299 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.804696427 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.808136086 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.802098298 seconds)
  done (took 45.258396429 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.755452816 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.762458623 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.760824487 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.754497752 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.755311318 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.755546921 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.76118375 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.756761896 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.776058046 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.756540645 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.754677044 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.75674344 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.762739303 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.754953188 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.754910279 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.768532345 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.771530034 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.756612059 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.759465139 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.76223802 seconds)
  done (took 36.885298523 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.754490669 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.601910654 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.100601494 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.006103786 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.755141327 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.759152856 seconds)
  done (took 30.665263894 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.767971079 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.760892524 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.754813478 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.81033205 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.897985761 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.762725701 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.756431468 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.765661243 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.800820208 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.820387466 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.774705826 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.783043364 seconds)
  done (took 23.143741 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.756173031 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.756394056 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.756971166 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.768005943 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.765486806 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.765298133 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.763572317 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.757101658 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.770359943 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.775369506 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.764944953 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.768316124 seconds)
  done (took 42.861974063 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832826728 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.628543721 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203603006 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219091335 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278263888 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95999716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.75622125 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.840533261 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.757040978 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026400086 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.112049962 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962701588 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000798919 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500401 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.760600783 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.235742664 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047854962 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976919037 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78857951 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440121808 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864840892 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2581645 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.395230493 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.868548745 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958803238 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.879485173 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.019026963 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.704906974 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.804748956 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758402106 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760317969 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.756168091 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026989663 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876044347 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82567551 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761967967 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.171956231 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.460466628 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.836820438 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.447237581 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.313077698 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878676808 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758831535 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755794645 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.681634243 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266934001 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847130098 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.759318316 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.456241562 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.754962098 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76253757 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831944974 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.759599284 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.56352413 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438521235 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024306943 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.756821024 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759191107 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321490289 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785189779 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367102177 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.690726691 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.844301363 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.400677509 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221819529 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.916110978 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.759522026 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7608183 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683479403 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.401377257 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878054743 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89875939 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.775547137 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397603341 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049655775 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.195863819 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909786087 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039069931 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.534190367 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.689662263 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975522773 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.699681086 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683397343 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.586441801 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.683845884 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977606847 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795203824 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.353080704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.79689664 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.840150206 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764251515 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776591334 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761301703 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97214524 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.654198244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762456771 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.063087406 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019242624 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776368704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.845285867 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686480334 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.761707288 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003726224 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.964035494 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.979116018 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246533971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853486952 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.673717405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.772726215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.673271054 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.769230121 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031696774 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823553592 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792968892 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880736414 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.709669908 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028824726 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.707436447 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.859222662 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.137389403 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002473962 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.114181146 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.012948625 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824294466 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.768217872 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.76056676 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.475970521 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.374603304 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.979078298 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.775431326 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.231532041 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.769044241 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.762661086 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696484134 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.382450799 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.149965635 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.851951958 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.976082773 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.688002147 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037882377 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687666146 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899649459 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.766450219 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.976308164 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.410996165 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.853348842 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010471066 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977937128 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.974049996 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772297716 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775974943 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854812719 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778852242 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.155935588 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.009111675 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.763903841 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.765158666 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483005592 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.820654347 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762840924 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.766576517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.288309547 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041510939 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.792687636 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.768265339 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638475872 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.776131298 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.825135958 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765859851 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.767112516 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.27913019 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.26698313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.768624308 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.409291569 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980580084 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766953791 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.464404175 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951815815 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.776041983 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038188147 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833330034 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.692592141 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.464135742 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.463917212 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764738505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691150034 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.765549322 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767577542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769313723 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.952777436 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045100821 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818339026 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.41928925 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.872029937 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769145789 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.765684461 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765663912 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.277465407 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812719796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.245015359 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890745195 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893340633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.775496603 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.690839351 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.766397938 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767585783 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766610887 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.713684932 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815966422 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.412481782 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970078123 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012397754 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.170795215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.775066876 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.467452194 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.885891254 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.780106184 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.087109419 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30705796 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.868498123 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830755256 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.771107079 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.491281555 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505884274 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329788991 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061723479 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091499178 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119987533 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.112344918 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.085695959 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.850469806 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992156162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287607199 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.820978022 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.854074528 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702129319 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779600831 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.416486529 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123182822 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778116926 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985099822 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060755345 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.157776716 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904428777 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970897544 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796872539 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.560957981 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790693031 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.303156186 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784076567 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.242784897 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973819091 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847707974 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.090677253 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851779581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.765603591 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110523661 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812004044 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.471186517 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11800855 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.14109408 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.269931958 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996320492 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.771239947 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.207559688 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125600827 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.930277046 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.884672809 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694456603 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.771987547 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.772889493 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.780507962 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.738123151 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.609362329 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.010739901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773844763 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993864718 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.856092991 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137797831 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.721947568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.770848153 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768210098 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021926585 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422755999 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921102364 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.043961575 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.33680483 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776480951 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.695029919 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694048134 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.469693569 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771217064 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73413652 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986303219 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.874852091 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450298779 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.123783424 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075984783 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.012111059 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.78060456 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045372798 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048358292 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.259191609 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789238603 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.867515156 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098122373 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.461732012 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.983359667 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995351109 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300050523 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.986663429 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232160902 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.74702032 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.770592211 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.976495339 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.984603997 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.176220529 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946801562 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.480208866 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.784541885 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135834916 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83246872 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.169300962 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.9615031 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.855840839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775996271 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847147329 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774692498 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.776043564 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775766456 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779684055 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.169915755 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894295397 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.78347203 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846602333 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817756949 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.340760805 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.780191598 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047461974 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14141435 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112023661 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837281452 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771038396 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778692639 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.697439138 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901862566 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.211727161 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042398746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.891964461 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.9038804 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79132973 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105613929 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.992643464 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080020775 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043567164 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.654750925 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376627333 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.88988515 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.98836154 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77757069 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.975052131 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995299051 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082258251 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335378818 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.873055181 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962969995 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.044613285 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.131431153 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.773274668 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351626953 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.780070902 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176966604 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.810454103 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.171081843 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031284503 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776658387 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892989476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.77674497 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.971101363 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.222376248 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438149216 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123390404 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633305145 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.77736248 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053166247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112170291 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082308848 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850259958 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778246291 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.464554364 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906015256 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.633226464 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.005416002 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.774820076 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977278818 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.484242237 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.776948246 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050430926 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08135605 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.774790672 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.672616191 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807656807 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.777135343 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987761115 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999192546 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023461748 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778023896 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.775434446 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.583041547 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053929723 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839603185 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701302023 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.775862424 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819315285 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.001368888 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793105023 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.289733497 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.47596339 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061989358 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.685971781 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791049044 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.155631254 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155832352 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112472197 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.300007276 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999560035 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333530467 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.582857265 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150132019 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.777274549 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358690391 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152778764 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.77650084 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.253140823 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885538423 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.051994239 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102705428 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.796233044 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501085077 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.812935847 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9902754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132487335 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706611254 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780720636 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.822809979 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.776858099 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.77978742 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.785709591 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.705365482 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.195042448 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.613847204 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331972969 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.779243157 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.783129211 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.325017566 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285127619 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879715759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792787308 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786078245 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.46881681 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.0665281 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022037824 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274220376 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.868691691 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.77693624 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777889671 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696257743 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.963180462 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.965443698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064568882 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.094185869 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.881627851 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779529149 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.98504237 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980353855 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.179171682 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912568299 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.872134294 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889784181 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.87185496 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.482788261 seconds)
  done (took 1612.346497966 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.79533113 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.797223904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.787236086 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.793991275 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.802752415 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.793895545 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.841059674 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.872724441 seconds)
  done (took 56.19653797 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.775004779 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.939136921 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.778759785 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.775943918 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.782359363 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.776035477 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.955152367 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.787227687 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.82440326 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.781153202 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.777485833 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.775080732 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.066049673 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.795262756 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.77547593 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.229005298 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.779976156 seconds)
  done (took 73.091560344 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.794911935 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.21746423 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.810375687 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.776937422 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.844534322 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.793640191 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.862940858 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.785992146 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.780280105 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.029166963 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.073973136 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.804761147 seconds)
  done (took 89.286210896 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.790908792 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.779086091 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.781826366 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.781300903 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.781316222 seconds)
  done (took 10.633177048 seconds)
done (took 2104.421133276 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.008001288 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.972448066 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.01888187 seconds)
  done (took 5.701860277 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.920884384 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.971369273 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.085982721 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.089980887 seconds)
  done (took 9.78539475 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.086576584 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.15749141 seconds)
  done (took 5.95707625 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.101441863 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.807294913 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.155050489 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.782092362 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.786726074 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.783914374 seconds)
  done (took 22.071692126 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.7820488 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.780958796 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.781983891 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.782630528 seconds)
  done (took 8.840744825 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.780079834 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.487375879 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.780984267 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.789562159 seconds)
  done (took 20.551876506 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.928755845 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.898072535 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.925116051 seconds)
  done (took 7.465586434 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.001570168 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.576747577 seconds)
  done (took 6.292911224 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.939179669 seconds)
  done (took 3.653089861 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.809882816 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.05222946 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.269703792 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.300039848 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.368213291 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.612811869 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.10656908 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.007163823 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.228583291 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.236869437 seconds)
  done (took 23.705851492 seconds)
done (took 128.809063293 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.121757354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.814198776 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.985947835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.134331201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.018274016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.985582036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.004901048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.122840313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.814787371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.803496953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.140041787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.018172213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953426059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.799313315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959512306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.80086825 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.014010071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.141210419 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.819788325 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.03731669 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.014402043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.781626142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.976089185 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.79707828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.019431425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937997276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.325054191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.805296969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.95718918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.337995598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943473214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.176118515 seconds)
  done (took 165.277581917 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.783287844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.784389971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.78497289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.784184506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.263282526 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.784230142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.783385007 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.783026969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.196085225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.183082704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.784156133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.252612005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.785813772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.783955208 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.787209764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.784013326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.347961672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.785192954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.785994781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.784489085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.7856593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.088718283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.784211215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.095969454 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.341560943 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.786724293 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.783064268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.785137528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.784373939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.783943355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.785636216 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.784484653 seconds)
  done (took 206.320040546 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.783393265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.786783993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.787263291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.784874022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.786618706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.788965796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.785466347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.785318988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.430450948 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421179675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.785557459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.786858964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.788330094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.78652952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.788275963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.785489089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.786878534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.785533568 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.7864915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.786548499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.788339871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.568039356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.787121084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.573042795 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.786555978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.786026148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.786068787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.786533156 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.786965553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.787757196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.789988158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.787593215 seconds)
  done (took 217.740005045 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.033874331 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.787181098 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.787355244 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.693730105 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.788067712 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.787618421 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.765481369 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.032491811 seconds)
  done (took 18.396590377 seconds)
done (took 609.457549184 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.165972708 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.004641126 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.962277809 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.811222384 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.056696698 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.854605663 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.806414862 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.868780734 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.63541155 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.887292844 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.440815228 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.830928343 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.543950568 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.838891812 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.929265777 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.864063937 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.359412336 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.45742757 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.988950846 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.884976571 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.987709068 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.733459566 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.891947607 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.674368031 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.575087939 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.766576192 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.844295376 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.36578495 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.819931072 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.96509366 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.471287775 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.065110905 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.823164672 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.807862518 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.860420531 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.841313221 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.014175455 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.819667945 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.933107039 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.51764592 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.882093839 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.53483501 seconds)
  done (took 99.108177418 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.80372703 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.796054174 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.796233901 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.797579675 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.804739929 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.794988179 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.795225165 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.795674819 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.79479644 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.795363745 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.795478398 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.804948752 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.795383092 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.805686878 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.79581905 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.795650037 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.795050382 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.805020863 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.795942413 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.796245586 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.795974018 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.796115825 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.79151772 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.796905956 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.796390972 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.796370859 seconds)
  done (took 48.468180481 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.791349072 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.944368622 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.033705851 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.813647755 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.792710975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.795582417 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.811567469 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.797482753 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.794302451 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.793872563 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.879514888 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.798077355 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.809354264 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.034238593 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.808635547 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.792711454 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.793019647 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.792853961 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.951773637 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.808487142 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.811494621 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.796862339 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.811282553 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.80562261 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.79342499 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.792188636 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.795623044 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.222076904 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.802119213 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.881520049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.838130465 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.81815315 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.165639525 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.044366319 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.848147394 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.802692089 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.79353033 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886247949 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.798834889 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.792769098 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.81137073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.799198839 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.034337752 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.318778205 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.807418306 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.792826986 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.232403948 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.894445443 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.835020677 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.803785524 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.035936088 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.810866416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.794458395 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.793859162 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.83031049 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.799689482 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.793283641 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.104949662 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.806191388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.811921394 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.798977431 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.794153371 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.958490476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.803271967 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.945609897 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.802962887 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.800799842 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.795432914 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.037973584 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.812095147 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.325960597 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.808411734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.79467417 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.883406831 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.952142053 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.257830595 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.807156565 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.959645662 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.183059438 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.818976562 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.802132057 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.210301401 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.822527064 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.802566131 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.795570158 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.796074745 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.795271799 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.837998286 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.810973919 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.241687846 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.330719973 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.124172342 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.824196783 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.810565997 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.796553304 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.105350134 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.805127716 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.79536921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.030184278 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.336078141 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.810000387 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.802529388 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.308760424 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.81214831 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.81393495 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.805160858 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.041419423 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.812840684 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.838017728 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.796130245 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.802389805 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.799250869 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.814628828 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.804700889 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.796963847 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.302652103 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.903302089 seconds)
  done (took 223.055069206 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.798175969 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.801282734 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.795788835 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.798174803 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.794919893 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.79690741 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.795880283 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.795163813 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.796543578 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.795077208 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.795639927 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.796025499 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.799152524 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.797672465 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.80496987 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.797842295 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.400774695 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.795102902 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.796602148 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.795680741 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.43798398 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.800457644 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.79650166 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.796286546 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.794939577 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.798085245 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.797781741 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.802412936 seconds)
  done (took 165.304411847 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.798058739 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.91011047 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.816403275 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.825497484 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.804934031 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.79792768 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.895952834 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.818898144 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.804147568 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.797339012 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.79898828 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.85864181 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.810052533 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.897389157 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.832764143 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.906581982 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.906277065 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.807790108 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.79997196 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.798258651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.827709998 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.807695884 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.860076393 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921904505 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.820699105 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.912249845 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.821327313 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.799959382 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.799047604 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.911221101 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.820762587 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.859123749 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.827553733 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.816461374 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.91753229 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.91934953 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.907049413 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.907029029 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.808529586 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.799128841 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.800209591 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.801441015 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.913596894 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.821100319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.803059508 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.916426579 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.821938702 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.802555172 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.801492448 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.800053078 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.813147419 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.817690354 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.863285913 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.928172057 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.838208616 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.823567286 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.898860745 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.939804326 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.801539658 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.898951199 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.810031647 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.914558117 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.823172985 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.801843625 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.802098443 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.804255407 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.8305154 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.9083424 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.907687818 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.810272974 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.900035837 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.838104005 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.808455875 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.801180376 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.802373452 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.917226521 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.920388051 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.838992699 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.838500821 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.831681868 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.81052516 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.800742976 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.802573501 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.81787379 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.806616082 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.914866109 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.919722783 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.809658641 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.8023575 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.802539912 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.802149427 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.826104302 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.924064226 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.838318498 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.907984049 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.870326233 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.874611519 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.816689513 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.815068148 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.806024969 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.863784482 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.815767395 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.814551151 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.131932209 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.862293683 seconds)
  done (took 195.55544309 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.172524572 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.853662769 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.858603249 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.113669901 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.159613903 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.782983575 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.849761317 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.852640534 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.876991831 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.035828443 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.929312295 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.871064511 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.840603057 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.8266552 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.85111001 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.876323944 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.862955387 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.202545773 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080773216 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.994940865 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.844652124 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.154261258 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.169672236 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.426661573 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.901733735 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.23912343 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.418294862 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.98792268 seconds)
  done (took 59.776458452 seconds)
done (took 792.988246291 seconds)
SAVING RESULT...
DONE!
