cset: moving following pidspec: 24797
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.424174382 seconds)
loading group "string"... done (took 0.580093861 seconds)
loading group "linalg"... done (took 7.241326235 seconds)
loading group "parallel"... done (took 0.157586201 seconds)
loading group "find"... done (took 1.155124194 seconds)
loading group "tuple"... done (took 1.789241633 seconds)
loading group "dates"... done (took 1.434290876 seconds)
loading group "micro"... done (took 0.227872327 seconds)
loading group "io"... done (took 1.053218558 seconds)
loading group "scalar"... done (took 39.512889704 seconds)
loading group "sparse"... done (took 12.610563231 seconds)
loading group "broadcast"... done (took 1.007973383 seconds)
loading group "union"... done (took 13.077156668 seconds)
loading group "simd"... done (took 4.86908011 seconds)
loading group "random"... done (took 9.946684131 seconds)
loading group "problem"... done (took 1.933055651 seconds)
loading group "array"... done (took 22.963696633 seconds)
loading group "misc"... done (took 1.816784791 seconds)
loading group "sort"... done (took 3.698261869 seconds)
loading group "collection"... done (took 19.269219879 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526569876 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128895632 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.12205298 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123565454 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151404802 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116959456 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128842341 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08777499 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.870202112 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153502195 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120351994 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441590591 seconds)
done (took 5.320091683 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175044863 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082926846 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084651826 seconds)
  done (took 1.330880197 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067307674 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123485549 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068175178 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068831408 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068594789 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071894356 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068489769 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067387863 seconds)
  done (took 1.701928744 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072913063 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070067153 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067943388 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069714953 seconds)
  done (took 1.443933654 seconds)
done (took 5.894482237 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.809320969 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207828975 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18776999 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41260694 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134902177 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16325863 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639173707 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341534243 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.1895875 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079983213 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106312766 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.334464242 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111744434 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640384755 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07359258 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090463832 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136353525 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412758795 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067368959 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083586391 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091247644 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127331368 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084961457 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073855526 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145262373 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067107286 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137973295 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083902355 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.0658689 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218800438 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174693803 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655152464 seconds)
  done (took 10.351665437 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097123168 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100026615 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070725434 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126304158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096370871 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06952671 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073602138 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069088281 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089884491 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132579136 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089027057 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101975666 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068123349 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071068275 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087372449 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208406655 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083132801 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084281944 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072929779 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077324098 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111144811 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07865617 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079784954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080338163 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131421348 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180637065 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096205804 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096546873 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066351439 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082943088 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118036457 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125144813 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065358268 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067242877 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127779272 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094335492 seconds)
  done (took 4.674283275 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.010172665 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.148443927 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093079571 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.138750997 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066797069 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11275494 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066898022 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083997982 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216742784 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.385339898 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.59502862 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114936715 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103672901 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068255829 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069617545 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068893651 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.485525662 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09907729 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110204259 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083917453 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087809045 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071465032 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071875022 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070510619 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06529731 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070240501 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112564319 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093351093 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30078006 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129399659 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069556201 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.962140532 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.130905831 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068119285 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103385638 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164639418 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086910273 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274858031 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069633985 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065292541 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157601938 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071589742 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06711543 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086401456 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106305129 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11751233 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067215662 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069059161 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165674362 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064134411 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081408341 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.633963562 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154670163 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075988396 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065809359 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.260021665 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090059235 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071698855 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065803519 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184924104 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137005014 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069036362 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067953647 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070063353 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071704327 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375865626 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066015098 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.001924229 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070415203 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078174538 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071297514 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074335792 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075663505 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074632011 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089714195 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068282362 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077704259 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067410014 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067518493 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068577983 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08627362 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.376512523 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06864306 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065464856 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070507337 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066427351 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090893763 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098335625 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065619524 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066542931 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101663299 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067859104 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065732642 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107571891 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068017007 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065111054 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086306441 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071463789 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113514649 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.166880071 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09425409 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065464842 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098452549 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072542134 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101192259 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080341904 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070363355 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419971715 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067570026 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066810459 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07098097 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067203764 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069930482 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06830853 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081800127 seconds)
  done (took 21.396395313 seconds)
done (took 38.593995951 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246717155 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077742109 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07800053 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083201367 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081838992 seconds)
  done (took 1.824028051 seconds)
done (took 3.0616803 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12653291 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10310472 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065811624 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100350509 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066049768 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10489418 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104062851 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084774749 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10424944 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0656467 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100504688 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06559723 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065687676 seconds)
  done (took 2.414863066 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083827822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086649668 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071651331 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08547584 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065505383 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084764789 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083402306 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092351779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083443344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074500198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065888613 seconds)
  done (took 2.11062072 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082789324 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086893722 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071999508 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087243434 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064582993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084378466 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08355751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088180682 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083869197 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075988155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064882536 seconds)
  done (took 2.103259107 seconds)
done (took 7.854533081 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078894316 seconds)
  done (took 1.299449492 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.61002521 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.221848139 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084822722 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116137766 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195188137 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122399604 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281929139 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090033702 seconds)
  done (took 9.14426081 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091755009 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082975054 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073106432 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071276367 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07320429 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070109965 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073238507 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070921667 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070817893 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069994505 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072097816 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073853283 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070315108 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070334555 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073306177 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073134639 seconds)
  done (took 2.467265697 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093992329 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093389295 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074897323 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076818575 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073789072 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073464735 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075341007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075144967 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072907727 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073515291 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076190283 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075179361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073531277 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066277896 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075354849 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076748985 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071916796 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076127707 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075509087 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076332093 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076505549 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065222356 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072807299 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075426082 seconds)
  done (took 3.149212281 seconds)
done (took 17.289185636 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116144482 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073371311 seconds)
  done (took 1.414525509 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082439691 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084914861 seconds)
  done (took 1.399237705 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083136826 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067226689 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093609937 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.0805822 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068320072 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067690367 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091011432 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067877154 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067236936 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067447399 seconds)
  done (took 1.986351907 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069194107 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08105766 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072440071 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082711378 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076159469 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065264563 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074663578 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069685761 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08051387 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063886614 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07220172 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084412862 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07325549 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08599058 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075244714 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069796684 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072655751 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068498437 seconds)
  done (took 2.570724491 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067450931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069118157 seconds)
  done (took 1.375143511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068918411 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065213107 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06870346 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068657326 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064883551 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063343944 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064467651 seconds)
  done (took 1.69942158 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393752624 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114885804 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.317612314 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072035746 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083712653 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262923647 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066530331 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072481131 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071856657 seconds)
  done (took 2.740460234 seconds)
done (took 14.42551477 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081161961 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088275844 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098778781 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385119802 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093005893 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067222263 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115456497 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194088355 seconds)
done (took 2.373912063 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212896432 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.644228577 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419769399 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211960891 seconds)
  done (took 2.519720834 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342204752 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089541745 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059403788 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069001451 seconds)
  done (took 1.815001032 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066941959 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070257205 seconds)
  done (took 1.386289911 seconds)
done (took 7.188541165 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067497904 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067698887 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066687532 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068113138 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065374512 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065223133 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067908849 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068091245 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.067504727 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.067419477 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070952575 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064753687 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064878962 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067358276 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087747379 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064739759 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064838818 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064800959 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065156908 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065180368 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067679538 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065082276 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064826506 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069011038 seconds)
  done (took 2.907251349 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084452231 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0682649 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073271487 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073180122 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071184342 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072770326 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073079454 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067869139 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072902798 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070394625 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071398087 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071140057 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069662556 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071478181 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07023316 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07161827 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0732128 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067670032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069692402 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071203899 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073341169 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06755738 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071610122 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073051227 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070884125 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07289857 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069915528 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068051912 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073054208 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071886577 seconds)
  done (took 3.404530682 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070248122 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064516916 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06530403 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071651906 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065644798 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0664131 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064793463 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065268644 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065713664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064831108 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066603498 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064658292 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064868051 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065954607 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065637721 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068889984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080996463 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06611351 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06501227 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066137822 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068485626 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065541464 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065089609 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064862594 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065219858 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064841839 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065626713 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06487644 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065765864 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064523575 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067875808 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068495159 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06454599 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07169882 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068756291 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064826511 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06842503 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064378755 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065277829 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06434046 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064001131 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064274071 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06444084 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071514781 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064499529 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066234697 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064443098 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065498762 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064885838 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067379515 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.180106982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064020277 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066344815 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065567624 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069078426 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064580403 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065394808 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064057519 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065897174 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064186369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064441733 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063896275 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067342559 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065821215 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079529199 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071940867 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064580907 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06639335 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065678075 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067514497 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066014517 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078285612 seconds)
  done (took 6.174125525 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091466657 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089162385 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067399567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066422738 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063308736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065974252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07201126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065669213 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066894654 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083573578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065431461 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066687729 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066479593 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068918024 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065819355 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066658022 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073968878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062866016 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065129883 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068660365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065618872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071455517 seconds)
  done (took 2.813324237 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159135216 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072228306 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107776039 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077125095 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071602529 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077385973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071039445 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071642641 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071413643 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068738407 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068494872 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071466908 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071079533 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068677249 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069017343 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069219484 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071114643 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068980538 seconds)
  done (took 2.673822915 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077942498 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067566583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08849279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067798077 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067540277 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070088149 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071810627 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076088041 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069627156 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066975755 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075513769 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069578045 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06985527 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067167118 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069873037 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067308939 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069518536 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06766293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075722522 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071676124 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071642506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075368024 seconds)
  done (took 2.845441798 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081373021 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070117016 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084324881 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070392597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063918872 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065644793 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071336596 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066834878 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071475866 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06902598 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06706494 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065381726 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069998777 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066512184 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070069378 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067205129 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069004391 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066714722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068725305 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062739532 seconds)
  done (took 2.658318791 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088118872 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068468554 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068967031 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076824532 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069080606 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068671381 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076544342 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068844763 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068401017 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090214761 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068931305 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069001335 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077316225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073621379 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068490228 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076700216 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076763578 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076523952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068283967 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068793466 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089756793 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068631994 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0763163 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068249538 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068643957 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068394969 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068641551 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073438723 seconds)
  done (took 3.323406986 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066752036 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067205957 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064612995 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064891538 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064630487 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064746955 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064571543 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064834156 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067200295 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064827971 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067080051 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067614598 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067384777 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067658106 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067371235 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067114527 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067478544 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064803526 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06446024 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065483172 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067306011 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067417047 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067370049 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06473972 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064898677 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067478538 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064958516 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065285967 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067448375 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064988309 seconds)
  done (took 3.258660589 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076547237 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075116381 seconds)
  done (took 1.429082226 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063451973 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082046468 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065169789 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071143616 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07108828 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06831824 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07506768 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071455246 seconds)
  done (took 1.84089255 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08332279 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079572549 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070031765 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081775488 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078488324 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084950157 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136572373 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06898754 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074563521 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065719834 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081810978 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066678392 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074020015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068663603 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073583819 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074134569 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065327457 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074476912 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070086287 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066149933 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068793288 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076706787 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070015172 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062724521 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068832042 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090581948 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079289145 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066788604 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070667382 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07554816 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073682887 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061636461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067647582 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068444364 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06577344 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077745376 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083432816 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070937162 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077172549 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068877824 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078769753 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062682055 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072603874 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074931404 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078618744 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068293118 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0689815 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06271612 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065434608 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070739906 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063022859 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070702518 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062565045 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074644552 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07139923 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078621663 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066960561 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069565298 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070737554 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071507271 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074771761 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06996243 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071021761 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067854001 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078348387 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073137246 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07751783 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0629129 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061618671 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06561612 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07817779 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091157716 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074472249 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068598468 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068630104 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065123887 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070734465 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06852754 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074787976 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073873483 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067845173 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073178852 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074733041 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067605362 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070378094 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076049767 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065646046 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070369033 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065210954 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084986562 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066489789 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065791633 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065255376 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078718024 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070834061 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067264962 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06524792 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075131245 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061924011 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068437651 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068463508 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068283055 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078965239 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072756424 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07296936 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076823373 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075344655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067431682 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07046636 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064020625 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067715726 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065813196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074046641 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060916351 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069303974 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067756594 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067143499 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075902622 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064829135 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066493374 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201735464 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074773123 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.0669963 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065074235 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071187157 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068586888 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071196675 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0768111 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067588365 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063505546 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06355611 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072852484 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06865632 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07272896 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073693276 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071973198 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062529319 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066427666 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074292493 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077200005 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068791317 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06903672 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07527745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06996759 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068449693 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075730168 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071016449 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067768102 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074099328 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068909438 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062795653 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071929469 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070649297 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066842579 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072394334 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071656987 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071073933 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069725317 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067083294 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076326312 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069577432 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068221693 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068520073 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067765616 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079402818 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069803115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062848353 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064807034 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078214098 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066162506 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067807447 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066710896 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070443586 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069020127 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065648248 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068043433 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070288639 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079324279 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072449857 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068294898 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073268922 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079073625 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067973574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069733847 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067502953 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068246944 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068915595 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077461742 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073492867 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073175041 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070466843 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06462363 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073638729 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075194587 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067006581 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065175739 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066539271 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071759572 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073693966 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072303226 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068444478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065654227 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06837044 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071168286 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070447929 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067633152 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066845745 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074476099 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065657641 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075073683 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068358385 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078524619 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070839296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062514505 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070934054 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065892355 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073479782 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062509852 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065404426 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06729266 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068696531 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067048067 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070443971 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061353122 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074307151 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075256463 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068079674 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066812763 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0676392 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075104927 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069080818 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071310376 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071691437 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073920787 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078637834 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066759321 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070730086 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077708135 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067215132 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061198759 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072366616 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065427178 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066129997 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065784757 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064565701 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.200481822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078577185 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075825848 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06229915 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070889775 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067521292 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066922485 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063682198 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073460739 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072063212 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069400203 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07601852 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069396294 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069741848 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072960122 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068040394 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068953431 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070224148 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071488856 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068933122 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070292744 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068479076 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071687852 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067333131 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066232005 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069690751 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067720815 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068964087 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074014406 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067978926 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068750406 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07000909 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068739768 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068399679 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069057833 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067631298 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071390946 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06868909 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068642015 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071029139 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062967372 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07548987 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067496884 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076423876 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068403245 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065707281 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07623313 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070549777 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07423138 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069071537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069423842 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069601799 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067646201 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071044504 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075678161 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066032243 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079732502 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076699241 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068834036 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070815536 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068275565 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069041911 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066834718 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068639439 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068954895 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068294817 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06740338 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072607102 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069904613 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068703307 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069855269 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068690492 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068000645 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068509583 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062179252 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066557988 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066930528 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067443159 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077710282 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068310443 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06706944 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066498468 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06859897 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066725096 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064561878 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07604623 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077748088 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068499412 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074922316 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066781647 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06901827 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079640594 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061576719 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066266671 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065653405 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065346507 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074974348 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068509279 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077480913 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068513494 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067298608 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065157993 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068730732 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066999568 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062630286 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065557241 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071722853 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066938548 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067202992 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06871484 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070428958 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068743544 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078484949 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067691239 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068819563 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067943654 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065102517 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066870225 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06692981 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070789666 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068388046 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065194547 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064441954 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066838359 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068159784 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068726815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070100745 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068272841 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.207915175 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069267539 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07280531 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071913653 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063866426 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071926933 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068950091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068299945 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068253209 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07275711 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071641237 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07021077 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077448813 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069555156 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069634239 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069177103 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066223784 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069025702 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068230299 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068673166 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067335955 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070582702 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076984855 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066319256 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072481043 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068414763 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069303131 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075083578 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069451413 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07146737 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075875687 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069055969 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071096782 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077070524 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073126923 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071960851 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069831485 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070032002 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074602185 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06767414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074607707 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06852783 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06954658 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070045638 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066565509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068771286 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068259575 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067856926 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075183242 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069505734 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067437399 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067527602 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066189569 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069281977 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071922324 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076522984 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069971669 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070923699 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062675038 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065363632 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068677458 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066021128 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069521356 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070527398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074239237 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070422022 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069114477 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0670585 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077953426 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074147954 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072086205 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066304533 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071776849 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068899311 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070810296 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068541745 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068785011 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069562261 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072252716 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069835834 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067843985 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075575283 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071527409 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069160566 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069609595 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06909114 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068782703 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063394105 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069360237 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070495492 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074129685 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07017518 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068581899 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079441673 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0660002 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068626202 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071471566 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06728539 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07340899 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062962934 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069863547 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069411146 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069121582 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063455817 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067399676 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065634187 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070220517 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067349411 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063067847 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07920292 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07724831 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071093451 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066568682 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066682408 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063724413 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062676636 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066638308 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06856284 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069161616 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078274335 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066540133 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066205729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062211635 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067408587 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070394508 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070506898 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064137102 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061705623 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06578897 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.204306422 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074640872 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067291074 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068683877 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07221096 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070781789 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066832259 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072028073 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065696638 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072494557 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081536899 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069179149 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070503337 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075651625 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077063076 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069864958 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063671894 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06951323 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071751722 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069701036 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069781449 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069442475 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084351603 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072084884 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068016964 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067964115 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071909402 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068102452 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077079575 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070196118 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069092782 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073210114 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070391212 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078495117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071735156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077070204 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073046291 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07191141 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067851926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069645733 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066574619 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067685884 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069302873 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069189095 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074122538 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077318785 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067710073 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080033828 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07896936 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070672575 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065278927 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067583937 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068051398 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063309867 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069912531 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067041503 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066111157 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066225317 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067906372 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069349788 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074325805 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06881228 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068568383 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068445225 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062962744 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070914526 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070826966 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069231177 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064830545 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.0682817 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068635713 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072204018 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07084735 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065459993 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068782623 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069309082 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068640864 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062633925 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074573677 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066845026 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0703218 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066770957 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06820978 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068878161 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07115887 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073013612 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068700874 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070085855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071607658 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069748477 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064843173 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064911144 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073254832 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065757932 seconds)
  done (took 43.657760018 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102365368 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065050228 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062943038 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063253743 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075454562 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064492359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063289517 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064664725 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064453876 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066738504 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063641222 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063347523 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071931305 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079431354 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075760837 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068241781 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063150914 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064128277 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063325512 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064308262 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072189004 seconds)
  done (took 2.802422412 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074588091 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079501882 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07794868 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083881212 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072983144 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072427616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077058385 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072452894 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08053301 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074562824 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08022165 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072481652 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074778457 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074216965 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074698127 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072345923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080431649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072349359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07208858 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077254504 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072351969 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077474003 seconds)
  done (took 3.007879725 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067570379 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067452889 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069724269 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062618054 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066975265 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063033742 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071098632 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065299025 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071106836 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067152691 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066075054 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066424932 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069451075 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062846268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06762838 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06538301 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110289985 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07093737 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067559562 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068192294 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062953264 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069201491 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06282471 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062957413 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066996814 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071382273 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068343267 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065632676 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067056932 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066587529 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067077094 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065222209 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068395577 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06772071 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0662276 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06601475 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066790427 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067278129 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062638574 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064965315 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067672436 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062608953 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067667364 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068328036 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06521041 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064756192 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068760723 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066376099 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061809465 seconds)
  done (took 4.650021537 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079385439 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112566128 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068386917 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091433491 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084569126 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074745652 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071291329 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092115738 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064462275 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065393661 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084019638 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081344028 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067177358 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072003629 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074150689 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06684257 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068065597 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067105813 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070969312 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066731344 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071609284 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073855903 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081605145 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080895577 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070772403 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065731983 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066409178 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071931007 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080128193 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07161131 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071681922 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07258003 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082597606 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068839301 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066561913 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069393911 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083395533 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066959988 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069396573 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064617849 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069471965 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071282237 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073674357 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083601645 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067439423 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072181829 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067021532 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064014935 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079871934 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069468351 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074649362 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081551989 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070946126 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06699755 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071440767 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082020322 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066512194 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065212438 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070277013 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078992684 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064855714 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070780753 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080693307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068647951 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073793721 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081300498 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071854138 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070520494 seconds)
  done (took 6.503750415 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077798063 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097095787 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084512223 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085215055 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077146864 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076978101 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077044146 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077184706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076795728 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081898291 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077381929 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119705106 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072886473 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080045586 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078008807 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07712325 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077104312 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076924985 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077552674 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076910843 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077525367 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084851511 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077039098 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084981623 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081055007 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072627853 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076958979 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077093249 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085229472 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077091943 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081296178 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077128677 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086523801 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08508859 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081817581 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076503553 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066789852 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076593154 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077307948 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076954401 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072201763 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084797966 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076439362 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072135071 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076685923 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076592428 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084674559 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080848851 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079304026 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081985584 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076729025 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084374927 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076343295 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076900113 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084559723 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088104925 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084382795 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084597394 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077255083 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084783262 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084441368 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087616504 seconds)
  done (took 6.349750444 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083462088 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076183243 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083935746 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062937513 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066134166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073571265 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066116125 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065303674 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075813608 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076644533 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07853368 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074188059 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076785443 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078708017 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073660929 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07672871 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073195698 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073649113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076040035 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073637289 seconds)
  done (took 2.853118748 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074804592 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085307227 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068436475 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07398145 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070853982 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073449451 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070039894 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070527727 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068659087 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070513976 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077501742 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077883184 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068065807 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073190644 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077409249 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073112546 seconds)
  done (took 2.533679107 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085573934 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074697439 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082218593 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068210385 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068504497 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06387408 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066848576 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062413542 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063301234 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079573595 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067233627 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077206887 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.0671773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065435335 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063456723 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.072535248 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06309115 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064245587 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066560451 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079432122 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071293543 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06514448 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070524567 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067214957 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070240425 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072278223 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06684342 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067467952 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064486651 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067198872 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070275702 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071045898 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064133453 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064537837 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065779167 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064156016 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066987157 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067215392 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072419998 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067387072 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065068028 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069451837 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067117362 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068109944 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063451056 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067105743 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063005508 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069507125 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064557746 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070498131 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067025216 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069131329 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067875195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07450324 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069643781 seconds)
  done (took 5.134921174 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081519173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071701613 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064043265 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065067757 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070513441 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069514471 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070866635 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068855152 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069169382 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065287229 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069353887 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070143038 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069112841 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070947586 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068930677 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070960458 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063303817 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068789413 seconds)
  done (took 2.621812167 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071217697 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066937314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074939502 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067295303 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067077514 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069705193 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063207325 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066088349 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066046229 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067292304 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067419136 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069638772 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065607822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069456934 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06718557 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06724572 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069486291 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065759266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067018056 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063179198 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069975485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066171249 seconds)
  done (took 2.854058755 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095624478 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084692975 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143407175 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080874972 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086653292 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073057055 seconds)
  done (took 1.93098491 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091799642 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103292027 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068562092 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07111859 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07878655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071338529 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07195251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071695636 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080381843 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077734293 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071708364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080747658 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080448086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079818272 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077608053 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077788654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072112 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072102874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067780775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08637958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071939639 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080804959 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071708485 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071492031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071820376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079594294 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080411741 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07822139 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07200777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080711324 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077479608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07145598 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080706919 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077561127 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071107383 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080397491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07166206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086174668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077691053 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079741072 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070588306 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077700112 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080711356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076315598 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080417987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071548965 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076554115 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071779641 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071562036 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087663938 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077127462 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079090859 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08010573 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080419108 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080202044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088161341 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077457629 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079499317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077532709 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077890339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07925573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078216112 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07956906 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077837184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077940234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079992688 seconds)
  done (took 6.494228783 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105743779 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069096138 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072147984 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078207176 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080123522 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072184321 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071899618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072220187 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071862902 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069447555 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111865336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072576202 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080172251 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080283184 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072683326 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07196597 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071964889 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08010978 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068900152 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088227307 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07215245 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080010014 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079988689 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079374646 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078124021 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077879138 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07277961 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071813288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071546069 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071959121 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07678606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071975426 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079509895 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068634422 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079987822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072058293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071788351 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076860139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071932389 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077994912 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080147926 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085972005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072236765 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071658993 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078430777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072007283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072161587 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068658444 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07197956 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068303628 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077809114 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077795432 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078547036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079521926 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071930774 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072316386 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072217513 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07214359 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072320256 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078034405 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07995291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07224323 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088153834 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072027982 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071916466 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079888182 seconds)
  done (took 6.410614086 seconds)
done (took 132.379984025 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18621287 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.1644922 seconds)
  done (took 1.711839697 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069498375 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101801474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080285763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131034999 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066279174 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100362742 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099191122 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078739864 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068915413 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069084584 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069186146 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070377976 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134655595 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066127484 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068565695 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071244482 seconds)
  done (took 2.720253774 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100658727 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169819032 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105568514 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066715802 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103195623 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075386071 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067047764 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077970386 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07378224 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067341689 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075493129 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072817861 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067027656 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072891768 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073355864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075172914 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066820244 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0752254 seconds)
  done (took 2.864640675 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102715659 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09502507 seconds)
  done (took 1.575016285 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159181166 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105979931 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14446854 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352397511 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166454026 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.128010273 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130501683 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12794491 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122664441 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122920785 seconds)
  done (took 2.9375731 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099743375 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158223985 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273624917 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120082285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075275653 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097800416 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121293498 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080460018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083165256 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083246277 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082449859 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078318699 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102834825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075802496 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076199999 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078973562 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10681102 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074931539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077153142 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078832251 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103243239 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06760216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075797104 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074685202 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079866092 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079997488 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067441651 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067352537 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078949387 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076718835 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07932614 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096214265 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080078883 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109524699 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072616342 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110370186 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078925013 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075910472 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076294096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076387537 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080679664 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080906119 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074280114 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078351045 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067280603 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079113705 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066862704 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067208079 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080389187 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069027311 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080701477 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081186387 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108017938 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068541732 seconds)
  done (took 6.136757303 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104580396 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107062333 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072859489 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117184967 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105516256 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074883418 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106458659 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098800047 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10827495 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072010547 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069847506 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072428933 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085319974 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086497724 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114266416 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106993225 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073490141 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072569321 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108673242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108635406 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070643001 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099577995 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093551079 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107104857 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069129793 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072495239 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070040893 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071862565 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079207217 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080858269 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071613358 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083352471 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089127548 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077645177 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067187726 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069681625 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070026561 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082322789 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081688588 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081767011 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.08010395 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069723771 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070026162 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07130616 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071662542 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070356714 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080580844 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083209276 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081044251 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071608226 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072022437 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069775093 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071128124 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082384933 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079837447 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083405886 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08257754 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070185923 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070444125 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074283989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083751248 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081551656 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081581235 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071412067 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081772642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070114188 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083261989 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087871852 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07023651 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071569596 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069939599 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071286482 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071136153 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080035451 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080222924 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07091147 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070899867 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069873948 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082496389 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08032601 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06973071 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078450204 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068964292 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069661286 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071333608 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071025603 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07946684 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082309422 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0712667 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069869914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070849719 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070247698 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068495734 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079495676 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083103733 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081766784 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081771851 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071127368 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081014003 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080498096 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071106336 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080416015 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06885108 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070748136 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070328946 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079152091 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.208473733 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082412955 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073460842 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071111802 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08135555 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083391635 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070661513 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080560498 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083577422 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083144104 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071154736 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084800874 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070977172 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082639867 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070075893 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082615227 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072293932 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082274747 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070739591 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070695703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07109639 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081851521 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075587486 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071080318 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072262469 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071731442 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082276982 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085754159 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073229569 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081946454 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081265919 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072948161 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08089723 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070602011 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08205406 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071468257 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071578073 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069237315 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084752836 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07097372 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070692679 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071645115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083168109 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070187962 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0823609 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080820432 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07008131 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08605373 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081604594 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079820972 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082633051 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073023065 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070868004 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070302721 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070953764 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080081662 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082702556 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073030436 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07067464 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080749349 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083074952 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068891348 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080762672 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080533665 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08041045 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070197102 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071546466 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082766779 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083050468 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080866084 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080544163 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080712556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070396857 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079852834 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080599887 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069513791 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088293917 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070525091 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08521937 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081254623 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078998538 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08135792 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082967511 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082946651 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083004089 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086524215 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0699258 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069831254 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081540113 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070300742 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071082256 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080633493 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071434026 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071219001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086419745 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068400617 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079484793 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069640075 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082109487 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069182719 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071644613 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085982947 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06979421 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070674367 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079846046 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070225072 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077960083 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081317258 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.21029014 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071082165 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072728689 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082053987 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081044152 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070543202 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071097053 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072586006 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081651776 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079908445 seconds)
  done (took 19.172852926 seconds)
done (took 38.506036326 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.219433482 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158124555 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190498285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122590257 seconds)
  done (took 2.179577814 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12118366 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105003008 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095963394 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066601396 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102624219 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066999245 seconds)
  done (took 1.975446707 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321120175 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21822064 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.194067817 seconds)
  done (took 2.149809505 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209362091 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195830686 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.425025125 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265136408 seconds)
  done (took 2.626709028 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149264049 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092099968 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069167533 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086765598 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138300493 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165068496 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104520926 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129257358 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080718789 seconds)
  done (took 2.481224791 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153297035 seconds)
done (took 12.981054688 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.21892843 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.22285992 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0759488 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105959448 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07053955 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.230070395 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.157721289 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084308686 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221219557 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169629459 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078036907 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.126909844 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079411924 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107335985 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074823922 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079451495 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074156555 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097625798 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128072904 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.228189754 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092317356 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179968246 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.201288623 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070817663 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092107233 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104705327 seconds)
    (27/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072887744 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074542017 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08143906 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.164957127 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143051323 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075286851 seconds)
    (33/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.104750501 seconds)
    (34/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.158578307 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09542925 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078112735 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167017952 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052477936 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.164547626 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073118229 seconds)
    (41/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078189416 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168011199 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189168122 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073288796 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10265985 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.20069002 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078528853 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198432081 seconds)
    (49/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.219798015 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091519469 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157729683 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.158810212 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066608563 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077641302 seconds)
    (55/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102162781 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068301283 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075715451 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075628745 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079743972 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093750463 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087845333 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159783592 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075959702 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096147889 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074384784 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061879619 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.183191411 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.150031683 seconds)
    (69/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06906479 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092903231 seconds)
    (71/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075038947 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068678089 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074262251 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066932713 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073519257 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097113975 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.144860354 seconds)
    (78/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.191091278 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.198098736 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145668246 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.100373379 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090307528 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07849003 seconds)
    (84/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062891387 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10386774 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066410823 seconds)
    (87/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053173463 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19359412 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.116700155 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087551649 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.069118043 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070481984 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079624408 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.107858185 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168318595 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074766286 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147778838 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.188418919 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06825495 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.186595796 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067486681 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.182215684 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075907043 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081226697 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.212220249 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092517554 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145823209 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.213130682 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188612883 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159552146 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075584852 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094814893 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100232972 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052999735 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075482182 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053001069 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096745881 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.14400174 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0751147 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073627606 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093292507 seconds)
    (122/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089568356 seconds)
    (123/309) benchmarking ("sort", Float32, false)...
    done (took 0.134995512 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142746741 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068131271 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068913973 seconds)
    (127/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158617834 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052121562 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100572928 seconds)
    (130/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.101046933 seconds)
    (131/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.110731876 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197900565 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076707439 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110195377 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.140393308 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075594874 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06619884 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052635501 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15360584 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088117345 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073039447 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074335696 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05283573 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096889712 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052252152 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077782905 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091178349 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074008083 seconds)
    (149/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06439641 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.078509386 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072103292 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.159224021 seconds)
    (153/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082178388 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067107042 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074774295 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069588803 seconds)
    (157/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073600218 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05440428 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069129252 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081518593 seconds)
    (161/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074427696 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055824822 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075301798 seconds)
    (164/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074032946 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066812057 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068593815 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05228318 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069711028 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.286303306 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075280912 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066174174 seconds)
    (172/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083524422 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066726203 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142093498 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069497752 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068200948 seconds)
    (177/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081340435 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.0519401 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069847694 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176243435 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182443316 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073511694 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067899936 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066339895 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074018091 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.164966248 seconds)
    (187/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051829293 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073439872 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.199707822 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075905369 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069753583 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065344553 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081936012 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125445924 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088376782 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.188002142 seconds)
    (197/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122902237 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052284561 seconds)
    (199/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.234104635 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09284653 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06756699 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06904933 seconds)
    (203/309) benchmarking ("sort", Float64, false)...
    done (took 0.136999133 seconds)
    (204/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054152072 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068423389 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05308012 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11987934 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11082569 seconds)
    (209/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053371471 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052782395 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077557075 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075625703 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056624424 seconds)
    (214/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079040338 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053792091 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094588545 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07444374 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053663752 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075279842 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.212625409 seconds)
    (221/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.167367998 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078155583 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073629659 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054187186 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064456655 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055288643 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066741588 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052931136 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.114884077 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053193661 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087023075 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140613171 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 0.147585125 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072593329 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.052550206 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053611285 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054928706 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074475936 seconds)
    (239/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092909792 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063949781 seconds)
    (241/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062682188 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.135447474 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.176017471 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067879445 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06713679 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052949941 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093285811 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.065755719 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078712835 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068907532 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052658995 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139485022 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05390741 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.0679889 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06792019 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102803931 seconds)
    (257/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052243536 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053653743 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066668714 seconds)
    (260/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103605975 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065940093 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073742494 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093385994 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075982407 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068666814 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066708969 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092749779 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075424857 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072254599 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052508599 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112542482 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05206991 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137126995 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088880245 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066855541 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053924271 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090831275 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052652274 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067027473 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052097395 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053386568 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053816937 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075051901 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05494397 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.107477533 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065608741 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191113747 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052733661 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065086414 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067486202 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05346064 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07451942 seconds)
    (293/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09167073 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067308676 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068606164 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063853805 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05298935 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052540822 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073203256 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07535994 seconds)
    (301/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065437275 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090798229 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066697795 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052587887 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072488294 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052655413 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053841662 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067798591 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053900936 seconds)
  done (took 31.736013496 seconds)
done (took 33.160441531 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084593537 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096380248 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07721965 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095880363 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083793072 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078883848 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074783312 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080962242 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082533672 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083917519 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080639149 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055966154 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076502876 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076355886 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076909923 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094928602 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081092611 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075355503 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075368475 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066255602 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075093986 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067165119 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069422899 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056290363 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080632027 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074402239 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074510446 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076111454 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067421045 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067885281 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071770497 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075860677 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067677828 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08047155 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074207142 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075320549 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07666497 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079251091 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069754832 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067211191 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076918544 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067991159 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074979958 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076112633 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07415292 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07380223 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07475337 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.0801827 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094373006 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07055588 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076603204 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077998284 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078553763 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075212925 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071926805 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074759867 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072862225 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094345679 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075351966 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070347095 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075955612 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076056894 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072787228 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074866121 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074628773 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076916597 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076882285 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073485536 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076049637 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07345552 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066343343 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074605452 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.0707016 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066883811 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077746003 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078963555 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065273352 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072887461 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074475557 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072681267 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066249372 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070060587 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068454708 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073626301 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069648281 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055184909 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071417836 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074065449 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066072075 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075099836 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07416877 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074248175 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069071713 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07806834 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065939916 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072577588 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067104422 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066413076 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068399935 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071063542 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066149907 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069436291 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076057241 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068273835 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073359866 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080475073 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067151286 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073250386 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065478079 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065706256 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081333961 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077088055 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066832762 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069699394 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065978739 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075083219 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066088977 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066600301 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067128639 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066881973 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073424959 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06690819 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069436853 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074237806 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080066542 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066006899 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070417817 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068937562 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065981595 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07219092 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065653446 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065876412 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067935435 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062699565 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068155131 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065625491 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07330887 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205014811 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07365857 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069530563 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076989276 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073247509 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074135297 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073345746 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066305947 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061423337 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070824695 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07073628 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069157165 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067174828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069346787 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066948572 seconds)
done (took 12.762017951 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066300217 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145015856 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10179604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099713879 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088970933 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068479886 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078763972 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104528107 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069572379 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104868002 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09048667 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088323219 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11538816 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066182664 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067485736 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071412031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069810566 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084457844 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104308762 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089184847 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119308892 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067281424 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097976855 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09278938 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090548031 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104162487 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071284755 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071957364 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0720997 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094267052 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089426774 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072250795 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068268994 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100394071 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096000935 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085768709 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068094718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085050362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068531615 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067391304 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069034784 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10048016 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081916585 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082347184 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071808584 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071390799 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068551286 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085472591 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091711551 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080597103 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088640766 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105267264 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07064388 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066939619 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065771488 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087505067 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066557799 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070140118 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067753751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06938209 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067165847 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071223529 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083752525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08419408 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07162734 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082323241 seconds)
  done (took 6.963495671 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083666579 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092485717 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086408963 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087282845 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067399657 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068488518 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068010722 seconds)
  done (took 2.070322293 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067367862 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090422989 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092960286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092191612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086892225 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09054228 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078218497 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068358013 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083467941 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070002304 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089930143 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105959289 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069199711 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07487768 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.0940623 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068039338 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092999053 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068628492 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071527341 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093320934 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070606059 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.084696917 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071907061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068806531 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083116934 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068110272 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116980433 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072723777 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069495573 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071116778 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065735083 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109962582 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082374419 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077262368 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067875279 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082728442 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083026554 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066153399 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085505446 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073346226 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082075934 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068746682 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069069094 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066650917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072493907 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078713602 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069359314 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068624758 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071089957 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089038267 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068524826 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082461944 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071906385 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070688395 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069945276 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072473082 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078250804 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068661725 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088780565 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06943898 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085986139 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085410466 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082125677 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085660479 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070562854 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082931463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082677047 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070948473 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069877575 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071706879 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085308113 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066772477 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069464416 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078506421 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069752082 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092480735 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092459573 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069690956 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078067191 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068551106 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068467716 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06820967 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092241798 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070679735 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067765645 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073319329 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071604158 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066788409 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067471352 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072156918 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066202933 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069990498 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0714904 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072381376 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071295216 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086708107 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070856382 seconds)
  done (took 8.991741201 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068825022 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070174214 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072369898 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069806906 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070527022 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069749219 seconds)
  done (took 1.960199389 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094462784 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071468302 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083257957 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074969103 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109589448 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090118554 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090371102 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081266086 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086906949 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081899711 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089805062 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091282015 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096283401 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075270226 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089920535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074206534 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090598075 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078353003 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081195086 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075647761 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08994291 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075334034 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075359111 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084350629 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078852742 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074488612 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069332142 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082033163 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08146404 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081563364 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0749014 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078018753 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073333617 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080831728 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089940492 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073164831 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074128966 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079365366 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074620865 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077944121 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.0907612 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074961158 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076851948 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079771398 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080548074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073062549 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079327898 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07803338 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.089315915 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079546833 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079549026 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07374204 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077544364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079653706 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072779722 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080774319 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079796384 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090301516 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074923656 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07307601 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071590533 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077903137 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080539106 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077664491 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081330644 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079441371 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073426013 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075648647 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075840348 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075520959 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079795529 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071736913 seconds)
  done (took 7.298085198 seconds)
done (took 28.789751227 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.549917267 seconds)
  done (took 2.055017802 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621160498 seconds)
  done (took 2.154212731 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.576986737 seconds)
  done (took 8.104167929 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419674288 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.510516273 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.730472859 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132742946 seconds)
  done (took 3.371739596 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.69881431 seconds)
  done (took 2.238342043 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21794661 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202990027 seconds)
  done (took 1.970877223 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384137051 seconds)
  done (took 1.916089978 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.152292562 seconds)
  done (took 2.68577206 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261742966 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176340663 seconds)
  done (took 1.97167018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.494872623 seconds)
  done (took 2.022450508 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.88890104 seconds)
  done (took 6.419363063 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22431909 seconds)
  done (took 1.802739222 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244781881 seconds)
  done (took 1.77804972 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.730867004 seconds)
  done (took 3.26267406 seconds)
done (took 43.292945202 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081724386 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082622039 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080529044 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078685723 seconds)
  done (took 1.843094961 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079687326 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074852482 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079596262 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075047675 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.079035695 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075136362 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076876185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079342455 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074615911 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075355062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074839351 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075133085 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077410431 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076330364 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073359479 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077397281 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078902395 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07501872 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077754445 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074830095 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072711701 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076981974 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077581455 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073944122 seconds)
  done (took 3.366665022 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080405162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075093325 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077176856 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074741071 seconds)
  done (took 1.852746171 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081053558 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098946771 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09205197 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080933888 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096628108 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089844064 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07122635 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070990691 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072630599 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07938391 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069960006 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099594262 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091035327 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079343441 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082022327 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067637442 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071055439 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091250279 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080293868 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080988177 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07237822 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079738315 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06966192 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09097377 seconds)
  done (took 3.502169232 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080088709 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107652216 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080517768 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091783616 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093715883 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066943006 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076728183 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093351754 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129804463 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067115647 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072198376 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067778 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07496931 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066983266 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079011875 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110128149 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113869438 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070350079 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099818422 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067619456 seconds)
  done (took 3.261855353 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075095816 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071759812 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068322046 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070725563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078558392 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074686135 seconds)
  done (took 1.987086533 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07008873 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06935367 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069383401 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068983102 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074092368 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068883935 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067733621 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069437479 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068843625 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068877923 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068262151 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067812722 seconds)
  done (took 2.37614516 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205764037 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068577155 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068147577 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066220722 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071277642 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068004224 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082402525 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069571971 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094108351 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.0680573 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068207101 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070050126 seconds)
  done (took 2.544424285 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213801459 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078325495 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244862475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14335192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115314523 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118948767 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107251582 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117394049 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147191272 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104661379 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173023671 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172553747 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111384418 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1408444 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092143373 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103532394 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159865035 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16476666 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107898589 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169970627 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146450404 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125485353 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148437796 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104720503 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114646528 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126611229 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073486531 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083074614 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175374945 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136978592 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149400451 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114243571 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096626406 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180029836 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176972744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14511823 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141551525 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086746395 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107630183 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138624121 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203053323 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089151788 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165578968 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111392534 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22089614 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136121739 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123452303 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124268849 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108962043 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091022154 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145749892 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186494075 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140957794 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090090885 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116890095 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117597507 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119072066 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107208521 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187220686 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165230876 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128781205 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070269375 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100013152 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155349217 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136893841 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112679913 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129535749 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09485314 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139359534 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161541682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123897339 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149492228 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.132224978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088855415 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119404523 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143324883 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132163703 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166476117 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1273135 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073891155 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126959522 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103634898 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080618534 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145303512 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075522703 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180618346 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10108022 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111966908 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117499982 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112177374 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111873555 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164872813 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149296023 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106244775 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067002181 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249076457 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126526265 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1517276 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09186784 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112418481 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121744345 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079673221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141644776 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078376546 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127385309 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080130956 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132292156 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13387025 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079956781 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126724501 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106888917 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103775888 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136940389 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164629023 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090446036 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084529132 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174307809 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126240905 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107720651 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149242399 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160471676 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102023725 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104290378 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153593127 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184202359 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091998838 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16696021 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110960922 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087221143 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091083471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127441234 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115525248 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127915953 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084690784 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122437272 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171616551 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07604372 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098879587 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137734184 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081935256 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083451522 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109810617 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108423538 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09858259 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102737442 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106465834 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140752416 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126462269 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109093101 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127314025 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100957874 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172837042 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088235518 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10197925 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105279096 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07038918 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135397571 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157621467 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080129209 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16288674 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123090159 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106666376 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118997003 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083540411 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139586032 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079456985 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070227701 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142810853 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110449986 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110183741 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150398965 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105684714 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125748119 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118463203 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132792051 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130157784 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126877344 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10050353 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084205002 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107029656 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118130773 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.069931957 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.085417914 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076368902 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098348239 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09153979 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079020623 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133719834 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115892601 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096085124 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106585982 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091224941 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139392018 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07228688 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121154442 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112446534 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091085328 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144133579 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143498794 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125340342 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094040479 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127860452 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066597117 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070860544 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085203332 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115152334 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079284776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079485948 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.36664689 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151364865 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13339196 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139772376 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115349039 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12253827 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158581762 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070376252 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118768 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148790843 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124014824 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102880922 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091525099 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099949951 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14489429 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109429809 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184814467 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118703661 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125393457 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156230977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102085911 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080114669 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104181342 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138704183 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105958288 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145742839 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099742063 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08815776 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111126194 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074541244 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1012757 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128411592 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121043829 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136809581 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116261381 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13404098 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077250712 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118527693 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123623395 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123773958 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063309373 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122537809 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163762248 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094313941 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117951494 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152260961 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078665628 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.128298202 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177820165 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144542793 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230591526 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109157397 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120545167 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129880866 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120984982 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140762996 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108695327 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13754307 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110519125 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085469642 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087595493 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097125803 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105142629 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094956446 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107070304 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11416335 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09551534 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13250198 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104329147 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110793996 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118424138 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09756373 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089913945 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095964337 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177952548 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119068007 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173055615 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102393903 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146982179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164308812 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074274994 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078243465 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077867507 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13957398 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084195101 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132106262 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099180838 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108307178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125877361 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144878986 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094982488 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067669106 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112455187 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136416081 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11691658 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101602248 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108138703 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167570536 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10355771 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082034342 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117699228 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109477435 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106035678 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176989019 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063468114 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100547502 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078200735 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083200005 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131238392 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.301114576 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083366692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103104142 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123766386 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11753191 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13214463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10393966 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101339996 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116573632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154273789 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133228821 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092567983 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116434302 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133927815 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163182536 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108230998 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09992366 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178127377 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157269006 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16498019 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091818527 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118192254 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118102786 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112651509 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14121075 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082615014 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163745346 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081626914 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137597894 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107745078 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092826576 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134087505 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.103603746 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090977471 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153377866 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121260751 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085824799 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080184708 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122071528 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123818972 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110654019 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077817575 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143335591 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07587911 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135558025 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165009379 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083081072 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110970381 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09992708 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081670268 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110363242 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104834881 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089716801 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.241249937 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176269883 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087138014 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15142542 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135679057 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113451975 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136639948 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101800813 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639945731 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078207382 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154170423 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118243735 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174503521 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099625385 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119201686 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110571574 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124405736 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146175242 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10471286 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181229966 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131475622 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115950348 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081612444 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103932364 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105920599 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08877022 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107777441 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114324498 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116207195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093039289 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116438894 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127379755 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084068849 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102932738 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162473729 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120473593 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146015447 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140464649 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085375881 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12047795 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14070186 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080410885 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123395339 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153795876 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105634464 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098197922 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080106231 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101194143 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158085805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072434102 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159879012 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266236565 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111004961 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115402507 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113269858 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131721553 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107795391 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121073731 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093315546 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110655401 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112305326 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081076003 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076257691 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104796654 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111977064 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097900693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097802988 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096959648 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152634356 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071276804 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098820503 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10469995 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144869594 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17486381 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088838566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083390934 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123888325 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116994053 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117229807 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12373481 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081135476 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083271873 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081971077 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077020681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108885521 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113257874 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107180188 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11616876 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168630569 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085191543 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232319348 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095307222 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104792728 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069381513 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078113353 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095739801 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100289554 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111478397 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103995378 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163206694 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096559539 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090738551 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093943297 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075515665 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08649402 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133116742 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113969621 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122412492 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101296285 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064246868 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11182334 seconds)
  done (took 59.481043803 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109417275 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08200065 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095004884 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.142907641 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122189856 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202081767 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153120115 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188314752 seconds)
  done (took 2.780535458 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067747998 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094380306 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105049067 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0869133 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066030438 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067975914 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234813697 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083929947 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067552388 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090617462 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078356686 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068124137 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431012789 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067979236 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06950907 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064257086 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066680858 seconds)
  done (took 3.475237612 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384400049 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611320117 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.380430427 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072093966 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.453772909 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09089376 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.134429255 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130846301 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071715768 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536363708 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70372587 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126656114 seconds)
  done (took 18.371062274 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07438227 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068840232 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082749344 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084436777 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07224274 seconds)
  done (took 2.056885252 seconds)
done (took 108.472085887 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079780661 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.386638772 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053789741 seconds)
  done (took 2.142134494 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082793041 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086412471 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087664941 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086734853 seconds)
  done (took 2.025854382 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073315591 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075329048 seconds)
  done (took 1.824779267 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231938226 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168091155 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090812204 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081974306 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078513367 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079067303 seconds)
  done (took 1.923349791 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071703667 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074966696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072060989 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075705098 seconds)
  done (took 1.973415718 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075210886 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053412844 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055878263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059738735 seconds)
  done (took 1.923742395 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085894523 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079001611 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078642054 seconds)
  done (took 1.924261472 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102334942 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08536877 seconds)
  done (took 1.868414324 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080691769 seconds)
  done (took 1.761810792 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098248298 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103129404 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133277496 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110963251 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143302197 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11270738 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087079596 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087815577 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077505284 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088045131 seconds)
  done (took 2.722272088 seconds)
done (took 22.332953594 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078744732 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366817534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359961047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089848642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673827422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358554757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.052373939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096775481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119652322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06976184 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08615887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651951446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.005155309 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326554994 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993305947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.415691218 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652250926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070823405 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070016023 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069927353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.037134045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069922623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070052529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0706775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652048247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374347674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070429428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.421077294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070131063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072645121 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357059005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070518553 seconds)
  done (took 16.610655843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070178141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121221142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076587815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08781787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073976269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071905697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073812624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071702413 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126322632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070976406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088415259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069925663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074226817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071046432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090667463 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070272394 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.086675202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070744793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070487299 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070592714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089817771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07028969 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070616924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070261447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070082663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08252505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070489817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070116919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070374863 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072580567 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073084555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070621804 seconds)
  done (took 4.186084557 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118280285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126823125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07526949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106347841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117390687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072370455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.151890922 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097182555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13267049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070663489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08843313 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070379875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104456184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070869717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091428128 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070482693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071964514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07104809 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070588104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071189425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091224439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070105576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071170258 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071212485 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070825675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08504374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071468723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070683984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071048736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072424786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074298231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071398244 seconds)
  done (took 4.436935409 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071988626 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075056205 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082757474 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086925495 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072024854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073744457 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075380342 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072131781 seconds)
  done (took 2.309777447 seconds)
done (took 29.228877904 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078836743 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07101856 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075281981 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085315185 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075589945 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081089327 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069785927 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077674444 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074585949 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075419613 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077485024 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069258726 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073386213 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067795966 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073774511 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067874657 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080326006 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071842548 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077999299 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080033918 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072166049 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076008763 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077516854 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082013331 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081999923 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082711413 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080131919 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076021257 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071963322 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073394902 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08020384 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086676359 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071007834 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081908595 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070222099 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06998074 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075180867 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069996689 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08432532 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07938385 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072038443 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079065043 seconds)
  done (took 4.874665357 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087537892 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096299841 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088520502 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064029893 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069648271 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06838317 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092730099 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062405746 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061579439 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091866496 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057372074 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062170879 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065550823 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055649167 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065064841 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057986445 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064710698 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057320659 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062576033 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.061372634 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090894413 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055386952 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080044215 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06556149 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058241543 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06422653 seconds)
  done (took 3.512294854 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073998369 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085749197 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089617725 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129253542 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105004679 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078365804 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080056669 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094829307 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088747968 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067025369 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071344704 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093387537 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091270724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073980004 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06776922 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086235498 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083868454 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069088107 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074237466 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098084519 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08985194 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089666056 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102178665 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08622663 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069513254 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07227536 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073773173 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085819285 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074835297 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079657821 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074347689 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073917378 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071979434 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082765604 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074292083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071535474 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096373489 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080655331 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081493601 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071200412 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07381118 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070914624 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095987448 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136480705 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069928405 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07738207 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078778951 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079552934 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069933322 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090316298 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081667735 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069713403 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073210715 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069443883 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069867046 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083606559 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071247207 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072770766 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079054096 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072446404 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094991578 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07419283 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085783224 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069322602 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078015424 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067779507 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068259227 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066246521 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095599586 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070892348 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114834894 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070848494 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070623369 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078925653 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077721739 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075993072 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070113957 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086187891 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080887404 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073797193 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079053831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073409311 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072943558 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093765382 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07202496 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071662534 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071025681 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076363666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07263156 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071386002 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082775891 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069208793 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073389579 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085135231 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067954799 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07155364 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076487017 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074784172 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069568176 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08124817 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07265099 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069507078 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079690801 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068615486 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071854806 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081602696 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075907894 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068156569 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073473533 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075321265 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070391006 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071102517 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072602778 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071711527 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078564393 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076459856 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074180681 seconds)
  done (took 10.928193972 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169151463 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158474368 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070517417 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147098948 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078234239 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081427452 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155696871 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097986426 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069736683 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070295397 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070848158 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11423224 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110310626 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122777449 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081878488 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069986634 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087211846 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119052744 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156810181 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150815835 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087347295 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079642526 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072104125 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071038611 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07262388 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080631775 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09079208 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078494059 seconds)
  done (took 4.555252481 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079960789 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100069236 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073970192 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090254669 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090399364 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067304261 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070081185 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069417103 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081557823 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078685373 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067354171 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073163106 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074678532 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070832474 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068084364 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074588864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07451823 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068513987 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07156362 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075275994 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079801864 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09492972 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074300278 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069976025 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075295247 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069331833 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066303229 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086852985 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070443791 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096945552 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066530345 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076333641 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082618231 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068063719 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067883996 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068051665 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068137811 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069110853 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07198752 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068636302 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068382629 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059196074 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069196112 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08200325 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076411714 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058427367 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07445039 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075688175 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075083192 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067072056 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073055088 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072299217 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072922239 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077253074 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075102113 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075226783 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070537122 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076937155 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078541977 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069332546 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066711866 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068099897 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07433287 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067679043 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078125124 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074179904 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067958658 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068945794 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071043635 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075773042 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068965966 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072698905 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066846796 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071479716 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074737379 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071652151 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070330144 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067956815 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06911449 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070125754 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056812751 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069269161 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054695791 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072857951 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068221671 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068034774 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069061744 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074920707 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082550686 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071105841 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075393129 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070296342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068356267 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071889844 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060432531 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071060648 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085875889 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085031778 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069355387 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067259905 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083898252 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072355147 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06823425 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057676787 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077450631 seconds)
  done (took 9.373871936 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092105945 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072160587 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088968864 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094944308 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088735808 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074522636 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078049757 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071767576 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085783136 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077414817 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079784143 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071222943 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079226734 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076939237 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069956358 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078383647 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07185205 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08411365 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082344665 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068092916 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076785218 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08074777 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091194654 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082333942 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080052175 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081911579 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09016246 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072091036 seconds)
  done (took 3.986074753 seconds)
done (took 38.922950768 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.781672381 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.947063509 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.770333296 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.158572372 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.923327229 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.88607305 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.846093959 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.768079643 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.877695168 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.80792779 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.005798531 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88505531 seconds)
done (took 65.369525143 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.82388006 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914097244 seconds)
    (2/2) benchmarking "String"...
    done (took 2.037935376 seconds)
  done (took 5.662097416 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.112419714 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.333266166 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.026237637 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.770827332 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.777303431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.120386993 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.601295949 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.313931742 seconds)
  done (took 30.654652525 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.944518268 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.010723861 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.471173987 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.500305764 seconds)
  done (took 15.687257021 seconds)
done (took 63.733358511 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.77367151 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.770669286 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.778486621 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.755147351 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.829202811 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.774620261 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.401141325 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.87202292 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.771649858 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.762759187 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.772009722 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.213076062 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.780547125 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.093683354 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.771155474 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.77857011 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.819881659 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.418622972 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.929999144 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.788384465 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.778517068 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.785495143 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.77260831 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.915494514 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.805155972 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.771486625 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.232496462 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.784956526 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.388834632 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.776948497 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.805000782 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.773129802 seconds)
  done (took 204.156229583 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.771910098 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.889523558 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.964188635 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791646334 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.340165971 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.956307953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.891290026 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.3754827 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.77819636 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.794885186 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.113150997 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.772633006 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.130264127 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.718639598 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.805171705 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.779988451 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.073193003 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.109299843 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.804709662 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.949773693 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.799108355 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.920369243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.87899659 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.06716889 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.774165174 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.878486625 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.779894844 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.793251927 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.96335759 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.053358141 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.810262948 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.80317239 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.973963261 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.645615995 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.792163719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.785000505 seconds)
  done (took 171.241798684 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.150460169 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.773718722 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.774160181 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.773239918 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.779409106 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.774417971 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893305278 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.897611279 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.372912834 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.226978425 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.828181127 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.592892589 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.773770226 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841111165 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.786384416 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.778562796 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.788451145 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.798980802 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773762553 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772591094 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.774730741 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.897689365 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.786838056 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.780887342 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.773474759 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780415161 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.144928367 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.774137641 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.880302845 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.77774968 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.780046579 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.018031013 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.77602957 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.774339901 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.663698597 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.388798766 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.864155533 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.777057747 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779451181 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.774526208 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.994769311 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.77526337 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.776665059 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.777113936 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948815388 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.774688326 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.895826388 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775321405 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.267198571 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.775354977 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.775004643 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.763736483 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.445846488 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.776543318 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.775551031 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.777862418 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.778067621 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.776071354 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.783742676 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.57470511 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.851907547 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.77803181 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.780631148 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781536717 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.774826654 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.993518974 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.779427224 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.872971046 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.834815075 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.900347739 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.897177596 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.780893059 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843382875 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.871688362 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.776573857 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.776563182 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.778946399 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.776595917 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.859461125 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.776555159 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.899953432 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.78523777 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.778599478 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.776824817 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.827611397 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.846402218 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.778848096 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675734191 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.776893474 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.776346736 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.080502457 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844565271 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.777047821 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.77825747 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778676337 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.778123281 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.899681388 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898324698 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.569946676 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.776835459 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.551534538 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.781826082 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.907694799 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778203536 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.949483235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.777114753 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.860326232 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782477578 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.782643462 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778486111 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.811978669 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.779291047 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.83856199 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.782787078 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.151654743 seconds)
  done (took 401.5873874 seconds)
done (took 780.903447397 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.456638511 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.414632529 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.517730315 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.433728033 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.404682895 seconds)
  done (took 13.944790505 seconds)
done (took 15.66218859 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.866329547 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.872560861 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802697526 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.869759234 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79999858 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.869201414 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.84931152 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.805057422 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835458716 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.805261231 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.840435207 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804888062 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791431557 seconds)
  done (took 25.52969164 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.021824661 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.014253223 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849809938 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.017004557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.825782406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.023807463 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.938010964 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.930913235 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.93215813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797517267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794842218 seconds)
  done (took 22.866293355 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.017841703 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.019607749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.855767953 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.024544958 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.830457612 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015816757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.946993075 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.935553606 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.937037397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796273418 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.796457452 seconds)
  done (took 22.896484819 seconds)
done (took 73.010065641 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.7881238 seconds)
  done (took 3.508286463 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.81391114 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.97281193 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.800304386 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.792778792 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.789767149 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.790395274 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.794185374 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.794217092 seconds)
  done (took 16.270301849 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.788573914 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.789743492 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.790247067 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.787188032 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.789861964 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.786798259 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.789381679 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.786361739 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.788060553 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.787865807 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.789123376 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.78989359 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.787922533 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.785935779 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.789454485 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.79135361 seconds)
  done (took 30.341108046 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.789751339 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.786780085 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.787744966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.788898619 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.78734842 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.790133052 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.790177695 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.787308623 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.787277821 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.787616701 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.788519187 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788470905 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.788265864 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.786539834 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.787957227 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.789943476 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788714269 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788086233 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.791988142 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.788863784 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.789669131 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.788486949 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.790081553 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.789742851 seconds)
  done (took 44.652995014 seconds)
done (took 96.494166096 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.651136485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.378736679 seconds)
  done (took 8.754149467 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.794523854 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.7938637 seconds)
  done (took 5.352994037 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.790504416 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.792017254 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792325865 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.792931188 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.79377055 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.792324937 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.794909199 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.796016111 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.793252495 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.792863917 seconds)
  done (took 19.654599326 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.793314099 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.7939546 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.792619653 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.794595176 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.793479675 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.792014131 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.792578396 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.795616033 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.794185689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.791827452 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.793854768 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.790649746 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.795244612 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.79073458 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.795051194 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.791363867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.791519844 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.79212851 seconds)
  done (took 33.998314412 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.793653416 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.795565521 seconds)
  done (took 5.312972321 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.791395053 seconds)
    (2/7) benchmarking "second"...
    done (took 1.791164166 seconds)
    (3/7) benchmarking "month"...
    done (took 1.791071386 seconds)
    (4/7) benchmarking "year"...
    done (took 1.790630915 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.792140123 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.79223511 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.793403787 seconds)
  done (took 14.268385245 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.794287174 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.949873589 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.019798538 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.464923781 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.796061202 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.79927948 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.778870735 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.800243897 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.799842919 seconds)
  done (took 19.929075172 seconds)
done (took 108.992411182 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.635608831 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.790261238 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.135394815 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.84965879 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.847515702 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.085187982 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.796255616 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.10273412 seconds)
done (took 42.967981244 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.803484551 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.33449825 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.36735684 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.624772082 seconds)
  done (took 13.053428337 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.77475203 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.312983386 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.824651004 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.381119804 seconds)
  done (took 20.066161222 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.162518758 seconds)
    (2/2) benchmarking "read"...
    done (took 2.138625546 seconds)
  done (took 6.03219687 seconds)
done (took 47.683838483 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795805176 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.796380374 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.794556114 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.797623148 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.793887804 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.794000256 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.796263377 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.795310144 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.796607686 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.796058225 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796793994 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794362717 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793075152 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797349141 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.796969254 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.793875902 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793292137 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.793684809 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794867691 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.794259226 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798927329 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.792491239 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.794799249 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.798331199 seconds)
  done (took 44.816861727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.797071965 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.796170428 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.800262358 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.796172871 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.795299425 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.79730442 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.797117826 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.795578728 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.798467019 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.799681672 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79547662 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.794105945 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.797708638 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.796419836 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797923978 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.795820958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.79986616 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795396608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798483493 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.796730402 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.798469989 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796333285 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.796479348 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801029926 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.796150976 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796977034 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.799895557 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.79572422 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799971103 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.796569667 seconds)
  done (took 55.647705351 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.804300855 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.80800015 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.80209592 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.79832869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.800876133 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.799592693 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.801750214 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.800500171 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.800941836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.800457287 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.801170982 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.799164656 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.799620762 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.798062371 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.800432709 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.800136431 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.80172487 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.802034099 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.801598819 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.801103927 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.802755651 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.800807688 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.80027979 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.802233725 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.800250421 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.800947899 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.800513786 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.800015298 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.801836238 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.80047494 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.801360277 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.801029485 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.800991347 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.801838979 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.802846261 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.800726671 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.805101486 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.810566554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.802574094 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.803765027 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.801588189 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.80224933 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.801107038 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.801413895 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.803067534 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.801980368 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.800405467 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.802215441 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.803104601 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.803190507 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.803220578 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.803460279 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.800996378 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.803199964 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.801374308 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.802075217 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.802737818 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.803103582 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.803395703 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.803365372 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.803350968 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.804087687 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.804255055 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.805036311 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.804788161 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.805278533 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.805592351 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.804763261 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.802485079 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.803758774 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.802859954 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.803209352 seconds)
  done (took 131.493157513 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.802996262 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801133702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.798850962 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801703178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801011591 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805201014 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.800612947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803385303 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799842952 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.802599355 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804425126 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.802159958 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800987922 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804524542 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804781616 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.802952783 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.804833106 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801831474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.806329923 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805506713 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.802592912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.801856256 seconds)
  done (took 41.394386958 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803634066 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802714771 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.800882401 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.804731777 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800746446 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803758468 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804537941 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.805904504 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806007391 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801759552 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801534649 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805086044 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804855659 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802412974 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802547347 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803462013 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804171114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.802970722 seconds)
  done (took 34.195798529 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.801871618 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.801575063 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.805426872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801524071 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.805514264 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804191733 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801107762 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.805543903 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.804748085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.802656853 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.806206746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804672931 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.805571932 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802440345 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805323817 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.802399637 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.805332664 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802065846 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806029884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802091636 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.80309328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804287401 seconds)
  done (took 41.421303412 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804857069 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805690139 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.802409548 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803975025 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802640903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806465458 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.807375466 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.805218079 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.806516861 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.806151141 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803331664 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.806091082 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.80245271 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.805023587 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.803317392 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804479009 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808354253 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.80599917 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806428457 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.806413369 seconds)
  done (took 37.842299202 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80828871 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808098303 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807436342 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.807431141 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808765743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.808437637 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807969877 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808981685 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809854909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.809911205 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.808318776 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.809379254 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808071829 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808797454 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808768448 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807992674 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810440097 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80794128 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808069618 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808928854 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.809899431 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.807460729 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.809650338 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.809920168 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810064905 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809047668 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808498454 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809644463 seconds)
  done (took 52.384820097 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81026462 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810053905 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.807027451 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.808633723 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.806907182 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.806797842 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.807761625 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.806406214 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809867783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808849467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.810137127 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.808930267 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809678571 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.80928159 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808241487 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.811989423 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809747861 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.808480503 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807626946 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809201787 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.81004012 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810984593 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.80956986 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806065223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807129993 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.810126418 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807363758 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810233822 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.812059529 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806458989 seconds)
  done (took 56.008168802 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.828892636 seconds)
    (2/2) benchmarking "in"...
    done (took 1.828973439 seconds)
  done (took 5.398808273 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.808916753 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810603375 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.81022838 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807686245 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.807486755 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.812084954 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.810362177 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808058475 seconds)
  done (took 16.217500487 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.811069244 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.811197054 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.811324869 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.812031176 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.811046045 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.811661731 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816555229 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.812243152 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.811204943 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.811489351 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.819088706 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.819448718 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.815092744 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810871559 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.810307877 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812345706 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.810457527 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.812317552 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.811666369 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.81067704 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812398582 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812390931 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812769726 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.809113871 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.81360719 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.82050115 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.817080124 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.811131286 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813595464 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.813834608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.811954432 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.810311449 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.814844165 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.812507627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.813433649 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.812692908 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818925215 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815910278 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.817633563 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813464685 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.813041964 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.811581537 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.813817517 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.813319318 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815024267 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.813202852 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.814406916 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.812920368 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.814724791 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.817697043 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.818934429 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.811508487 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.81032832 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817561533 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.813907567 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818451825 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.814700324 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.816000047 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.822985213 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.82205761 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.828053791 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.822887985 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.815093506 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.813700724 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823029203 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.838792258 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818511722 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.811975453 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.811138061 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.814525329 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.82095365 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829242937 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.825244854 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.814513524 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814891444 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.814681693 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.814259831 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814441118 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820372676 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.819368969 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.814309462 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.813887915 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825243624 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838937959 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.813448748 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.815544175 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.813787231 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.815440797 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.817050788 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825141863 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.818414888 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.815575753 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.813886787 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.815149583 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.816865175 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.816105024 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.814443213 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815359939 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.811911615 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.81596389 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.816651492 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818377707 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.823857053 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814736695 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816576649 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.820813087 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.817501726 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819228875 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.822345529 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.817351679 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81698701 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.817525998 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.823419871 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.814852377 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8199668 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.824632575 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.817825363 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.818016439 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.816351854 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.818654311 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826476619 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.844246283 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.817246274 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.817275412 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.823708053 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.829704411 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.817387498 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.819951209 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.816917782 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.815483214 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.815191695 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.818678608 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.817219444 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.817542636 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818389266 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818463941 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.814932848 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.817700043 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.8196416 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.818438802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.818648183 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.818315464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.819047232 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.819447538 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.817760825 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.820131332 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.825404189 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.819840857 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.818826033 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.820729629 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.815508745 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817951395 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.820487014 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.818260107 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.818783488 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.818630296 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.817955966 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.817706789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820032968 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.821069071 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819581272 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.819300793 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823869489 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.823239423 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.822600639 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.820646539 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.817316323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.820185122 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.819562277 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.820892348 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.822671785 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.819103891 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.822845107 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.829070344 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.819513616 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.821004473 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.821101493 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820039252 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819028672 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820169119 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.821339432 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.826340601 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.820942894 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.825283316 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.82244753 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820305357 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.821979707 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.821349092 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.821520786 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.8192779 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.824866703 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.828909822 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836137213 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830340368 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.822530767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.824281326 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.82222715 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.825922068 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.825104474 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.820752668 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.820398809 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821013201 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819586598 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.822086212 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.822316239 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.821020709 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.819155488 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.821516547 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.822920698 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.821043899 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.822228465 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.822473655 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824798895 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.819386313 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.822015658 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.822889308 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.821004065 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.818409418 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.821131259 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.821867159 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.822678292 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.821720237 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.828239068 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.819469108 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825032783 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823262208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.823608002 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.821615554 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.823494863 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82696854 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.822157141 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829292415 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.824210814 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.82215492 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829198501 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.824635713 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.822568788 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.825772675 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.823257094 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.819711787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.82707143 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.831185347 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.8232065 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.824065551 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.823567029 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822807277 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.82345895 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.828546911 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.821462509 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.82412589 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.824924791 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.825675538 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.821178826 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.826782623 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.826794136 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.823841322 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.825998101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.823756827 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.824871427 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826139959 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.82398457 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.824730467 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.824892255 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825723324 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.832751739 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.828661067 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.824115804 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.826469954 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.826040871 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.830303136 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.825484134 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.825489952 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.824114461 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837664344 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.837487462 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83080274 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.829953092 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.824844399 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828948331 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.828961029 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.829550364 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825598449 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825550764 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.825865484 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.825796055 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.821585553 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.826078429 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.827158989 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829226784 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.826682851 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.831887275 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.827656625 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.826416653 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.825934516 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.825008684 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.826438455 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.825856762 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.825259751 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.828633465 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.827797885 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.82520586 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.825016098 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832367905 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.828670281 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.828168709 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.826294627 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.827286984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.825760923 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.829923983 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.827858518 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.829734478 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.834562317 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.830849273 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.83843406 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.82949796 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.835872847 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.826715367 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.830432433 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.835133582 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.82386065 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.825917078 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.829333245 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.827518597 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.834415285 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.830826388 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.828979465 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.833168403 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82960155 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.82843346 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.828711462 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.828031542 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827579127 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.828595982 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.836849295 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.82958278 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.832064426 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.829395436 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.825987777 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.828420367 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.828732133 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.827993956 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831838379 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.828076553 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.829056953 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.827622599 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.827938235 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.828457078 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.828521381 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.829472392 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.826502677 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.828811959 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834822313 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.83129758 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833947136 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.829810086 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.834992985 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.8319939 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.835505118 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.830625755 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.830978171 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.830464737 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.829003167 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.831059235 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.828408087 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.831320338 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.829608431 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.830382749 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.833879804 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.830000345 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.83140789 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.829800606 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.829597075 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.830252724 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839988467 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.857723437 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.833720663 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.834315258 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.828129879 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.833367069 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.836091087 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.83379589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.829857955 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.834460931 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842175739 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.838894438 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.833595219 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.831683003 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831444588 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832405334 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.830990877 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.83277811 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.832338329 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.832863223 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.831606637 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.832918414 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.835588891 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.831620537 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.831490213 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832355899 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.832195531 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.842028714 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.833544347 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.833950788 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.831870237 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.831842756 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.832604739 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.831972677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.833419813 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.832322994 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83322202 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.83269692 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838867002 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.839784434 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.834235525 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.832246243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.831681838 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.834102531 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.833177658 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832691672 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.831887709 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832443687 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.835687847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.831414906 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.833778515 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.832427748 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.833060535 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.836104839 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.835137949 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837712248 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.842401692 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835138417 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.832789528 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.835184238 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.835545871 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.837744771 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.836299337 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.843588405 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839797639 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.845198807 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.844263169 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.839044047 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.833830698 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836637108 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.841257396 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.834246571 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.834000483 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.834876303 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.834620265 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.835279941 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.837230827 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834177612 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.83971745 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.835264656 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.833941505 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.842139543 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.839651249 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.834612241 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.835480737 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.83895425 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.835382149 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.831064969 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.835152516 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.835056554 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841179566 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.838510651 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835234053 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.837316816 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.833881797 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.836118672 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.838888236 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.835565116 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.838075185 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.832949843 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.838171742 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836817577 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.836325997 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.833162432 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.834955862 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.835007029 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.839335192 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.844470615 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.832418162 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839693975 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.836766742 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.837006248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835214059 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83653574 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.833610004 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.83391281 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.838989516 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.83670406 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.839103311 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.838624039 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.836373137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.838062908 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.83934047 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837900607 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.840539717 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.848585294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.845605508 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.835727228 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.839380891 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.840629303 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.840860146 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.83838942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.838638368 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840145097 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.839247983 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.838507521 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.838535857 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.837629749 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.840333239 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.85360101 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.840533275 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.837623057 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.837386503 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.841040786 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.837455315 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.835495136 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.838819953 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.839330119 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.841416094 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.845246762 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.838248106 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844201932 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839648405 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.840113086 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.842377086 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.843012743 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.845975271 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.840160444 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837974997 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.838291085 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.842972799 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.85328907 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.839226857 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848121343 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.868506655 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.841806166 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.84023972 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.83919178 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838412122 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.838196071 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.841005987 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.839458612 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.839561682 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83917772 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.840852027 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.842111913 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846360386 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.841248702 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.838871615 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.84204536 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.840016854 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.842643813 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.837098994 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.840738479 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.840828155 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.841370636 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.841684995 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.841984134 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.842353506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.854940562 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.85325785 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.841742527 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.841730581 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.837447466 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.844548693 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.843377692 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851539687 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.848663792 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.84094222 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.840428757 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.843324073 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.839657266 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.838361774 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.840912475 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.840002333 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.841072303 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.83876669 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.854753978 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.851893418 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.849534353 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.841978594 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.840819511 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.841390267 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.84124428 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841948302 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.841866396 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.842218502 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.843225617 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845406256 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.8416309 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.841422413 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.845470997 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.850271172 seconds)
  done (took 1091.506276615 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.838420433 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839085249 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838098749 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838139505 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839301359 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839174096 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839445373 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83906719 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83899667 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839506862 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.839422679 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.838273924 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840147059 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840380258 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840414402 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840524896 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.840405109 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840277518 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840422401 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838867505 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841274794 seconds)
  done (took 40.401249184 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.841741305 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.840460846 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841236715 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.84256436 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.840890237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.843232823 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.839728495 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842767519 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842468154 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840133042 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.842952726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843950033 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.840363843 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.840440703 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840201737 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842750612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.843707976 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840116297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.842520117 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.840634517 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841202894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.840938805 seconds)
  done (took 42.2884608 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.851881542 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.852819167 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.8511361 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.849460954 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.851654187 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.850288053 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.851661364 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.851878794 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.853332691 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.852876022 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.850136115 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.852646291 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.861319738 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.860146841 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.856038829 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.853015519 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.995759503 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.852147575 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.853851039 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.856656642 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.849728683 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.856479973 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.84823313 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847671888 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.849886738 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.849149727 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.853680245 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.848290315 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.849253812 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.85074162 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.856544905 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.852322488 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.850845312 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.857307706 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.851324519 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.850516107 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.857040544 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.847268566 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.846131092 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.850121711 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.859497197 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.872161167 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.846433044 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.855616751 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.849039298 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.847340626 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.853790559 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.854433188 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.846980576 seconds)
  done (took 92.697330589 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.847615461 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.84726027 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.84432806 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839466008 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.844894101 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.842615889 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.843668931 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.841983063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.841619682 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.839512425 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.842601854 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.840628514 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.838513864 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.850973324 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.841568603 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840286188 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838544991 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840648997 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.839513257 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.844388918 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.8384991 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.839574772 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.842469486 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.839885548 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.844306423 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839391877 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839407619 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.840602327 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.837572176 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.839590654 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.84282464 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840701637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840486367 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.838283657 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.83952755 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.841255001 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.840975113 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.838995333 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.842133366 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.840106941 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.844974261 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840531025 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840181361 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.838958079 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836393322 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.840079499 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.83803974 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.838477204 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.839608404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.841224172 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841013273 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.83985565 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.842185118 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.837339654 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.842632238 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.840183859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.838821564 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.838844555 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.84220416 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.840076745 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838153152 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841854965 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.838926019 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.841385849 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.842377623 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.839778212 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.839727592 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840589676 seconds)
  done (took 126.956978405 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843392105 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.844340607 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844722806 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844048931 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844197773 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.843086169 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.843719022 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.841060214 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841481059 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842496912 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840520369 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843393029 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.842504777 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.841328919 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839956571 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844536754 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843215991 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842045316 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.840556296 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841874989 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.84371221 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.843342111 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.841038861 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842166536 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.842590973 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.843231278 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84279755 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.839528296 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843936249 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841794422 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846740377 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.843310692 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841145317 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.84191524 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.84080578 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.84584236 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845735625 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84232168 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.842712731 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.843974958 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840780431 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844010035 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.842187366 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.841554707 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842106962 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845316256 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845662717 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.843288073 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843287333 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.843612659 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.841965361 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842807293 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843768686 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.851060843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841808717 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.843314867 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844122373 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844828613 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845410938 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838268542 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838626186 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.837207821 seconds)
  done (took 116.026620929 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837429365 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839806794 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.836282582 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.832185016 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.836048192 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.833849916 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.834734115 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.83719236 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834488791 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.834551283 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836259763 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833175607 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834563429 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834359106 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.833651399 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832744448 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833707355 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835357788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835412933 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833473723 seconds)
  done (took 38.463264879 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.833249436 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.834190645 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.835586769 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831621107 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.835325586 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.831803846 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.833117054 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837642013 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833780933 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833844491 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.836887736 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83392835 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831452405 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.831790003 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.835991108 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831478263 seconds)
  done (took 31.103936535 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.832150222 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.835850918 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.834946583 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.835472534 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.83135309 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.831663922 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.833537112 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.832657864 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.831281501 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.833100521 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831679479 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.833877785 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.835401801 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.83315554 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.831060985 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.832269139 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.830151196 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.83144712 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.834452973 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.83518574 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.832772981 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83147908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.833791112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.833089478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.831862338 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.832081889 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.831811411 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.833232483 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.833096016 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.833873015 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.829275461 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834060642 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.832029134 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.832970923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.832847936 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.827383626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.832619916 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.833593668 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.831165598 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.833863403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.833874928 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.829926665 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831661355 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.832228156 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.829824356 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.831534385 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.828087104 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.830470297 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.829153456 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.830374248 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.835577147 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.830530619 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.83160867 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.83173914 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.830439683 seconds)
  done (took 102.536598066 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833494219 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833131 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.832159229 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832611541 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.834045679 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.834207743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.83160425 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830684993 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830466782 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831504013 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829900159 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831425491 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827964287 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.830200881 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82825356 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830018773 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.830429851 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.826970207 seconds)
  done (took 34.716404115 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.827721124 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.827440401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.829462535 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.829228906 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.825754761 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.831522484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.827104188 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.828873896 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830935535 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.82611568 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8275804 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.829348563 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82993338 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.828829205 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828028624 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824674545 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.827454872 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.827034468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.824972416 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826495857 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828375542 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827671238 seconds)
  done (took 41.971227225 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.82730678 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.826683283 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.844736742 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.848531604 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.849022913 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.863997047 seconds)
  done (took 12.813018315 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826381869 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826073051 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825250873 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827626643 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828002867 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824431349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823475236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824376945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826301603 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825111138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824630454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827732839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823950859 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823690895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826771663 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826775133 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827476164 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824627236 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825210073 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828345068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824508217 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827096132 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825543065 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824462215 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822603169 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822536567 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826401897 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824229096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824068776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826276261 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825978075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823927375 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825111312 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823508344 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826588214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826552761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823143464 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824392505 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828479139 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823531997 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825350199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82825322 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825539771 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825536492 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827750169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823693654 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823049115 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823410714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824438582 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825299185 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827274735 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822557093 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825274888 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82672905 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824608723 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825823292 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823564764 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824718133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827407873 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823900511 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822323781 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82427616 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822572921 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822197196 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826347301 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822835482 seconds)
  done (took 122.212579843 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822378968 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822100193 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824568888 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822850537 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823348523 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821701006 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822632942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823383519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824766837 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82478553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827897039 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822332147 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822959153 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82061713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824344633 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823363554 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822198123 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824752826 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820989543 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825940768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821581808 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825433781 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820937627 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823043111 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823303313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827215334 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825855908 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823462389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822528712 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824977891 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821082476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82404961 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823844356 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821113649 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822213733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82216044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823857852 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825692834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822842055 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826130834 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823309634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824265669 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822160422 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821936434 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819601514 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820810805 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82018834 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823414428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823072448 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821340664 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823397804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821240467 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821696177 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820690939 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824678765 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822554682 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823258557 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820614908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823709076 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829593892 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82220997 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823128743 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824296912 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82160725 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822604285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825305946 seconds)
  done (took 122.084396296 seconds)
done (took 2534.324458144 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.812090228 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.831913677 seconds)
  done (took 15.395302163 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.986679307 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.938762196 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.825157967 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.826687363 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.825283464 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.839370002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.839489834 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.825931914 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.822964432 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.821215405 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.826758705 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.011506152 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.82599435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.821717775 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.822273088 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.919318344 seconds)
  done (took 51.542084907 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.826301484 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.828290707 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.837804322 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.827396447 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.828910585 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.839950166 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.86243886 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.831743263 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.862524455 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.842095286 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.898810406 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.833856777 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.828752189 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.877121162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.842353147 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.843496331 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.921587923 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.897733964 seconds)
  done (took 35.084202911 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.906503285 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.84296547 seconds)
  done (took 10.508811481 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.856049563 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.848966763 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.851149831 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.843689357 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.832380697 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.844440006 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.830360663 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.853931927 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.848242265 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.823827571 seconds)
  done (took 70.186034615 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.834344145 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.833537422 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.829667914 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.826341067 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.820446647 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.823132646 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.82746309 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.821542576 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.510914756 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.86337047 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.833655001 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.832235738 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.825551826 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.831171817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.824881526 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.851269785 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.93908975 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.825096141 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.822508293 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.831421303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.825639098 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.887852827 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.840239057 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.828336727 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.856860133 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.515798117 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.836435636 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.833463566 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.942744079 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.82541676 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.829171798 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.828761313 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.829667451 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230910554 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.118658167 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.829578206 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.83330352 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.836094755 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.824806319 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.944989918 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.82878914 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.836753996 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.822950702 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.10017234 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.928219294 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.873675219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.245684348 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.832010129 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.830828291 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.860225922 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.835543052 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.82734408 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.839815331 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.342350059 seconds)
  done (took 130.469573776 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823324132 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.088226653 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98085326 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.828868463 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110204703 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028286254 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.825840913 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875911649 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.82543291 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.055423306 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.046034384 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932760432 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821160366 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.829055789 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.819368878 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.81877571 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.986050569 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897844842 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824915145 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.81731189 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854906053 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075863151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.9576626 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825429781 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.845086345 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.038704228 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.960846116 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.934854517 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.294957894 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.822071213 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892914116 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.820078534 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.825008118 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.820144619 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97935392 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921591171 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912109534 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.82085742 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823397706 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.824830854 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.498222335 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024368918 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920972055 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.966678129 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.070430167 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031252319 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.608463495 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.820974561 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.563404789 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.98519744 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.061819292 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.061100774 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.946781735 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.822109453 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.337095905 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.818994693 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819807578 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050369452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052692146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923975773 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817315081 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.820793569 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813336551 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070034006 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.817427956 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.912972035 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820730282 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.816453421 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.914130815 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926186907 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04856611 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036769446 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.852888524 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.139075138 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.296577349 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069604181 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.884816965 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054822802 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.819883037 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820181718 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903771086 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.774151629 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020552789 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.070744061 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.074217139 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855105889 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.541997594 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.815474017 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.050449338 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.041881078 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.120432793 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060506868 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.971013388 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.14164389 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.815356342 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.814618524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.050086641 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.954228657 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.81857211 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179679813 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052814582 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.387717079 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.849887179 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.156977688 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952509008 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.817321447 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.459985392 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.814479327 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.04323699 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858421267 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.817062655 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818165452 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.042484842 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.893866548 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816903713 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.43852329 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.881418967 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.817583147 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052058861 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.819130188 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084461091 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817004237 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.058020448 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.213601055 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.852158064 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044322275 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.060417094 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.819187984 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.064816038 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.066307062 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.937097798 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.03974221 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.450767351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.815881977 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108965273 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818839921 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.816450701 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993670387 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.818934362 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965972906 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.821480529 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150912929 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843151951 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972816234 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820039356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074893137 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.852520338 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871550887 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.820670311 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953626293 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818341026 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.820914 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973207801 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819682405 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.817934012 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.528491259 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.818178331 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97501029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.052310447 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844199323 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896334486 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492404505 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818436169 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.906601253 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.844003502 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.165482735 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.8191354 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.036161108 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.818896514 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.345723739 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.821806039 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062819214 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.000476626 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825271167 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818621037 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.738300425 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.820237307 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821508457 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.983931266 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.170131492 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.817618214 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023726237 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822654291 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961005727 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822061366 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.901442459 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.17629724 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822862291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.819305295 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.822613904 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.823294888 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.81906399 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089847244 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.85091108 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.359627751 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.965404782 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095154949 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142416322 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.076296447 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.874480502 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828686415 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.073312883 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830685947 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.887862736 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.828347758 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.850952331 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060158538 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.829645473 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034988407 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106262131 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.744809779 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875603277 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.824082353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824653018 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.78646738 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984074652 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.917803079 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.825777264 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.824763852 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.952475961 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.958035265 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038792925 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.83401967 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.160611736 seconds)
  done (took 893.927178506 seconds)
done (took 1208.862090814 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.821686444 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.819698751 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.810909038 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.82594781 seconds)
  done (took 29.031608245 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.831589794 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.831121304 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.829567511 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.828582208 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.837658596 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.828257007 seconds)
  done (took 12.74614545 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.872249407 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.82427479 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.826696263 seconds)
  done (took 21.2834919 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.89643221 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.250421506 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.938285443 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269274808 seconds)
  done (took 10.114174936 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.831212222 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.833130565 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.830522525 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.837990664 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.831681245 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.833805406 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.837099917 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.83867729 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.834201472 seconds)
  done (took 18.269259951 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.267732835 seconds)
done (took 97.469298074 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.327629584 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.204633824 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.164286058 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.014147977 seconds)
    (5/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.891612992 seconds)
    (6/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.619807551 seconds)
    (7/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.200109565 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.981830179 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.172682446 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.944692908 seconds)
    (11/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.90811477 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.007747965 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.868715463 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.21771514 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.852569547 seconds)
    (16/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.908372856 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.158680754 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.154057219 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.289643188 seconds)
    (20/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.227440605 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.827736117 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.927277452 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.16566846 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.894134597 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.832680845 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.382462651 seconds)
    (27/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.916874006 seconds)
    (28/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.850493929 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.82324399 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964542676 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.854702267 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.84937461 seconds)
    (33/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.956762229 seconds)
    (34/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.957068912 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.475143739 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.934828841 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.915791735 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.133088959 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.289470551 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.049154114 seconds)
    (41/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.836052347 seconds)
    (42/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.36254959 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.02116646 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.939075055 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.886738474 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.825212363 seconds)
    (47/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.845878447 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.190819649 seconds)
    (49/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.129020537 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.124422344 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.119365312 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.97222093 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.07380723 seconds)
    (54/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.211748166 seconds)
    (55/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.070470746 seconds)
    (56/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.913911132 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.845476924 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.935961844 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.908193997 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.842604978 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.086080454 seconds)
    (62/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099585083 seconds)
    (63/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.93341389 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.825395085 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.290731941 seconds)
    (66/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.989953529 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.806118589 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.012849666 seconds)
    (69/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.936154652 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.208650554 seconds)
    (71/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.856004774 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.884652397 seconds)
    (73/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.842633576 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524331662 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.909370352 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.827739432 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.061127526 seconds)
    (78/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.027675959 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.148528362 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851520981 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.84619608 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.807776171 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.832503939 seconds)
    (84/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.155989258 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.156741678 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.528066349 seconds)
    (87/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.151019085 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.430851922 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.900373546 seconds)
    (90/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.627362025 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.487069718 seconds)
    (92/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.952750068 seconds)
    (93/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.82826177 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.472174794 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.028592222 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.853682005 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.825838583 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.206020314 seconds)
    (99/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.827773126 seconds)
    (100/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.847813391 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.970438163 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.750322834 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.217299864 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.594724492 seconds)
    (105/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.190316883 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.807898975 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.834451566 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.815658656 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.085344988 seconds)
    (110/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.064607974 seconds)
    (111/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.845052729 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.927755462 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.829158766 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.747765705 seconds)
    (115/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.83977202 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.134990777 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.897532573 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.827894173 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.032754818 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.160427009 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.03170739 seconds)
    (122/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.846967225 seconds)
    (123/309) benchmarking ("sort", Float32, false)...
    done (took 5.582705619 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.831259815 seconds)
    (125/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.833208618 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.724649903 seconds)
    (127/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.123822879 seconds)
    (128/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.198817747 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.823171908 seconds)
    (130/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.961222381 seconds)
    (131/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.001152478 seconds)
    (132/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.059197128 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.03896236 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.81605904 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 2.27370661 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.853237817 seconds)
    (137/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.100195344 seconds)
    (138/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.040899537 seconds)
    (139/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.914520464 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.098283621 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.046696187 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.09287949 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.020752609 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.487040192 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.046966011 seconds)
    (146/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.42715847 seconds)
    (147/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.147966726 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.055616325 seconds)
    (149/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.96148785 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.216366656 seconds)
    (151/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.309454662 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.830883921 seconds)
    (153/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.970441743 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.06935297 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.85825757 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.065890869 seconds)
    (157/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.35706918 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.818286606 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.830892489 seconds)
    (160/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.77608452 seconds)
    (161/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.956782553 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.815232757 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.46734565 seconds)
    (164/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.937778221 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088054983 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.83409931 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.552794254 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.158859741 seconds)
    (169/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.332830308 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.118333168 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.054812548 seconds)
    (172/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.738682323 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.169228122 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.833278606 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.023932126 seconds)
    (176/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.93821772 seconds)
    (177/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.500641403 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155937194 seconds)
    (179/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.897050282 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.929089447 seconds)
    (181/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.837481063 seconds)
    (182/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.962857586 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.838367392 seconds)
    (184/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.538987934 seconds)
    (185/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.8588747 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.294958675 seconds)
    (187/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.942947501 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.864459489 seconds)
    (189/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.820278672 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.874932034 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.895406387 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.915682116 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.34398941 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.913967442 seconds)
    (195/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.849985485 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.833412205 seconds)
    (197/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.833992926 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.93693112 seconds)
    (199/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.410589133 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.73355827 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.904219254 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.102776848 seconds)
    (203/309) benchmarking ("sort", Float64, false)...
    done (took 5.63189565 seconds)
    (204/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.007713846 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.223743724 seconds)
    (206/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.935734594 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.954156619 seconds)
    (208/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.818308368 seconds)
    (209/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.997244845 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.023701429 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.631389034 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.040908171 seconds)
    (213/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.818373509 seconds)
    (214/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.300749042 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.306524672 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.739513938 seconds)
    (217/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.930323748 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.003480768 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.866232236 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.826206451 seconds)
    (221/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.412074204 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.835560931 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.857817438 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.817553034 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.6893749 seconds)
    (226/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.823862265 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.453104999 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031019413 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.130452168 seconds)
    (230/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.913904515 seconds)
    (231/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.671493107 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.730515641 seconds)
    (233/309) benchmarking ("sort", Int8, false)...
    done (took 4.863151126 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.927922274 seconds)
    (235/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.445339732 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.759184792 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.908900676 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.866947131 seconds)
    (239/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.835856452 seconds)
    (240/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.137349167 seconds)
    (241/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.005928588 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.939265729 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.835008073 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.242061622 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.13479577 seconds)
    (246/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.987414876 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.631932781 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.829437599 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.935604455 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.770803132 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.241836159 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.843854794 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.8250095 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.925622255 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.009283658 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.914494069 seconds)
    (257/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.903893645 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.171207024 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.145633357 seconds)
    (260/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.9753335 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.96639371 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.86338607 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.625275597 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.824416337 seconds)
    (265/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.98704113 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.923203016 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.530469829 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.21086843 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.858935126 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.026063135 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.849706935 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.203737039 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.945988371 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.737926315 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.223223278 seconds)
    (276/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.304487658 seconds)
    (277/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.929199828 seconds)
    (278/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.880161785 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.841197774 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.229178172 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332491586 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.911988275 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.924323628 seconds)
    (284/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.822983765 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.900751779 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.540349511 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 6.850552646 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.217014647 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.963513983 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.075315193 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.420024476 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.58884848 seconds)
    (293/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.864666753 seconds)
    (294/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.386977085 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.063267934 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.037770295 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.900698034 seconds)
    (298/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.08828315 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.871918984 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.856165878 seconds)
    (301/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.044846686 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.993980156 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.162083365 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100865375 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.859425104 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.002538017 seconds)
    (307/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.408530296 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.840578378 seconds)
    (309/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.308862639 seconds)
  done (took 1003.71626151 seconds)
done (took 1005.553218672 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.873382862 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.86825011 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.850279118 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.870125699 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.964502864 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.880346724 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.858887595 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.852661634 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.89734641 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.899791824 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.850484825 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.878488208 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.854812793 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.85513099 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.849505259 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867504936 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.155016721 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.872232068 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.871673689 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.859218444 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.865343137 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.852296916 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.898386629 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.878722901 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.854958533 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.851400455 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.855728855 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.874025214 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.964366191 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.856480871 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.853472651 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.866145313 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.154761591 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.867762088 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.84584803 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.873800731 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.864843213 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.859293094 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.854808667 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.887670451 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.283109203 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.856339372 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.855438563 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.853669946 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.851848657 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.854620562 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.856603859 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.85864412 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867298055 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869457501 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.28578226 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874977817 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.858179393 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.852187861 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.861901537 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.857452279 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.860160463 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871435933 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.874958383 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871777987 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.14842022 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.876916713 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.853922356 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.872292929 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.863478349 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.320645083 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.853108699 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.856166825 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.289055029 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.860174791 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.322737657 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.867418094 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.856393112 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.87105833 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.888240755 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.159376616 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.867519659 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.850865195 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.861684734 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.85324678 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.865037427 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869812977 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.858589085 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.854578035 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871837718 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.884482873 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.864242084 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.857758319 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.863057164 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.877802404 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.863527867 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.868358482 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.856835876 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.850085357 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.866163206 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.862681106 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.861430991 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.861869296 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.859358626 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.866394386 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.284449465 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877187593 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.85393113 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.850296756 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.853657913 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.871061539 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.285453058 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.864010231 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877153373 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.901991323 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.859445428 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.150008113 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.883375989 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872510651 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.865289168 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.86058122 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.850487982 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.151572361 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.306494937 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.877029284 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.858333266 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.858874005 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873905211 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.860750189 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.853228257 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.161027706 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.876553969 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871160551 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.980627657 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.866130374 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.89225648 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.858969176 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.858770114 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.887359692 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.876420575 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.890748383 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.858804732 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.873458012 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.874226232 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.852691484 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.870092282 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.865023764 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.85768693 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.862731284 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.852962367 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.889338706 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872179749 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871350131 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.876720382 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.981390672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.853657335 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.14959433 seconds)
done (took 291.529729078 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.92506961 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.85329767 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.956078192 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.85718012 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.936983636 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.955105004 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.854325138 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.853226158 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.854705553 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.226781333 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.853315333 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.852568317 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.848390015 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.854477156 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.93907291 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.857019147 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.852324466 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.234713477 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.856155364 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.927100198 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.852849358 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.854069208 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.854982913 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.275062596 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.855219972 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.858131232 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.938780441 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.856636362 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.191503928 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.854362868 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.849088076 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.238119829 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.959707425 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88239676 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.866578948 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.854171003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.947284657 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.871497874 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.948841277 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937732297 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.957058045 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.888819168 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.851428549 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.85134338 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.85933243 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.859120846 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.8569356 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.885877957 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.858264867 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.855807517 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.197268547 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.867639533 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.867736166 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.858024368 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.854886424 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.87944959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.856145326 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.860226695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.953943305 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.858175633 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.923223114 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.232839833 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.279623585 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.858960219 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.860112171 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.854978647 seconds)
  done (took 183.665423519 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.924959296 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.933990616 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.925782994 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.861779328 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.909070115 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.927606795 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.861109867 seconds)
  done (took 15.130171445 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.864284992 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.859779624 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.909532675 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.909778291 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.859546277 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.012874498 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861233733 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.874607532 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.857599938 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.914035821 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.867589793 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859755343 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.866015793 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.858906128 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.909541433 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.874119328 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.975834602 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.861899667 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.863619457 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.015739075 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860286857 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.87052389 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.924318473 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.873012652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.867444065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.865161044 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.44678265 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.861075301 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.860511963 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.863340522 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8590504 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.904941816 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.861854193 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.855121965 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.860115734 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.974508914 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.860283336 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.862192282 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.861897221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.860716791 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.862476237 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.865450343 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.863400126 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.861022538 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.865759554 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.886107102 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.864698111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.862619112 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.866204531 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.866078148 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.913996481 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.864492014 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.861009685 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.860482124 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.916166524 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869328229 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.864696322 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.859744519 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.864594388 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.861063693 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.015438164 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.912436162 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.864786883 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.912761116 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.86448861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.86425368 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.86404893 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.865608311 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.957153663 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.863321034 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909951715 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.862269157 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.021188897 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.887330288 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.865505325 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.868168307 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.86748768 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.866751473 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.85874938 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.869758514 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.862679913 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.866154572 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.871526013 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.862288105 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.861446889 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.97628074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.974738575 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.860768473 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.8772015 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.873849203 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.861837946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.918125143 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.865503327 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.863235673 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.91778393 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.980445219 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.928911322 seconds)
  done (took 205.201228888 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.870080001 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.874929155 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.869553839 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.881882758 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.868740331 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.868047971 seconds)
  done (took 13.020026097 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.868257559 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.864631193 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.865032053 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.866691431 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.867279099 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.873488595 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.869360579 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.873281296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.871768886 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.866384704 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.873365673 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.868215987 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.872489525 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.868485017 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.869246589 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.866836592 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.86766686 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.863761033 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.865626331 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865501089 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.009401404 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.869158481 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.866454004 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.864983963 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.877032626 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.865175939 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.877068246 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.865514112 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.868191693 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.872804734 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.869472054 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.873579515 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.868991602 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.87143287 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.870963611 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.869393422 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86970859 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.866398222 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864315346 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.873228389 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.865157759 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.866865891 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.872143037 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.867812231 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.870941355 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.87292556 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.872344529 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.878449763 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.870474979 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.869231265 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.867997994 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.868259129 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.875875699 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.868908202 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.869221167 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.87326062 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.87300955 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.870615066 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.872199042 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.868278944 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.870035174 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.876838049 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.868023307 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.871536114 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.87581601 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.868571701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.869753106 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.871152603 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.869719031 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.868484729 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.869003807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.865983142 seconds)
  done (took 137.552211216 seconds)
done (took 556.361953813 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.9994707 seconds)
  done (took 8.789691408 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.966890744 seconds)
  done (took 8.864986166 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.257284483 seconds)
  done (took 10.054914814 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.906091902 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.880941758 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.862088224 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.872414779 seconds)
  done (took 29.325426199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.981298378 seconds)
  done (took 8.777034138 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.874797319 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.864023688 seconds)
  done (took 15.571953976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.897991736 seconds)
  done (took 8.69446206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.943787218 seconds)
  done (took 8.74812387 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.895879226 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.904693801 seconds)
  done (took 15.612636658 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.854328098 seconds)
  done (took 8.650422748 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.560923048 seconds)
  done (took 11.36541559 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.874598651 seconds)
  done (took 8.684241964 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.909769469 seconds)
  done (took 8.708283077 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.911966611 seconds)
  done (took 9.708542345 seconds)
done (took 163.34802917 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.870776796 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.865844682 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.865841787 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.865539701 seconds)
  done (took 29.264704411 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.904406729 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.904115901 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.905451956 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.913066672 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.907563755 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.90423896 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.897158242 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.898348694 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.914947342 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.90892938 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.904897212 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.909781878 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.905295988 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.897195102 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.903786664 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.905934639 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.914581063 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.90769715 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.896767885 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.909098504 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.872165582 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.916125898 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.913474322 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.874937085 seconds)
  done (took 47.482619768 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.081162369 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.947088788 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.035446908 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.928117363 seconds)
  done (took 9.79148207 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.927780734 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.931905815 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.944933046 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.980336617 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.004210535 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.94047917 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.903591094 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.897475315 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.885392169 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.933181192 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.005879897 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.924397556 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.023226006 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.877103935 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.062075973 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.874305794 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.875450945 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.927423197 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.982107569 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.004246163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.875355229 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.927501135 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.93059436 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.923817659 seconds)
  done (took 48.363054602 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.875903785 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.885557672 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.882138407 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.880827455 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.875364236 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.880457025 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.887447427 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.881575715 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.901411506 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.880771718 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.8802181 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.87905508 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.878812116 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.880187847 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.88240679 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.893028297 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.892293257 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.880367241 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.885322012 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.887649 seconds)
  done (took 39.473595321 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.874070575 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.7368905 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.228215536 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.131897422 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.875696138 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.878888723 seconds)
  done (took 31.528470141 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.894047487 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.887108573 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.88231394 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.937370324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.012703678 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.885167288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.882969198 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.890283503 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.924293615 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.939310647 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.899714736 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.906369165 seconds)
  done (took 24.749710258 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.876507594 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.877266963 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.888245647 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.897204703 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.89054652 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.888384393 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.888028427 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.87595498 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.891978898 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.898682735 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.888339701 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.893778128 seconds)
  done (took 44.463798497 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969135828 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.769190206 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.908697133 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563809731 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344769193 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086480127 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39390557 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.221023649 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.882647523 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154250951 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981409623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98329374 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134669396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876434188 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899762349 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.366111549 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173631532 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121737383 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901422308 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717409286 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928619529 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318480758 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.738185811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937721099 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088944204 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.008164519 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.140856583 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.835085982 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01602128 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916717174 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890691442 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877837871 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154655751 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263580482 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982324757 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890461617 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.499909195 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.590557426 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.87125141 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.676906878 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.70619213 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.009089524 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88856997 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878532894 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.815646569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.281380971 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248316807 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.882676781 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.594886917 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88180897 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893450371 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971279429 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.888090275 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.699374352 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793789199 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.154147287 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.877277317 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887986199 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457287916 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.034901355 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307378433 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.846677793 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.077454962 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696920742 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278166333 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.030562304 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.884302197 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888814857 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815837705 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.687229485 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938176386 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02758092 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.898577292 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.531672453 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190479761 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.02167865 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.820157546 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187158563 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.543965937 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.258479891 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108903571 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.831983216 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817073827 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.739402735 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81726309 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148484976 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912110869 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.525044959 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92178211 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.219837489 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.891920216 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898792193 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887723235 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106793663 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.446483699 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88057424 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.756976864 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.023435504 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901261637 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222203473 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816001045 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.881107232 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138385183 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.093523263 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.995850683 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391020955 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037312093 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906866872 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.89550702 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.679902309 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.921332509 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.163877983 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941970508 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.023855007 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939383335 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.846058274 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181422549 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918742263 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.983297143 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.003694392 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.002711 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.210691261 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171237606 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949615807 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883641704 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885950559 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.78440216 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.437545019 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.151158227 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.884601674 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278207923 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921109808 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.884766042 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819603802 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.471711812 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014533922 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.850461364 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109537116 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.738188061 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187711221 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818812925 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03019538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995030761 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.103695389 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.535697151 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.965466352 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142968027 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253333504 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.019844611 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924497419 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90431256 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001121203 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906208585 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.183231134 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.167988243 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.889168248 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.889503771 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.739459464 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.87884843 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886600893 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.890492862 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637351411 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158183146 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910468568 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.885875956 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.776706725 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.898807024 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952529492 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891992806 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89532957 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.427914418 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.596150213 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.890981278 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.503249338 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11166782 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894768083 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.69482324 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999075003 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.96893797 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166321 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948453811 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.820565429 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.597703801 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.580004439 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886268983 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822811748 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.887118962 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895394927 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898568862 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.267820269 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171427586 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932245897 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.768467689 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.930142646 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897081723 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.891408743 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889845074 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.426804487 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031859121 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314440939 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927792542 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025257335 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.901364831 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82154639 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891004108 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891120028 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886397405 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.854714906 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9403058 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.699135958 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276778376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14232116 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.537232933 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901230161 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.720462243 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.947515908 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.905745884 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.768743038 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.722881448 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.995864792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898938228 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.899796252 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.709863982 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.580454734 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453864755 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213778321 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197682096 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338406279 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.25844218 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.191201176 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.231064831 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124067857 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421035998 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947229191 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234377343 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833840739 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974103229 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541330683 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242450805 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901729216 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119651112 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283709765 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.684271439 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064612959 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103279065 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924163801 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.708147476 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846413034 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.093737968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036039305 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.686020716 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092306736 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229027803 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618879169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.006356306 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.891376218 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.575403496 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977403705 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.600767135 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.253092029 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.325831711 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878910543 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376346967 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890269283 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338320812 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255992143 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.103376194 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.005326703 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828292078 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.901555313 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904812764 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.892976263 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.885631987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.741688052 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.146516621 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903861619 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129312191 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.038625003 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190557599 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.800172952 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.899086471 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891957793 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191357579 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.566388806 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056283107 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.202888948 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.403564755 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896540245 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828146072 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829429367 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.585794337 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904967605 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872422718 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115901998 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.076950155 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80298289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285959271 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130672227 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150074081 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.909634768 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172285272 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172505058 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.59865287 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919963907 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.994553012 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.659420912 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.008134491 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163538752 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.130019198 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651000258 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117305422 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.943334809 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.701695112 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.893187291 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.109271007 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164282444 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.856105963 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129094646 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.613147689 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.903247496 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350830236 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952478992 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.8751336 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.049233034 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.089756342 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904941418 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980824933 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907449343 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.905713202 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906305679 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941324784 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886175444 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.025081531 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.909398163 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985505576 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.045846728 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.415807695 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.899888613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176428708 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263553636 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232789116 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956556815 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894874308 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898190664 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830857226 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02972652 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343679646 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170950305 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025643215 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.195094249 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921528824 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630366955 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.163928452 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128387325 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171104841 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.792712734 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896126342 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932160449 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.164631236 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908185914 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.108355645 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125885904 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205242879 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366758641 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.020604835 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260923406 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170552571 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267671571 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900410837 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486667295 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.902949578 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.700398062 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.936722857 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894403944 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169768234 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907985506 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288230026 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915773549 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.095444908 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.414012801 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797246188 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.184415588 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.890597192 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.958787081 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178721279 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298633067 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213372005 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970332471 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910085181 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.620311875 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038637444 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.758762913 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164240766 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900583222 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112504266 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.610516288 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.907996462 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185720995 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210290486 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.898238276 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.774118171 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901105265 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.911329804 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.121684714 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168027289 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149307822 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903719487 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906565251 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.718386842 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185794054 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957782624 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828535603 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.89893853 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998975331 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148133608 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920868081 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.418219243 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.609588445 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208497325 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.813797357 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920015615 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.306898593 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270950961 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230754644 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.432632894 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124819071 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451845774 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.753788675 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192369891 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.901886654 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286600581 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197166141 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.901491756 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390927599 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928940502 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.172777755 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214960145 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.907686678 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84246226 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.86853844 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125506751 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.45376384 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841064916 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897214554 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.96187083 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.901010515 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031154936 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909968787 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.765198924 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.718495955 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.644767722 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395936836 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.903479846 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.889681764 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.687480711 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433536177 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932747907 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048763606 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90991723 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.624696963 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.196100942 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157577615 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412749954 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.907038021 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.907647581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904070205 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.833188708 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.097191608 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.28093068 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200671724 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.212360325 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.935928129 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908726364 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.121748023 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114731467 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.880601215 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04555251 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273125842 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935611876 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.674227415 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.586558519 seconds)
  done (took 1693.378102028 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.916162815 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.916252895 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.916962109 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.945389736 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900450784 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959841395 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.957778368 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.949163836 seconds)
  done (took 57.295588493 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.891440788 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.08931796 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.9015659 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.891340961 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.897172509 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.890159852 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.060957715 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.89961715 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.902220167 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.90465756 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.893344408 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.89375795 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.200319766 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.915702016 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.899484286 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.87513678 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.898384978 seconds)
  done (took 74.737004196 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.892343984 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.088286512 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.923712767 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.91524089 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.833055581 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.901363194 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.842725983 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.935718778 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.896922383 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.1108354 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.530591162 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.897659622 seconds)
  done (took 90.595324098 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.904302922 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.899139215 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.899664037 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.900213083 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.899952456 seconds)
  done (took 11.329588262 seconds)
done (took 2204.277968312 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.141424847 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.121765867 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.120541965 seconds)
  done (took 6.066541323 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.045266254 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.09193382 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.213934578 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.230949982 seconds)
  done (took 10.409660291 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.186416072 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.265863443 seconds)
  done (took 6.276687317 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.290073331 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.910367539 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.289243216 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.894012065 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.895722421 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.89564898 seconds)
  done (took 22.515513017 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.898753019 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.90246988 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.902609223 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.904385053 seconds)
  done (took 9.432281974 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.879151624 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.56817458 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.875917479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.890304862 seconds)
  done (took 21.038102584 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.648890546 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.297600164 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.643209977 seconds)
  done (took 9.413360888 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.39809103 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.793364881 seconds)
  done (took 9.018372351 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.162972376 seconds)
  done (took 3.988365261 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.042844854 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.174098831 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.413554097 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.412454845 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.500384081 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.722940568 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.197822164 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.126989358 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.301157875 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.321143559 seconds)
  done (took 25.040386901 seconds)
done (took 138.652981897 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.26998846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.132912221 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.096212112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.284537108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.125877431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.09423212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.308110693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.268461518 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.733625462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.73123407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.238200828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.203386989 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.06266242 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.129112073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.066181152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.259453048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.115308446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.28291757 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.973011553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.131174452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.312281133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866154179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.075653022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.872892091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.113880685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.047292565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.439766573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.252835608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.122649878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.448343023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.044343995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.285553435 seconds)
  done (took 172.215489257 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.77383589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892460531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.889112528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89609129 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.073798995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.888197186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890082942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888976826 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.025422233 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.021932625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.895812587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.105276176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.900537223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887146673 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894265388 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888060762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.215216204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.834287109 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900432915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.904365423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.910172728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.993607618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.910668314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.040087328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.248894967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910480738 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.886931846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909484694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.894165576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.896255099 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.896385236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887490723 seconds)
  done (took 207.875471854 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.888696236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.884961312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.881781901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.883945201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.88486291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.885416975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884168052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886285027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.564255321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.548047867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.892301195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.890630471 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.895445553 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882850731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.894059021 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.883819672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.888955988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.889770379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.889159929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891766411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.894617266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.679613447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.891680448 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.694716111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.88700666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.888394292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.882037948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888335415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.87777493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.888825998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.890518619 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.88228438 seconds)
  done (took 221.170295546 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.078925496 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.890440896 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.892005789 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.833700843 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.892925858 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.893280108 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.854200845 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080392406 seconds)
  done (took 19.676857396 seconds)
done (took 622.773719223 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.436787938 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.222786705 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.072569111 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.913041342 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.156446963 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.949251649 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.91155394 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.981744029 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.649789898 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.982360645 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.607087152 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.930164257 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.692002108 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.930127717 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.035638862 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.968169493 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.446854653 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.538011374 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.085590431 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.971039393 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.080808563 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.90202131 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.98400263 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.656649129 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.701484174 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.909657143 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.098037936 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.454346411 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.909619638 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.065584306 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.605887089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.298367874 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.909927004 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.900262383 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.955641885 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.934894702 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.262552142 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.912244839 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.021254357 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.66645937 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.964670584 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.516110284 seconds)
  done (took 104.005219419 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.867378551 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.866912068 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.866572156 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.866169622 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.866315931 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.868234598 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.867900747 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.867415828 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.867106223 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.866759886 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.866513875 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.869557914 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.867638845 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.870190157 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.865572733 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.867032384 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.867684071 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.868937197 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.865523058 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.865222289 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.869022238 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.868494957 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.882654486 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.868627141 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.868144097 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.865311902 seconds)
  done (took 50.38136796 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.882905147 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.048583544 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.135057174 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.897661987 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.881007913 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.885286298 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.899833384 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.886195504 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.884572874 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.884665852 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.991463016 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.887603746 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.901631681 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.137528156 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.897534791 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.882590307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.880861468 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.882321235 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.054168461 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894540259 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.900287915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.887257625 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.902733423 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.893855431 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.882338895 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.883928798 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.887509402 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.337930906 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.888908776 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.988396832 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.978674001 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.903211341 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.307259571 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.148991148 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.949643494 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.888791733 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.883657483 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992828494 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.88863981 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.881793199 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.901898484 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.888333759 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.136003472 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.355433044 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.897584904 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.884923184 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.350796483 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.999287011 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.924451819 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.893264162 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.139065108 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.89651268 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.884870143 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.885092018 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.919632847 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.89218689 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.884566253 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.224955742 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.897302676 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.900567313 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.889584716 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.882272898 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.059733334 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.889896428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.0481292 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.895292669 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.892094193 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.883732675 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.138919266 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89851076 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.370972377 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.893048704 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.882398496 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986945756 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.046865397 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.370025205 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.894292681 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05872129 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.320470722 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.904520291 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.887067431 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.322740591 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.907970478 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.887756792 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.886132415 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.886448247 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.882820885 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.928408827 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.899363195 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.291634806 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.368920145 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.235489949 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.907394202 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.897664693 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.882744807 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.224047188 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.890185298 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.881876254 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.130408568 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.371581708 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.897155187 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.891798757 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.349613573 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.896442632 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.904597676 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.889714925 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.142489502 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.897550595 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.931149104 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.884019003 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.890653603 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.886836882 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.904159556 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.89126842 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.886187617 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.336365001 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.008449652 seconds)
  done (took 233.802257347 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.880582586 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.873782761 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.876108855 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.872497097 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.877609227 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.88570542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.877835605 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.87836629 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.885077847 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.879322622 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.87829287 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.880490404 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.882042536 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.880411335 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.963085915 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.927958944 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.579891172 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.924950024 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.918735509 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.923263777 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.575171498 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.928333091 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.924489852 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.922151803 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.924352447 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.922401655 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.927846353 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.953660656 seconds)
  done (took 168.435182216 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.930700976 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.043360691 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.945000774 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.958093484 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.935787462 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.928458054 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.94777614 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.937054121 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.933003529 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.923435115 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.926500833 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.98820462 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.935662081 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.028949433 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.952786359 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.953726998 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.026474692 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.932046819 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.924536316 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.927538755 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.95555739 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.920254306 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.987758428 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.051165259 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.939852179 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.042655487 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.930966861 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.928780303 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.925911103 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.045422423 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.941635291 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.987398009 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.958184328 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.943519166 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.051588744 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.045288676 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.030743521 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.953998807 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.930238953 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.928152337 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.925735901 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.918144444 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.046733908 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.947086566 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.9287805 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035005719 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.94762001 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.929267819 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.938669908 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.925822433 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.943568808 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.952213401 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.999833281 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.064271973 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.960517589 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.954115756 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.958236182 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.19684035 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.94308188 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.031541812 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.916705533 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.045283143 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.949872134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.916147008 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.928490332 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.935866026 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.956538919 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.959624312 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.031316011 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.934346721 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.029769972 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.963439775 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.93705757 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.928956793 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.933211615 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.046813992 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.046413626 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.965184334 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.964788353 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.961146192 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.921575345 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.93112681 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.916152536 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.953091172 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.934432429 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.044850157 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.049424881 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.937993258 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.933618214 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.93250209 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.935256012 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.960618882 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.053882156 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.963796888 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.026126226 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.00037473 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.004274073 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.944609523 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.946161414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.934784396 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.996656335 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.945262833 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.944065114 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.242097491 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.001506137 seconds)
  done (took 208.786025577 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.392660555 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.97992446 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.983282595 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.245108226 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.343167821 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.783324976 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.977904819 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.978561023 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.000614966 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.168503229 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.051416838 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.998212468 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.964192987 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.952155931 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.975149428 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.001538648 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.988881238 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.305597326 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.112327982 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.064552876 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.962763924 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.251951604 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.294628397 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.37090345 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.01450667 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.322720787 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.647645807 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.227537454 seconds)
  done (took 63.221859672 seconds)
done (took 830.450252239 seconds)
SAVING RESULT...
DONE!
