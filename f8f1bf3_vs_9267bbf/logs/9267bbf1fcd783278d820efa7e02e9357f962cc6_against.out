cset: moving following pidspec: 1401
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.555024149 seconds)
loading group "shootout"... done (took 1.18962604 seconds)
loading group "string"... done (took 0.404969056 seconds)
loading group "linalg"... done (took 7.549284371 seconds)
loading group "parallel"... done (took 0.144063569 seconds)
loading group "find"... done (took 1.264159406 seconds)
loading group "tuple"... done (took 1.823543413 seconds)
loading group "union"... done (took 12.057249195 seconds)
loading group "dates"... done (took 1.249699031 seconds)
loading group "micro"... done (took 0.191891508 seconds)
loading group "simd"... done (took 4.132149316 seconds)
loading group "io"... done (took 0.985284331 seconds)
loading group "random"... done (took 8.175651351 seconds)
loading group "problem"... done (took 1.579180493 seconds)
loading group "array"... done (took 18.555830561 seconds)
loading group "misc"... done (took 1.438684197 seconds)
loading group "scalar"... done (took 37.668930895 seconds)
loading group "sort"... done (took 2.959394922 seconds)
loading group "sparse"... done (took 11.204793939 seconds)
loading group "collection"... done (took 16.746876429 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.48563298 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121591453 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125095202 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114185129 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139467469 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117948718 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123370838 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083664633 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.878195458 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139939773 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111248153 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424064196 seconds)
done (took 5.167534058 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.160680416 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084742226 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075468259 seconds)
  done (took 1.256494815 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061748311 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127850375 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06215171 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063538243 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06393348 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063478889 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063289165 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062979154 seconds)
  done (took 1.606048376 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068471768 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06398177 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061969929 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064946803 seconds)
  done (took 1.359923699 seconds)
done (took 5.5595426 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.230341246 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.09808719 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.280197303 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.388667754 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.44642616 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.086003069 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.069581913 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065482857 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125583831 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331747013 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.099529618 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.176461201 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.086466303 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170014459 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.963106423 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.115169036 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081247713 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.118419567 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088370537 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12671942 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.400728443 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073711064 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069855549 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065872125 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063371361 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.640210792 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692257677 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123777837 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078990353 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.098328089 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112498937 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.632154393 seconds)
  done (took 10.329819852 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089783976 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087997699 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064358075 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120233103 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088846239 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064997317 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070409136 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063168999 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08623821 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.11949938 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085519573 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09580629 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061358919 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064776539 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071750072 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.193148746 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075630615 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076439253 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064210841 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075413045 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10287396 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.073578854 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.074871141 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074382267 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124746897 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164676498 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092144442 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09334834 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06223744 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07614875 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110761506 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.121530599 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061842397 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061308209 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115988121 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090059603 seconds)
  done (took 4.368791314 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.923702256 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086888037 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098255681 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.603407437 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06192243 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.146017114 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234034759 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068849705 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.361260916 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.14102675 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.1386707 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.145864718 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112171705 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066862215 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.207057687 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.108452877 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344976227 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062769865 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062116705 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.060557014 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063589482 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063215366 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060568555 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066919442 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089148838 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083770551 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.158641083 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.916056367 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.240003467 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062861939 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.155638211 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079418552 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354602161 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06742455 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081171169 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.393769915 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117500697 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060994014 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16118836 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113999761 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06166763 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.109788111 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080198511 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066319202 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066290449 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065458868 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068805432 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078268549 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.099075022 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063651277 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060731405 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.156685803 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060267869 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06286752 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064886092 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083164278 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147128711 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.060273999 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060468011 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.135821112 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060052838 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064932917 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094205252 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065320846 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088535026 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.100813947 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.331200829 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.030046079 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063717493 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.889700836 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075140704 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063441497 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068339067 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063694016 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064949696 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063639643 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071560672 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067040175 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063480159 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103745058 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062299153 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064878385 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062262431 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066668154 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092834483 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06365212 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.4567298 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.093101106 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060326425 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072731716 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062316644 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099749037 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061942529 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067286011 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063337568 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063683361 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062186557 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063103272 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.176869342 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.08926896 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061012663 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066152862 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110736221 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.022123804 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064472806 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062242183 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067007218 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065417383 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064696408 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06183283 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065031806 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064061927 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06048882 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.107158734 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06276522 seconds)
  done (took 20.849440853 seconds)
done (took 37.57072286 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242842922 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077141888 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077406143 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07838172 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077768449 seconds)
  done (took 1.754649617 seconds)
done (took 2.945908224 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.10257437 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059140407 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.094702471 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.09423924 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.062722628 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.05962523 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.092588681 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.059636129 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092093126 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.094141774 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.096488865 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.095439964 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.0606876 seconds)
  done (took 2.262350718 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065972557 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076460971 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079523646 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059330655 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069371922 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078385129 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059478811 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077451105 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084233449 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078323768 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078712273 seconds)
  done (took 1.993622909 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065019666 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076765037 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079443996 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.06204143 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070779718 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078644657 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059064262 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077591378 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081654108 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078278947 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078686453 seconds)
  done (took 1.988092814 seconds)
done (took 7.422436538 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064112098 seconds)
  done (took 1.229065007 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.518832436 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.57648365 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065237174 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084866526 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.179166444 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.095040961 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.223978165 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069740337 seconds)
  done (took 8.153029977 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093707126 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064660097 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.064877619 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064937459 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065563171 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065699789 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066986538 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067290643 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066561654 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067115033 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065585559 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066018801 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066811445 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066169199 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066456526 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066304111 seconds)
  done (took 2.352537684 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092489073 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09110794 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069166702 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071401535 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068240184 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068459184 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071266713 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070402974 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06759543 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0690345 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072027644 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069789407 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.06979754 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060943244 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071695914 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072719484 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067721342 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071078903 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071529079 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072525685 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071634128 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0610157 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069550766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071226233 seconds)
  done (took 3.000678269 seconds)
done (took 15.914895732 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109368808 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072563586 seconds)
  done (took 1.357166821 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066300349 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068126676 seconds)
  done (took 1.323372886 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073188873 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057467383 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081292189 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070476873 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059645458 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059315777 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079222299 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060028792 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059336879 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059229526 seconds)
  done (took 1.851251512 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059948354 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067667517 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066687137 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068619052 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066444347 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060732729 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064057909 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061114868 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069202906 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059627197 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065209232 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080101643 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064173331 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081843449 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064379162 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.0652382 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067442409 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064121015 seconds)
  done (took 2.391193487 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.05785666 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059158204 seconds)
  done (took 1.313972931 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062289153 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059954183 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06314256 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064090575 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06018232 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059477823 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060525917 seconds)
  done (took 1.617886963 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408612085 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116406243 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337683286 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066519393 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077613807 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.245575909 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.061031879 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066166221 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066024114 seconds)
  done (took 2.677666467 seconds)
done (took 13.734538837 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076412344 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079532059 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086643593 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.412300079 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087800325 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062606557 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108454814 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.174745977 seconds)
done (took 2.302439542 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215116876 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.393856256 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.945814947 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.062235978 seconds)
  done (took 3.602214017 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318006119 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079907065 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072923207 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.062460453 seconds)
  done (took 1.745371772 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060781135 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068346632 seconds)
  done (took 1.335723221 seconds)
done (took 8.109947059 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06048301 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060914535 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062016511 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087425641 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060727293 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061062575 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061474825 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060631773 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060490232 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060640604 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060558787 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060589671 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060683619 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061285164 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061161154 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06094645 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061462781 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061404754 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06097083 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061098676 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060959966 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060753393 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061085093 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0612719 seconds)
  done (took 2.724036358 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076865968 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063001329 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063600767 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063602288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064081323 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063482209 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063586596 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062024728 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063776094 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062092735 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064244612 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064331502 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062303513 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064845285 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06336719 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065185393 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065096893 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06332021 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062709945 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065223933 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06468657 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063350479 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065642045 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064894076 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06529752 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065535222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063477818 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063686531 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065280876 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065484066 seconds)
  done (took 3.151104792 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060366477 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056101979 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058683199 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066432046 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058691694 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058480008 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058479237 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058038406 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058094519 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059260517 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058336068 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057546978 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059288676 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057489287 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057851178 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059317883 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061595301 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07557634 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058037233 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057957404 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061482732 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058024598 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058071965 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057911473 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.062648968 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057446403 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057338685 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058679629 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057724469 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058657907 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057453773 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061222463 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062464158 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057891438 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066967189 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061941821 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057607465 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061514438 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.05906437 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057665164 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058069152 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057931137 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057967779 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057751101 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066876093 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058404778 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05851391 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057168062 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056698584 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056289176 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056412881 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058637947 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.061329126 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.05843863 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057309212 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.05895604 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057596249 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058601119 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057873746 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057674633 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057407633 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060930127 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059957646 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058748237 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074932684 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05962725 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066512343 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057664252 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061970377 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060643587 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05834345 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073178581 seconds)
  done (took 5.523347243 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.0818061 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084253942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061658849 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06161915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057414348 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057523874 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066600557 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058520957 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062553603 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077619492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058989025 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062635511 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062750733 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062349663 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058882487 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062733341 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066769105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059101797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058420095 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062109287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058442814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066505604 seconds)
  done (took 2.640705143 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134884667 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062653848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099035095 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073079634 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065447288 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073053272 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062484799 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062565073 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062710542 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063316788 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06306433 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06266932 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065707293 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064504803 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065192421 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064527618 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064096003 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063039781 seconds)
  done (took 2.494448947 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073787558 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063145111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083704027 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061875038 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062076702 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062027234 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066310327 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067603249 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061992689 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062161307 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.067209751 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061660224 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063659171 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062364334 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061761969 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062290727 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062185528 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062126363 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067125801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06582112 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066599918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066913759 seconds)
  done (took 2.658049043 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071189037 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06076164 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073829349 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063459096 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058519735 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0589395 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063854827 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062525717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063696832 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06182004 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062412787 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058431207 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06473544 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062531965 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064890844 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062692404 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062476399 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062803086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062543956 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058454871 seconds)
  done (took 2.483102347 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083276671 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059788734 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059817899 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078255032 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060564216 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.05987137 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078431648 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059953982 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06033635 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080914053 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060584984 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059598882 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077895635 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077936155 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060019949 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078021521 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077547333 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078038195 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059694848 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060015858 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08072233 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059848363 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078392978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060098971 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060141553 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060286597 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06007642 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078342952 seconds)
  done (took 3.132747716 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070049612 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059038115 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059669184 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059135879 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059926274 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059820296 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060330576 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059631511 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059696369 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060982557 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059641543 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059880338 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059586218 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060389269 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060330383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.05988842 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059420348 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059655432 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060594516 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061460719 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.061178012 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060792027 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06071462 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061351962 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06121921 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060620414 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060751963 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060656074 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060744757 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061463583 seconds)
  done (took 3.047972702 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070720449 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067859205 seconds)
  done (took 1.368542648 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059240483 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072877643 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05640959 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067532263 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067510934 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061751353 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06780858 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067621393 seconds)
  done (took 1.745306908 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064986631 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085592021 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059360331 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060329983 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062151481 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112872759 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.072149165 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.067819218 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072514645 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.059584217 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059384424 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069600165 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058438961 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069369369 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061517636 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067258117 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064960761 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069634361 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070181879 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058157514 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069444606 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060734321 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059186766 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061105569 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060253916 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06535037 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073596368 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070115743 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067414813 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057861834 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076913614 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.057075316 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058611815 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065818791 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061981287 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058325509 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093263256 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058949081 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065453465 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.05840487 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069960048 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076802264 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070883422 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073580194 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.05919667 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059748969 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057207398 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059722909 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060077946 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065857343 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058658151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065160212 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05798768 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060661575 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068080704 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059012206 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065415031 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066971725 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069631273 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067956777 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065945168 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071928305 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066012773 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068885265 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059993413 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076111228 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.0610205 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069363966 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071359971 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060252889 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071941348 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058390668 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057135446 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058452689 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088654128 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060634383 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059777094 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058560059 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058245328 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060202818 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065764123 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063447422 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063488597 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062630005 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072767749 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066324058 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058477722 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066562387 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075064541 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061300273 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058527738 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072966546 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060733845 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05819833 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07483734 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066417203 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06112812 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058849507 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059671474 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068496682 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057754052 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05539061 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.062777037 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058027001 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059562158 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.060677791 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.061986949 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.055922445 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06455896 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.061653694 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057828745 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.05501546 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060825599 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058171415 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054925278 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063973989 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05585727 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069207404 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061041502 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068158514 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068421012 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064906552 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069797709 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.05586298 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054907143 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071890804 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.19454611 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061058382 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076496559 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.05967589 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069249648 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058993315 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.0616949 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067958226 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058469571 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061398942 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059268935 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066690637 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.06056101 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061734442 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061798937 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065858349 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070241673 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060043127 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065980735 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059405957 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073129944 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06799624 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062549319 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063958328 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059269315 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.068050604 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063047364 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065535265 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057056366 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.0582342 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058017185 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067512701 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065278334 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059801586 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066638307 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061033388 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058586563 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.057637206 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.05853855 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.05978786 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061953971 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.058732568 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064540984 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066784641 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072138147 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06942242 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064781238 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056147031 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.056938078 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059350044 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057929652 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061945181 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066363337 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071782702 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068050074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076747789 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058828811 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067435439 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060526538 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073886988 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.06997749 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060237411 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064785094 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058194374 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060925 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066931461 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069247626 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071482663 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071770773 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062700174 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062238194 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058520286 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071793187 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059089622 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06530845 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.065210039 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063861196 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058663111 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061037436 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066746464 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06256422 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0587721 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072395391 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065662998 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057560197 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069358132 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.057577351 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066789033 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056829654 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060085222 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061089223 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059802667 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065696958 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070678672 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056192825 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.057619584 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070617219 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059481394 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059212855 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063751035 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070044362 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060626951 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063896085 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066256165 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065918151 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060588642 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064586695 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057636647 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064392745 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.059900199 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.067430541 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057990408 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073688489 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056487214 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070104378 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.057575986 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.06707229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057614478 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065580072 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059004898 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072908127 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059492873 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058708372 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068512537 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056366358 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065811868 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057018468 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062577416 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062134014 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064910218 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059782859 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200940845 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060423947 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06602561 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06205707 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065874114 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065897456 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06149035 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057776808 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064660946 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068023032 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.064404032 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.05937044 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059786614 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.057905913 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065456277 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060095065 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060290451 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065403928 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062986077 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06399812 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061360488 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062014819 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060797498 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066576522 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067062441 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075858223 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065448333 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064860812 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066659457 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058559931 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072870247 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058706368 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065361319 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057936004 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06673292 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066565187 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058958221 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076475273 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059818138 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.064014585 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069702268 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064390536 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.059667527 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074021701 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061793128 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063885085 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064620417 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.060428263 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062850044 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059329072 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064292882 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065506202 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066617862 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058480914 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06349468 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064857438 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059561433 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066909391 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060227465 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065346585 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060799585 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05804104 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062603973 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069337918 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062954679 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063119493 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059396301 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057666903 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059350947 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067199692 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062462764 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066086091 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072245216 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057977778 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059984352 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058564019 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064029878 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075283612 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067447736 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064912267 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062520169 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057683857 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061046478 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060978996 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059287176 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063408591 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058001176 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058384907 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066761254 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059482901 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060877872 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057639253 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058704711 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065144576 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063019165 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058199796 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062770126 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057447515 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.061502979 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057473513 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059538934 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060752097 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056429002 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059491977 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065723612 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071356279 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062961809 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06465235 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058386004 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064953814 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071576302 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065440272 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057933887 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064972958 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056178231 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072946326 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064341234 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063450012 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064960391 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057671826 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073124009 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061283513 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067146903 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071965782 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059182927 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065957314 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058122727 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071920645 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061870085 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057312383 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065173564 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063843566 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.202256381 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069400444 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060266233 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067672647 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066457955 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062811469 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.063504436 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061403146 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067549742 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074053012 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060746944 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064873933 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066613818 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064828764 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062446699 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06816158 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064672579 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059415081 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.05959937 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06150909 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060227159 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069938545 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059662352 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062499814 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062557716 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058942678 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064729914 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073830384 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067453769 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067860172 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059310904 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058506127 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07552805 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061697575 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063694734 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0657902 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067438224 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070253439 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06798696 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074689257 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059840284 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063866805 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069568465 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.058728386 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057045441 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061557086 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060687244 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06632575 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.066739557 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064655226 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060930469 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064449621 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068726714 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059266713 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061110413 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063222429 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058706584 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06639549 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.064485245 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064532095 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059792305 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058877525 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061346031 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065278762 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064663865 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066406486 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059831715 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067331058 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071867898 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065375391 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062420437 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.057501542 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062070031 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066117235 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064924582 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058896648 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062564434 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061439366 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067495822 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06716698 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062787289 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05862799 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07464487 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066601651 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067265743 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06093677 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061169364 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059646082 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058842047 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069052959 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059083219 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060762531 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061690638 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059367391 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072964694 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06445338 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071217935 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058817506 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060965049 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057450226 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066237725 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061372758 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057185952 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065830557 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056297983 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070745123 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.068182673 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066005335 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057031257 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060994499 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.063323764 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.068881273 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064764461 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.063948959 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.060147151 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064532472 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.05854764 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066323626 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.05607375 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055241967 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.064330273 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063409118 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.066886062 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.055770657 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.064466202 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.057920502 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062682104 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.063031904 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.058254809 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057935905 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057996754 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.200994758 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062427613 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066666407 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063331733 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074249137 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060848203 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070153817 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066660861 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068993501 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070983346 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071361357 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066854192 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059711461 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064480891 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065221272 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059710028 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061450973 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061601496 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078158866 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059171104 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060108147 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072671788 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067086113 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059560719 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066748603 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062836139 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.06830103 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060388681 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.06790727 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063823662 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058574001 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061062879 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.060622648 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056471764 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.05779452 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057470875 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066468029 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061239126 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058598097 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074599417 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059430429 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06604604 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068041395 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063777135 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059533703 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05657222 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059905566 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068195916 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071419488 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061486399 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065564532 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060833018 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066737895 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057551249 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066170951 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065879524 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06503016 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057177318 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058080386 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069914235 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070876115 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061033611 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.065483624 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06526468 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.059185216 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077651458 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064576506 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05857152 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067043918 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060710607 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056747811 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057028519 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060042482 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067831249 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059646987 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060645961 seconds)
  done (took 39.783332365 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095854871 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058608779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057872213 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05784084 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069613443 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05824565 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.057346591 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059012386 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059936482 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062060028 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058875369 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058590795 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070740803 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074057925 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07030021 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063580496 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058670621 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059723469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058456575 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060005153 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070172148 seconds)
  done (took 2.683050787 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06562698 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072861698 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069893677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076075377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067762821 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0638896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071074917 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063815933 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072168291 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069104587 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072175215 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064381943 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069123875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069318578 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069176292 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064048656 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071951173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067742933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064177288 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071217621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064162293 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071316144 seconds)
  done (took 2.833894273 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059177785 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057731595 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065931425 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05763124 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058366108 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062714241 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058257342 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061483484 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061244403 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.06145913 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066447692 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058972372 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057899879 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062501607 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057922015 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059469807 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104836107 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059640207 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059430906 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057870978 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063947002 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066141107 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058812377 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058430385 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061184331 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062506344 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058476905 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061761872 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059042588 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061414731 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059308793 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058029009 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065570598 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065124992 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061408644 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061667461 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060576262 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059320834 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058562484 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058221234 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065719678 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060242255 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058846749 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059816277 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066326425 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058249565 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058383233 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065808356 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05793356 seconds)
  done (took 4.344097313 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070219838 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.105986154 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063823982 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0876411 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073387145 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066183528 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064280027 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08861033 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059516858 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060529954 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074421785 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074381412 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062225678 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063665291 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065949609 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061829776 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062931826 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061038423 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063811291 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060348191 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.064319601 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065763548 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071617614 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072589594 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063275095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061044324 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061530571 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063695943 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073209184 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06547204 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062613352 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06312367 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07193647 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065459413 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06001309 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.060456355 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074088712 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062543432 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062424517 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060442911 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061869536 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063978541 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066097583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075161349 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062714145 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066675455 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062858754 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060467432 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073808824 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062081017 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066986229 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075066189 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063786926 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062617197 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063807996 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073885938 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062688224 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060608365 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061904838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.071637296 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058720413 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062132093 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073098199 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060286189 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064919723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073132373 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064986343 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061957745 seconds)
  done (took 5.996439617 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068365948 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088131539 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06932189 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06870576 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068019326 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068754147 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068992238 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067904406 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070709123 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068789833 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06851156 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107112532 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063895006 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073544441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068268191 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068129343 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068224143 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068338442 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068326458 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069186024 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068579966 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068800221 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068430892 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069367359 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072861335 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065418463 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069947482 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069993055 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070939495 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06988062 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072809003 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068503263 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06860533 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069053789 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072796973 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070126545 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059450526 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069544691 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070331114 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06998875 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065794534 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071310786 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070183167 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065553519 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070492347 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07033968 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071284529 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073851925 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07916168 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071097905 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070652967 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071204888 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07053149 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070554561 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070772198 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078915735 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070929006 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071185476 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069852589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069289409 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069559962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077111691 seconds)
  done (took 5.745416198 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073455548 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065796405 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077774349 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059954672 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058367202 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068890738 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058460829 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057384033 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065542436 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065683258 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067685615 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066984261 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069531615 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067858183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067274361 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069863137 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068055051 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068462463 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067579931 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068761947 seconds)
  done (took 2.687723315 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.06946833 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075245166 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064609149 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068711675 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064296549 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068625883 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063112966 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064660483 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065321679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064560759 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070298798 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070410146 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06486236 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068940584 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070366755 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069123014 seconds)
  done (took 2.425788217 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064318148 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065922897 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065846763 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059961505 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063131835 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059678683 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060232275 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058332526 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058988264 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073827166 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059870193 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071441158 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059916762 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058688828 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059345861 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065639736 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058801297 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060185079 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060035002 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065704895 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06662351 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061392672 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063787249 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060259591 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064888048 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067744202 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06185021 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063308239 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060076544 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060368364 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065054553 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065984252 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059514561 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059334106 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057699723 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05853835 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058696024 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.05911717 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06422195 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058862459 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057084819 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063366574 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059137867 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060083331 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058549095 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060049303 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057667811 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064205436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059113257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063582075 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058414945 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060910559 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059825675 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065717662 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061741388 seconds)
  done (took 4.741175387 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072186661 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063140989 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057983705 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057475664 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063979225 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064037408 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064017817 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064098248 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064636248 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058583567 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064335773 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063473583 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064252357 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064069111 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06460892 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06366347 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058434949 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063671628 seconds)
  done (took 2.492140071 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068132569 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062893126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.066820933 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06311149 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063804739 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062444292 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059107065 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058918789 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058850491 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063051905 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06332951 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062997146 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059453843 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062685207 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06341563 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063196959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062005541 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058506615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062379043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058132281 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06164466 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057685404 seconds)
  done (took 2.711817507 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084172623 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079135765 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.117812448 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074641808 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081952623 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067567077 seconds)
  done (took 1.855881271 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086212771 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099966669 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062570013 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063057968 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072394413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065823048 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066123618 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065826752 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072736018 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070248764 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065954065 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072735917 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072905836 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067893305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072681218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077172339 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067094619 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066268287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06268419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075612905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066071918 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07302129 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066309222 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066385534 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065965519 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086207967 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076459838 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070578723 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067679878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072834069 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07588669 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066401448 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072868376 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070709562 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062545255 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072936265 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065914801 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076740976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073165702 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067960156 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062227743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072853814 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073445915 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069047349 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078475824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06807148 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070078944 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068091976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068106265 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08080752 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075168436 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069917606 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073505962 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076547576 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076227143 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078588012 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071543225 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068266583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073130695 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071048801 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068534655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073296978 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068541567 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071406021 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076278351 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068476522 seconds)
  done (took 6.06321259 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094244884 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063481601 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066171987 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071431325 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068220139 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066165014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0662426 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065811301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066372452 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062996009 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100036888 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066254903 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068366835 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067928812 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066258591 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066062202 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066523304 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06805864 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062717952 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078836675 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066086069 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068009023 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068134082 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06826141 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07090477 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076194668 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066842055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065757458 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066044644 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066517047 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068147808 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066089797 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068464215 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062606748 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068173046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067740682 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067557251 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06993796 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067823644 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074729892 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069967643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078170713 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067803235 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067243436 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072878498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067081694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067573158 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064309976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068093156 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064368238 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072949037 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072938684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073213746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069999558 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068766755 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0680012 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067926585 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068026837 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068110891 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078080142 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070538092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067914365 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080869995 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067881956 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067810498 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069922966 seconds)
  done (took 5.956461036 seconds)
done (took 122.496232594 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204506044 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181743295 seconds)
  done (took 1.720492617 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069747293 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092262593 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071040236 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129337934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066270934 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100709394 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099845257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070973176 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066037724 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066283917 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067385803 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070533174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134160086 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066180071 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066473359 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069034722 seconds)
  done (took 2.660435286 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100236482 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177960751 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103967313 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063986879 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099483899 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07158696 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064474371 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074816639 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068193545 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067429677 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07135245 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069821001 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067559523 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070655802 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068068869 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071130312 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067742765 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071901819 seconds)
  done (took 2.808542337 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089565061 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081007918 seconds)
  done (took 1.533340835 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149619548 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100243002 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138734258 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315294737 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131599326 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.272418449 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126743557 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124655281 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10736733 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121207176 seconds)
  done (took 2.944585737 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096784504 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160227857 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295538303 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113239433 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.070432586 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.082188172 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115322244 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077215224 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075534976 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074941148 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.074966194 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075155273 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.092621836 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071815549 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.0721139 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072290674 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095150692 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070841973 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070990079 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.071141692 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09533822 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065110857 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071941317 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071081375 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073640253 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073087543 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066089532 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065018098 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.071305489 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071215113 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073764691 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.078886947 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074462688 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098428832 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068837962 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099693391 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069985293 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069050294 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070813474 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069562884 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07233255 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072933469 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073514289 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071731161 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065707006 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.070564707 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066262254 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065500227 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074782044 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065473799 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.074336894 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073501092 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09877079 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065821052 seconds)
  done (took 5.82086802 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103295747 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102385462 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067315195 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108869708 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099619768 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065689526 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100418731 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094458974 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102585984 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06451666 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063966027 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064261417 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073069299 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075716113 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11109027 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103264112 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067270168 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065992361 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103166961 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10281179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063841608 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095808061 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092710185 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102360872 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063494802 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064859597 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063680412 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063863394 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070887627 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072552098 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06401558 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072774766 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.077649607 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072121601 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063025586 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063377049 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063524519 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.072592561 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073188181 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07281559 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07145874 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063300581 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063605643 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064374362 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064712712 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063186336 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071372463 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07241599 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.071624531 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064144775 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064185426 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063820626 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064227401 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071985757 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070850937 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072971795 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072441879 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063572178 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063773632 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065962153 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073591574 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072790355 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072916647 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064531844 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073924625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063459868 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073977808 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077803215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063461981 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064342806 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063344093 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063467051 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064146954 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07130256 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.071139622 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064094845 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063481046 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063260132 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.073352416 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071088403 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063256866 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070648111 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062718074 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06365467 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064059543 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064097718 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.070644979 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.072360092 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063717001 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063250477 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063205107 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063143049 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062625878 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.069711968 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071334329 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071491268 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070920248 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064118182 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07077128 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.070159592 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063207628 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.069671328 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062628088 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.062800264 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06256509 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069943733 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.069097319 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071748211 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062561277 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06261773 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.070204414 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.206071594 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065339 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072651149 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074918297 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073018159 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063945426 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077170516 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064278598 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073344374 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0644203 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07380971 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064620183 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072574303 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064093578 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063716526 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064262662 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.072536236 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064556641 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064127683 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064187003 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064188348 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.072349519 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075592841 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064373159 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072413051 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071751265 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064708697 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071879575 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064784324 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072942939 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063960734 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064536021 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063059953 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074528516 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063782062 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063764914 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064490861 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073393623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06408537 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07378751 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070993568 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063571648 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077836468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074461026 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071167218 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.074350612 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064838505 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064005954 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063624675 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063874824 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.071440752 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072724191 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064443882 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063830149 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.071058927 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076634176 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065118044 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073539839 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073552017 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0741498 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066129762 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06565124 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075987654 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0740117 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071731938 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071662484 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072510958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063666791 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071039041 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071819461 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063702942 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077870893 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063926941 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.07584939 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071983193 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07106866 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072061248 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073243062 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073886614 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073786277 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076280314 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063325526 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063525701 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071820328 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063543729 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063822624 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071676334 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064472826 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064243699 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076105715 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063925387 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07341187 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063451224 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.073083688 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06437354 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065506454 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078673232 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063980323 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063719376 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070740401 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.062700047 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070157483 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072804135 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069490438 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062454312 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063024634 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070160464 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070741914 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062365342 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.062301002 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063007833 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.069044483 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068653121 seconds)
  done (took 17.266131943 seconds)
done (took 36.126541825 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.201603362 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153828488 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186539012 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111047822 seconds)
  done (took 2.117015029 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094341744 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093437561 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.07526985 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060748983 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.080536557 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060789319 seconds)
  done (took 1.873013653 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273640799 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193855041 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171600827 seconds)
  done (took 2.04000351 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210088155 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189821024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.44990207 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283234979 seconds)
  done (took 2.634129894 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.128291592 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.077166461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06011056 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071009563 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110150242 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142389105 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087186457 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111444608 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070839118 seconds)
  done (took 2.321634732 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130004431 seconds)
done (took 12.552256086 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.101021329 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106420986 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067235306 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063352244 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061046714 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080048856 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11208383 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072310297 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.201904674 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071147121 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.060711687 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187808501 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.20009135 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072901718 seconds)
    (15/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.153239412 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.219864176 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07056824 seconds)
    (18/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.40922261 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070314482 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072120787 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.201137686 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070073448 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173207431 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.083905896 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207915826 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142653727 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071078277 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172808984 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.179701765 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070650688 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.09775578 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.096281679 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.165521402 seconds)
    (34/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070644224 seconds)
    (35/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.071454967 seconds)
    (36/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.160710326 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111875169 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067906944 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069050421 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068073516 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.234097287 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062392836 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090337356 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084567146 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069178967 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.216727979 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161098536 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069347603 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.166676312 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060260378 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196445688 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155496642 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07376665 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074222792 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.147852519 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085931506 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161676297 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20348772 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070537601 seconds)
    (60/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.17365763 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077251404 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.061724109 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071267671 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130161358 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 0.125995041 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064403998 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.059610614 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196086503 seconds)
    (69/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.071414477 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.059791715 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10713785 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.060078282 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.068970187 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086104932 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.059197984 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.059949596 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.058886111 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066572426 seconds)
    (79/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108062621 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.081793865 seconds)
    (81/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.195366122 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.155214703 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.223553362 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063561516 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124907517 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.135868002 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063019786 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115896126 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136364359 seconds)
    (90/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074152213 seconds)
    (91/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074179313 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129967218 seconds)
    (93/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.204319353 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190838334 seconds)
    (95/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136078823 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060313987 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071706159 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062395388 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115271903 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.0610103 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070224073 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.061036282 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18014181 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061183695 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066033947 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067332086 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09185055 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081070894 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090317247 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.183969002 seconds)
    (111/309) benchmarking ("sort", Int8, false)...
    done (took 0.165095625 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06185472 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.128572645 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134701214 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121662121 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.066036633 seconds)
    (117/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069383928 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077087452 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15271098 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060499567 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061989479 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072112494 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076218984 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070645527 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070045865 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.132475092 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211984416 seconds)
    (128/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062059944 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09096976 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06113311 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070183728 seconds)
    (132/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.153813549 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.06901314 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070818878 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149974019 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.067402077 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073717323 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061417929 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061795221 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.128042491 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 0.132044372 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060595754 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06037544 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071217581 seconds)
    (145/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.155312068 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.134432181 seconds)
    (147/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060845464 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070236195 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.108021175 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069344004 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.076226609 seconds)
    (152/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.200221572 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073933317 seconds)
    (154/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062112129 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151344426 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.074503891 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061764746 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059832737 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113688658 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.07710017 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061078942 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060520844 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060369616 seconds)
    (164/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.060753025 seconds)
    (165/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061477763 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11766369 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13793904 seconds)
    (168/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.077174887 seconds)
    (169/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.060373842 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117064381 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211027932 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196555913 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060874334 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086515898 seconds)
    (175/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069261039 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059649943 seconds)
    (177/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.20734951 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059455136 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132257852 seconds)
    (180/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.060471185 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060452794 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.061332844 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.059649066 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065305539 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.059637394 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061761569 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.16035506 seconds)
    (188/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.15647181 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.217451239 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063053103 seconds)
    (191/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065047623 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062607251 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13726054 seconds)
    (194/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062046995 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064864 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068493756 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06195364 seconds)
    (198/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.062072622 seconds)
    (199/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06198565 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083277805 seconds)
    (201/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.060854497 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060930506 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08651416 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.082735203 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.061358657 seconds)
    (206/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.061645796 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.159806794 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060845325 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072967335 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085456405 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068343624 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.063211615 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074181086 seconds)
    (214/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.06223275 seconds)
    (215/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063052667 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06804314 seconds)
    (217/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063252447 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061333494 seconds)
    (219/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149267963 seconds)
    (220/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061389288 seconds)
    (221/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132244355 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072726399 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07285014 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16346076 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135412177 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069354961 seconds)
    (227/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069909226 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062640251 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155792543 seconds)
    (230/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.060913424 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069681993 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082078703 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061861519 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063006501 seconds)
    (235/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.06253403 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061840363 seconds)
    (237/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068162825 seconds)
    (238/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061167228 seconds)
    (239/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.062391874 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068881023 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.061888972 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.063008385 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.060882149 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141136831 seconds)
    (245/309) benchmarking ("sort", BigInt, false)...
    done (took 0.235634277 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060635089 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065020623 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135163077 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.060884208 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0610818 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.060904443 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065567803 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061269799 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061906903 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.135207659 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075555601 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061094991 seconds)
    (258/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069356479 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.063518474 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060243657 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121202335 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069180515 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069222649 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.060223319 seconds)
    (265/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063917609 seconds)
    (266/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075967308 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062044038 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.062155197 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060855772 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061888812 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069842921 seconds)
    (272/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073446738 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086867428 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.067664144 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06006657 seconds)
    (276/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.060652914 seconds)
    (277/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115561518 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061430193 seconds)
    (279/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065294751 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069314571 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.061710321 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06141278 seconds)
    (283/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067744886 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.067963492 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.125340102 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061501745 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064296966 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086009648 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083768991 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060337666 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061858005 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061810868 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072115314 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.061339806 seconds)
    (295/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.065405916 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.166123847 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06159495 seconds)
    (298/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.08891745 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.062532643 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.067338389 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06055075 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.131532154 seconds)
    (303/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.061235133 seconds)
    (304/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061095329 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060391846 seconds)
    (306/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.060179499 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.071445358 seconds)
    (308/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.060670885 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.061222193 seconds)
  done (took 31.141656703 seconds)
done (took 32.563807203 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083269954 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086520082 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069647185 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081501608 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077245922 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093183945 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070062889 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074574043 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.076995488 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07562552 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.075136307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067655154 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070873761 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.071325503 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069505406 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083819248 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.075062485 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069852718 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069776141 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061038802 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069380829 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061155382 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060680575 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067859117 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072672305 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068263613 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071908582 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071930034 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062939466 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063471327 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067363992 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071870401 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064857492 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076095413 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071894411 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071695011 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073654804 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075823235 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06256058 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063320247 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072932996 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062557763 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070829893 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069774199 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067705981 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070002652 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070465919 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.073505167 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084225145 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06532301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072002229 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072284283 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073301652 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067877043 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068237803 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069922497 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067281167 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083315776 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070408426 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065081608 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070899352 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070515527 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070270895 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069251297 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069192083 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071711467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074350418 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068096179 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071560601 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070466322 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062294573 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071386888 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068077412 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06293869 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07454021 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075638047 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062179253 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067111882 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071259134 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071671057 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062891326 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065621874 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.060378691 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066212412 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064809322 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066833353 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066283578 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068324135 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.060832149 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069736383 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.069014327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069932432 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060482469 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074260424 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06133719 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067587371 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061441225 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061395819 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060902738 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066498365 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.060761946 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06480907 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069684862 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061734274 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067516802 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076379837 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062680534 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070778884 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062618913 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062374883 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073789749 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07234539 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062907284 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0664801 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.060924242 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067225513 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061222851 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060999132 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062239003 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062744692 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067054957 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0628356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06744864 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068052622 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076350994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06249604 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067373403 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065837819 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060437812 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067421326 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061021081 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060111577 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.05979294 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07310638 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063416703 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060651612 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065810298 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063789056 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068103898 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059052125 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068764506 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066008682 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205090802 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068689885 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061261975 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072856898 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065696639 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065019424 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060940449 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061345876 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060375872 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.060839686 seconds)
done (took 12.081943683 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061810551 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103392313 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069653733 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077881848 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073423971 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062338717 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066089678 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079451058 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064414592 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080428954 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082206116 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081294957 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089639933 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.0606734 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061520437 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062331097 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060164025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.067478635 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076971752 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.081930658 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.089990807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06155624 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070704534 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076403158 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072510138 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080382111 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062595771 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062294363 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063677022 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.07706466 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08419438 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061075171 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062381036 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076682464 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075393459 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069987454 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062243128 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066006737 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06190457 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061217402 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.062753517 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076027637 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065443401 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070009245 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062429604 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.062568751 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062143072 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065450677 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.072770587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065848006 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070315221 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075831936 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065127642 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061574419 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060716801 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066099272 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061720728 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062252395 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062139904 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061971216 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061633686 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063527719 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.06227933 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062553728 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065027521 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064965109 seconds)
  done (took 6.031986231 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079572821 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089579379 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.07820439 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078029076 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.060907029 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061952427 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061756357 seconds)
  done (took 2.032991927 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.061719844 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074774525 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078165442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077495304 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07111365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079561533 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062059397 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091139478 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061052701 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073987419 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107125646 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078692702 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065052358 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073431031 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061788374 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.07010107 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.061575196 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069983374 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071095237 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078318105 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06670114 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088282502 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075130022 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062319463 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082779118 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067056835 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.061586794 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062138932 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063183512 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063405519 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063248217 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.100587873 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067058877 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076010833 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063582906 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062179947 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068197735 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065381027 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065468377 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.068438971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.068411662 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063567132 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061310217 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063418839 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064892738 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066150318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060858868 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063805133 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063229052 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074386501 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.060916222 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066566123 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065670538 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067130392 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068146012 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067066257 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070172234 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063413679 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07398959 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069911328 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063438338 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071401381 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.0707015 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.068233473 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.070888607 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.06615164 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067206644 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069130475 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063532254 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.06461905 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063768844 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070786957 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062264041 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.064126177 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065440562 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064246529 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066206813 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079618019 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079095097 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074612699 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.063976486 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063719757 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066668946 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078264131 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067201673 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063306384 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065308981 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061561762 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06631456 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063700202 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068607928 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063647753 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070049467 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064698216 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066150312 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071198706 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061479581 seconds)
  done (took 8.183990641 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06469113 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063187985 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064561902 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063055067 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063438288 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063967204 seconds)
  done (took 1.934556669 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085794165 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063114476 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075710111 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063202644 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.09708994 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070446938 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070737435 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071881355 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075114943 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075230695 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07063004 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073249877 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.0697271 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064904145 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070229363 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063895946 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070029202 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066126437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074053766 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064984638 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076533259 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064286747 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064860799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074959617 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.06593645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063936764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063086218 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07416988 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073813899 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074065736 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064941367 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065726699 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069990685 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071327541 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070677895 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07030625 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063146365 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068395556 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065056058 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068034983 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072667882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064648859 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06524956 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068429099 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071717511 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070494026 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068491384 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066382343 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069813433 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068427685 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.06860821 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063749045 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065585854 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068304941 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070359252 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071403111 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.06850923 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069968961 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064524424 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070432838 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.063129106 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.066033951 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071646402 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065852027 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069292458 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068650131 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070448486 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064939109 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064646778 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062958656 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.06925664 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062912099 seconds)
  done (took 6.496356648 seconds)
done (took 26.186722039 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.994189418 seconds)
  done (took 2.496202523 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.557922336 seconds)
  done (took 2.096840912 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.711632344 seconds)
  done (took 8.247224493 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.297351939 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.340997044 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712203093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129209892 seconds)
  done (took 3.050592941 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.711049181 seconds)
  done (took 2.257600297 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228969992 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219676901 seconds)
  done (took 2.006318671 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343339308 seconds)
  done (took 1.881475464 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.070038569 seconds)
  done (took 2.606364295 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.228419825 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155410265 seconds)
  done (took 1.927233834 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444956018 seconds)
  done (took 1.983436732 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.227809011 seconds)
  done (took 5.770104927 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232845686 seconds)
  done (took 1.814780002 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228976407 seconds)
  done (took 1.774647782 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.73135387 seconds)
  done (took 3.270470138 seconds)
done (took 42.729044628 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078927642 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080800718 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080992008 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076659156 seconds)
  done (took 1.834103526 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070192156 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067244026 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069897376 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070261212 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067790891 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069181412 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068867496 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065621377 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067807825 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.066009658 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06495903 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.066438345 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068661321 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065822129 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069020698 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069894445 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065644542 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066000678 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069082573 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.06592643 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068759158 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066037949 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06427668 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065565966 seconds)
  done (took 3.1590141 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07463905 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068625825 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070471631 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067505941 seconds)
  done (took 1.829518221 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072215336 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082494462 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083798215 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089427968 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072217532 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072666993 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080780281 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081657413 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062065591 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084593468 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063946243 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062580463 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062800977 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083083058 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.0802959 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059414648 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061248857 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.072932509 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072311188 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074529308 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063671541 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061699326 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072424765 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072295298 seconds)
  done (took 3.292194487 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076307853 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061777082 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075838239 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088325394 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089429236 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061711033 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076686995 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090026116 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136761683 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06189991 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067444182 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061985117 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10242674 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0617964 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077871724 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107159399 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110708868 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065348155 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094791653 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06215562 seconds)
  done (took 3.183749163 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073042214 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065350615 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065649138 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061182561 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072877603 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069128917 seconds)
  done (took 1.963567973 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064477424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063417985 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.062984369 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0627418 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068033881 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062862691 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061495918 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06326644 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063401773 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063404094 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062726572 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06190305 seconds)
  done (took 2.309589699 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157531544 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064654529 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065867881 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064106495 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067711784 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062465169 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076998106 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064409277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08039412 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062369055 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062471162 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065109709 seconds)
  done (took 2.444286636 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097331202 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126823316 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093580461 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069509588 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166692232 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09096713 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.08688662 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.119454678 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090675985 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.066340702 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090495104 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1321835 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092409626 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.09551465 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078866286 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122158554 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106582865 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085436889 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112679805 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080726736 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067912132 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129765465 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067602767 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089718751 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098370914 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095248135 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106074616 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129520783 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080944861 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086578481 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079463225 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071154149 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10305156 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081379601 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094030697 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09048438 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095392181 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081945048 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08361814 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116981545 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150570405 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097653267 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097167166 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131085583 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075887453 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.104939678 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078227117 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096579768 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101237235 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090538289 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072650213 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089286705 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103654882 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099391714 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07859358 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077988487 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113391024 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094613178 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092659738 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076491822 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103058521 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.083040439 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103187482 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262761918 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138073114 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098652984 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134436155 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120451742 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092499291 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.086462444 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.08843306 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073390112 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107901128 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094947993 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134074934 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106200617 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096574079 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093116745 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079782685 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104554264 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110754929 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091093548 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091457939 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143267237 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105825789 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08758685 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091809588 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.139096035 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069016216 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144259826 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086159591 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117362013 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094136104 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135702791 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08948071 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080744933 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102820257 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100656505 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08652933 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099972329 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081571424 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111328251 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089704043 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098235399 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078735592 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088091056 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084488259 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094465881 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072302458 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101802952 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113385537 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111302408 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07172231 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105824466 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083220232 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073972763 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090037068 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134595706 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07991541 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071705336 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151102904 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089353993 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.114814457 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106932572 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079551458 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263134614 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135140188 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09028882 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087152178 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074221136 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150842151 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073113229 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115644241 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078886366 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099324436 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102869265 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129122657 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136125139 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092933437 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075644134 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089279368 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104251848 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084145598 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082824162 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074319397 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106575413 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12268317 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.097512008 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078276865 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089939792 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066769065 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111218943 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073929742 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081485215 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093124826 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.085247742 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087556859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140114408 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082371834 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106111231 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095226254 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064628021 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089122255 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15098678 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080368883 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108343364 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114249336 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081200694 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065476269 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.093737269 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070598955 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106529341 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.090406979 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104206282 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076083333 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104427179 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.066148561 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07164716 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127382007 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099056574 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086410355 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12939399 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101482039 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085898791 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102521212 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097584518 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09576758 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100452106 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.258475498 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10421577 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072640575 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126508475 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089436 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075327857 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084684278 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077209889 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075390768 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097209587 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112614095 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086447315 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098953661 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10162657 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088516861 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107702765 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088305209 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077880569 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132281018 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07443363 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072259994 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085498914 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103485895 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086428337 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.131301211 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.077218913 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133357453 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089765474 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078500041 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112851658 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066894363 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067769777 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079544244 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092716365 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113843753 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076832164 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075412332 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116121927 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130112153 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095830209 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101308861 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066925896 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088605423 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133064267 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112160991 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078939786 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107607003 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082123533 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12727365 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094181594 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118333156 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104224864 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108438334 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089336573 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078718853 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07124059 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085284126 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108941218 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08378786 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079888059 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065118925 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071726543 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089700459 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088260695 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108832119 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084962075 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131182599 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070893533 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100824573 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103259969 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101109061 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085015026 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089738323 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089196311 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087191937 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086572184 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087427631 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.069397094 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119981013 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097286131 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07385468 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083936189 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090158055 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100353195 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099610396 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100617761 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086912512 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099679353 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11346194 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091450143 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0757975 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078285039 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.084580825 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078683866 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074890506 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.096120964 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102693376 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091290589 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100956334 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.089898174 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.088147448 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098846066 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085715571 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083112276 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.109750856 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141384063 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.095753051 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097100786 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078854674 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097752596 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096383845 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104586939 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.101900649 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101162946 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.065973252 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.069606285 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.066433194 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098735104 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073587707 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107143456 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071639466 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099527348 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088984465 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074991234 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.063027621 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095317544 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086028987 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.076220524 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11246144 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.106334214 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.068177771 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083586671 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098812352 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077613419 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114118078 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.094634307 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094042445 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.06811308 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.084523983 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.068948792 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100786287 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.094865311 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.071242173 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.070997682 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.06628738 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098927562 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07758875 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099882199 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081357834 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092830583 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111225473 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120940991 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080511504 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089427547 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107719485 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10545161 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.076884581 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104561384 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124657116 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.110160313 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.074490785 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.077745682 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097995832 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097196236 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094281013 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.070125891 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074448507 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100959873 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104968885 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.064467785 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078408891 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.064955812 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.077822033 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102902832 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087857447 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.075963147 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107474736 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068682503 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098969477 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08738021 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110147824 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111072868 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132032537 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089418345 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078537248 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071015409 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114634894 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.065888084 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107220994 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102812468 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081805772 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.064001893 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078156851 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.08854911 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.620189765 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101804007 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07287483 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129479087 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082334781 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110732503 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081110505 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.112366973 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084790512 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097744946 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08508666 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.494271579 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082908988 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110482328 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.18073686 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111803478 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109647645 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074831872 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085030487 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074217539 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079829652 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082663776 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088551334 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110204302 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085061602 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106618044 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079959354 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107886795 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090911126 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088927501 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099362439 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080779328 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139704719 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087061847 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123245666 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107366301 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078679332 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074592039 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086327401 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101605776 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08209524 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094758921 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078416551 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076474468 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152239704 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102473865 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084868282 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102539852 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091089145 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086444538 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091206654 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117532942 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110409733 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072016848 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086847717 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103262542 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078537796 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074167155 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096292085 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068174077 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088278522 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09803043 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095398714 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088962179 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102459575 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077162084 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085831806 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109060477 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084342522 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075781872 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07511373 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074494167 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.074738103 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101830151 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106852971 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113306879 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108019522 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089753866 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092202653 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.077550234 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.379269615 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079054352 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094771176 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103153269 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074443565 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.128774003 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086512643 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086821112 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094748296 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098943761 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149126902 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07214319 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106994744 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091373228 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107620529 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084879052 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104516153 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093483926 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09028395 seconds)
  done (took 48.776523965 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10714747 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.169359889 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152748986 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078753586 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093214252 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116553986 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206443819 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194196461 seconds)
  done (took 2.89959916 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067109373 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078712993 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100972434 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081402041 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06298694 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066377872 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.20346712 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078537443 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063093874 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10010601 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073902424 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064687306 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415101779 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062077015 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06345264 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07239001 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063656988 seconds)
  done (took 3.450378729 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366011064 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.606110923 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.341867225 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071693071 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.025842724 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085767141 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.343654848 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133221005 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077972719 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55705835 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367945378 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128606428 seconds)
  done (took 18.848598192 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072713199 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071157218 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075606022 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.075599376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071117435 seconds)
  done (took 2.101560387 seconds)
done (took 97.649950986 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077585678 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163944609 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064344912 seconds)
  done (took 1.995878495 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080434086 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077717007 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077587606 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075606546 seconds)
  done (took 2.050799235 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070274792 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072823408 seconds)
  done (took 1.878934615 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243581591 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161036935 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089307614 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079726547 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076887899 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077297058 seconds)
  done (took 1.97760767 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068571248 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068076223 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068726702 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069602026 seconds)
  done (took 2.007274528 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064442512 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062604043 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064575839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0679133 seconds)
  done (took 1.993789225 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.080087421 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080407608 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075354023 seconds)
  done (took 1.970883108 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.091162144 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092977779 seconds)
  done (took 1.91962696 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077222119 seconds)
  done (took 1.813170725 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.085752593 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095383338 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149004745 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109816863 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149861343 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132853713 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.07502248 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076396707 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070726905 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.069145166 seconds)
  done (took 2.74900099 seconds)
done (took 22.662904694 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074883222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359753351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355603321 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082219702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667604661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353013464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.965188187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087704766 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.095036538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064750998 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08068556 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645324803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955024256 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322628304 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943210653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317920938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645741229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064768839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063195369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065033922 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950476862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063891559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06622892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064602554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649265336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403334854 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065427201 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320458666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063598479 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0666376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351899646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065318856 seconds)
  done (took 16.053649255 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065768924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116724225 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069026918 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080003417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066815997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065282058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067030324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064461396 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105385656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064712852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080867099 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064168213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068389854 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066448023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084379585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064908105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066292167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065102474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064960326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067824932 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082192735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064492453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065013622 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064931761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064887288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07740378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065892255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0639148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064262259 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066984359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067545812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065788292 seconds)
  done (took 4.022886921 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117609845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12336455 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069246228 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102845672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115477562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066141179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145585625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087735222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109937266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064974488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080996983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066713273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098646558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065753229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083968763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064253738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06569705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064963146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064962955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066266899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083432074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064578135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06606758 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065581762 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066222206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079611073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066358228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06535012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065275308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067630818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069469128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066252427 seconds)
  done (took 4.30421699 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066171124 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069005771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.076629877 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077332354 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063759342 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066020579 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066997502 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063537188 seconds)
  done (took 2.30418167 seconds)
done (took 28.437179627 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.0747514 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063984383 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067704028 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084239493 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070151364 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066964331 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061152863 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07064858 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067743728 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068393017 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069587264 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063400688 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067350799 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06225842 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069348523 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063242375 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.06967707 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.067187028 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067937872 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068770636 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065589632 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069463646 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071014752 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067930001 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067976679 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.068245141 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.072524589 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068567533 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063893076 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06637069 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065309147 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073667042 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069602526 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.070405185 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063167004 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063129491 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067612865 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065285035 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069280114 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072583839 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065127628 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074115775 seconds)
  done (took 4.586481903 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079855227 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084632777 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078159239 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077187365 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095603576 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078748705 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082401769 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074650943 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072864454 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08124831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069102169 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075931785 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074146433 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068248955 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072362875 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070323095 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074988879 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069777129 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073610998 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073853486 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082521835 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06786157 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075358154 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07402549 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069813374 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075585253 seconds)
  done (took 3.735750204 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069217094 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080510748 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0877289 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144005151 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108058409 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075953304 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076751892 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090365633 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093560652 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064145797 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067690919 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088902226 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088226249 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070314175 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104592609 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080299907 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079493893 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065854251 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070865481 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092810488 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084658011 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081842404 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090865411 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08062031 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06353741 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066587097 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070433294 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078414112 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071207451 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075561402 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068384726 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067400488 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064991232 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075115319 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067982623 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063155035 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087823123 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075872725 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076907503 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105980365 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072599766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065322494 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091643637 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12435315 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063035228 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067342501 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066967382 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075103489 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064627117 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091722206 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077595251 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063215924 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.064073622 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064509355 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064606359 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078989012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068549727 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065152756 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074393726 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069456919 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085111673 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068515592 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082524405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063512108 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073905612 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064342299 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064470061 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06243244 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093735856 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069871478 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11027578 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064260641 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062168952 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074435222 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073440712 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069480557 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063013937 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080376632 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073835324 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066568252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074090036 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066092156 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.066290086 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094758697 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063545739 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062788653 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062312269 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.066541046 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066053777 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063991773 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076784267 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.062583375 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.0665504 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077506034 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063254769 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063891312 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.06681654 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06525849 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06246782 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075822406 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067406892 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064685866 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074638436 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064056054 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066136896 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076329603 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070117673 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062877358 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065087281 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.066416338 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064380658 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067200814 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066058692 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065774742 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07038127 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070366003 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068853868 seconds)
  done (took 10.440414733 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157506939 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.146649344 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06562643 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141365374 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.071443747 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068883399 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14108238 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.083327995 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06454928 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064497756 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063526385 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.09287803 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089239559 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.099125473 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068855073 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06400446 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087291395 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095976704 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143714236 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139832983 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087468366 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071078877 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066171001 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065152216 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06559104 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072278626 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079452327 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071849259 seconds)
  done (took 4.328137869 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.0730106 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087883083 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067885311 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074627381 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083007058 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064937095 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065615921 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065576615 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078401689 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.073123098 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064346441 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.068318202 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067370638 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066298231 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064589821 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070314846 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070415468 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063145585 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067674123 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068814175 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073695008 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088796183 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068288568 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063830625 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066252278 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063566282 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072503689 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076348403 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064073012 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.079106459 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062153595 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068486204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077546656 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064767201 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064031728 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064745803 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06397181 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064161724 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06428559 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062572465 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062722826 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068986787 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062732723 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072293501 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077539857 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070612392 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066295013 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066877946 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066693246 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061651022 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.06694548 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066407005 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065943707 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071283706 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067643774 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066831477 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067237095 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088633102 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070046052 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063310101 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063194613 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062350542 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066385606 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073881569 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079932678 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066485734 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062638432 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064413436 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069419563 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077580558 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063154994 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068384398 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061636533 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064764297 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066376556 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066341701 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.064769354 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062477634 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063668421 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063720242 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064272961 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06364321 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063771701 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066096549 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062313578 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062867412 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064349867 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065681438 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072616903 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063060642 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067675234 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064856529 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062901144 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066200166 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069254564 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066350521 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.076885164 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075092857 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064426617 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062369239 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077201613 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.066553931 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063522934 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069674636 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.06785847 seconds)
  done (took 8.951232902 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086342515 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065459467 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080425515 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086600503 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074030422 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069598146 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074924804 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06491466 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080039992 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064179289 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072721962 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062631303 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075049792 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073931064 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065900398 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074106817 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.065978083 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080803189 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078521722 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062760728 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072818399 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076027966 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075585924 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077992428 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077235702 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079113925 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075592581 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066587735 seconds)
  done (took 3.870108078 seconds)
done (took 37.658471694 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.825933002 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.010405251 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.831341588 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.026033769 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.01299487 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.860911921 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.937176303 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.822624431 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.019677558 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.881758839 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.22515474 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.347889575 seconds)
done (took 66.627129001 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.877698407 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.982603034 seconds)
    (2/2) benchmarking "String"...
    done (took 2.085833305 seconds)
  done (took 5.852919873 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.073088842 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.670428103 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.084900125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.821357097 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.826337679 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.270468052 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.607783546 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272254384 seconds)
  done (took 31.314865052 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.965210186 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.053607461 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.497845474 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.540017362 seconds)
  done (took 15.864872522 seconds)
done (took 64.837035573 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.873504775 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.82382959 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.849147865 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.870155314 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.820724082 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.822381516 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.828117975 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.824785789 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.834445982 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.844609154 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.82301556 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.837687504 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.822915917 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.853588744 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.516115149 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.870460608 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.843434366 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.822495082 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.827397166 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.853977118 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.826091764 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.049732157 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.345485932 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.024649684 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.444035717 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.455479517 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.976398983 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.284216924 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.842485113 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.825596806 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.883587402 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.341050556 seconds)
  done (took 206.52183134 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.824859495 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.62227727 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.716636394 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.830838151 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.095400201 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.002221852 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.927065193 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.20976743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.830603978 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.847680646 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.966965507 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.826380923 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.997632507 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.76602359 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.86072682 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.915782583 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.960500895 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.01337595 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.863680249 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.976359804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.830844487 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.787196253 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.737036092 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.953466085 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.866353167 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.860679262 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.826831423 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.837210553 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.010169304 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.939455864 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.853608417 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.843164765 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.998331781 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.695067404 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.845448594 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.845659816 seconds)
  done (took 170.548983443 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.016639892 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.832457854 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.824810481 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.881180833 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.949130633 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.828790758 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.49889006 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.835544883 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.222281299 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.831048001 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.826545641 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.825790792 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.82886635 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.838128779 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.918126568 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.831007381 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.843827928 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.830280707 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.854715187 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.827592011 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.826224372 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.825411946 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.826420734 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.826346468 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.825949712 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.826495861 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.351213771 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.067574885 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.829400846 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.826769743 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.35585503 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.839750322 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.996373842 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.831680575 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.91861444 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.883813908 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.945533917 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.827565888 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.046010986 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.913107344 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.828267047 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.826598026 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.891627834 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.840439775 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.829981916 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.830506275 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.834196178 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.893200838 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.081307108 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.829254569 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.949371433 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.325335941 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.829063059 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.829121595 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.828513132 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.828985491 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.437965339 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.829661668 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.82961426 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.828854231 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.832987322 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.833138392 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.827250393 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.830654615 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.214668697 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.899473491 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.888924171 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.514968264 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.831155798 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.652207667 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.952441107 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.828679027 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.829172624 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.829033801 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.830629274 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.829208402 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.830882411 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.954863133 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.837649625 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.944190819 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.909617165 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.958321863 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.832218446 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.840276197 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.666386976 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.898170075 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.867116629 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.654370956 seconds)
    (88/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.829219668 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.201760508 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.830289384 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.603688657 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.831083526 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.829138531 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.841792538 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.830292711 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.830389646 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.831769466 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.914179849 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.831450806 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.830546803 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.958838298 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.579230216 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.371480271 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.834220927 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.831842131 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.838547304 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.912781532 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.957918566 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.834034588 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.89709051 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.836838429 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.831832046 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.931313134 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.831239364 seconds)
  done (took 407.804183025 seconds)
done (took 788.714722146 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.441654669 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.411761264 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.49877906 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.428917542 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.399790248 seconds)
  done (took 13.951515813 seconds)
done (took 15.7231595 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.847292816 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.837120835 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.889527653 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.914730788 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.847457043 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.852380251 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.913707014 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.851088354 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.880762761 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.886279985 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.916462828 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.916562933 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.857989165 seconds)
  done (took 26.181180823 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.8407511 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.989268876 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.067478022 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.871427191 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.841942677 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.077070666 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.896023464 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.975941043 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.98902881 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.088165008 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.072522788 seconds)
  done (took 23.481734063 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.840660116 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.990600605 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.066771713 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.875186727 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.843109136 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.06724859 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.903057354 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.982323053 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.990961224 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.076851019 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.078897138 seconds)
  done (took 23.493563287 seconds)
done (took 74.927844557 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.835177447 seconds)
  done (took 3.607625973 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.855100854 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.000726573 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.837895204 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.83641321 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.834938232 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.836902759 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.836386461 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.837697551 seconds)
  done (took 16.646915728 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.835274817 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.83503303 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.835416323 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.835304144 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.835305311 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.835175681 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.835401313 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.835734193 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.836675717 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.834502871 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.836423997 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.837846589 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.83617333 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.837051756 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.837833296 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.837152814 seconds)
  done (took 31.148830779 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.838622507 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.837349782 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.835361473 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.837978765 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.837189788 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.837525345 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.838047702 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.836497971 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.837548412 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.83679347 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.837694186 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.837442159 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.837385509 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.837554788 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.837513804 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.838045286 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.836389466 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.83721943 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.842896089 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.837309422 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.838405422 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.837988042 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.83690273 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.838235106 seconds)
  done (took 45.878352078 seconds)
done (took 99.063445294 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.601077631 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.044548447 seconds)
  done (took 10.420320155 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.840794573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.841722519 seconds)
  done (took 5.463111748 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.840557936 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.840895083 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.841047725 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.843201611 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.842883253 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.843251645 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.842161688 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.843531364 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.843828792 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.844666164 seconds)
  done (took 20.201981496 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.841531348 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.840893608 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.840329063 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.843170949 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.840597898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.841044794 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.841476076 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.841595507 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.841830123 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.842041669 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.841996163 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.84103131 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.841193403 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.841632315 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.842624952 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.842218886 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.841512045 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.842552861 seconds)
  done (took 34.926756437 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.842118444 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.842705552 seconds)
  done (took 5.462912639 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.840755888 seconds)
    (2/7) benchmarking "second"...
    done (took 1.842039513 seconds)
    (3/7) benchmarking "month"...
    done (took 1.841070686 seconds)
    (4/7) benchmarking "year"...
    done (took 1.841202629 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.842217819 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.841322833 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.841337944 seconds)
  done (took 14.668346151 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.843200855 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.000682562 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.062455093 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.703985335 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.843330648 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.845541265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.201511662 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.845405845 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.846637851 seconds)
  done (took 20.970928213 seconds)
done (took 113.890778636 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.705275452 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.844465646 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.102253708 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.940490234 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.864086842 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.18142687 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.849669635 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.110445663 seconds)
done (took 43.380340754 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.848410205 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.84198552 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.873291169 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.874023307 seconds)
  done (took 22.371067261 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.84227212 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.181136618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.880677725 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.726012417 seconds)
  done (took 22.42485788 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.220984902 seconds)
    (2/2) benchmarking "read"...
    done (took 2.184527363 seconds)
  done (took 6.188058897 seconds)
done (took 59.616264088 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840446416 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.838581829 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.839847624 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.839405735 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.840698892 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.839843988 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.840966382 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.841045038 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.839084192 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.839455675 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.840430281 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.841315368 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840796744 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840580047 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840786217 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840332934 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.841766566 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840996916 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841819985 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.842363207 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.841186768 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841531253 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.841916265 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.844126193 seconds)
  done (took 45.956075345 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.842260255 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.841998309 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.842058806 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.841281082 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.841868228 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.842729935 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.842094305 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.841259556 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.841871027 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.841397413 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841561153 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.841074601 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.842652154 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.842340203 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843323326 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.84286151 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.841945568 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84368902 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843451506 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.842899702 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.844204009 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843785086 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.842612039 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.842850187 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.842150589 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.843889622 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.842944137 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.845294353 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843198161 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.843811798 seconds)
  done (took 57.059435062 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.84259485 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.846630368 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.843575374 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.842429407 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.843916216 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.844423052 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.844075235 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.845148689 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.843913908 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.843571363 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.843795401 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.844029411 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.846351424 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.843501976 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.845105571 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.844742013 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.844790683 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.844699092 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.846587792 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.84548617 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.844841703 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.845585857 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.84513382 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847194667 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.845058937 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.84549864 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.844623279 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.8462317 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.847340644 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.845817698 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.845998937 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.845849959 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.844744448 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.845763144 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.846563449 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.844918466 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.845104323 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.84560878 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.84443898 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.847906856 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.845686864 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.845570474 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.845323326 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.845920924 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.846736762 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.848222303 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.846462809 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.846609208 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.847713673 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.846884109 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.849484717 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.84741877 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.846853092 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.846821403 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.848831556 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.847638148 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.849458889 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.84994678 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.847788844 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.847293554 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.846588169 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.845558777 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.847399258 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.847155918 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.847942638 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.849013301 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.848548185 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.84745428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.848424536 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.848451907 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.848899446 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.847407326 seconds)
  done (took 134.703582805 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.848076785 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.848497087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.84792237 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.846922337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848265642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.849341337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.848270957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849417077 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848323331 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847965621 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848754425 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.848720821 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847716659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848862978 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847785407 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.848568642 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.847609614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.84887478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.848180775 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848808171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848791386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.84950721 seconds)
  done (took 42.449840994 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849141882 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.848561847 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.849465373 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848656751 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.849698264 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850081423 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.84929885 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.850291565 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84850896 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84885882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850607857 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850394337 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.8497394 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849161062 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849751685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850271211 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850568429 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.850102249 seconds)
  done (took 35.078521173 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.850589852 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.851726632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.849991755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.850106605 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.850130899 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.850985754 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850382774 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.851115128 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.850987846 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.85109878 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.850415314 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850142756 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.850911939 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851111415 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851037963 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.852578012 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.851131605 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850504402 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852347709 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.850509954 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851495648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851702619 seconds)
  done (took 42.507676096 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850317367 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851355678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.851507299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.851586504 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.85200851 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.85319919 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.851517219 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.85176544 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.852216541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.850672643 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852468995 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.851371207 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.851062381 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.852327295 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.852419539 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852699694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.853011187 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853452735 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855069356 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.853468496 seconds)
  done (took 38.830780105 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854349656 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855219 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.855144788 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854338564 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854350384 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.854145603 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855201889 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.855527154 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855865567 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855963064 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855148687 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85498857 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855008281 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854947623 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.855626092 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855710038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856716168 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855166987 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855349884 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855826776 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.855792379 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855902106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855891928 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.856591947 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856914053 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857563089 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857504761 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856821964 seconds)
  done (took 53.746350849 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853027305 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854953836 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.853751107 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.854676911 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.854561345 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.854885691 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.854332589 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.85584422 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.853283426 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.854121218 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.854327055 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.854736621 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.854166848 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.853812427 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.85494081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.855272358 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855349512 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.854276107 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855034541 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854201124 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.85645209 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855288645 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.855652498 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856608666 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855491288 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.85496945 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854720541 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855783033 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8566969 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85439017 seconds)
  done (took 57.436077224 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.87533529 seconds)
    (2/2) benchmarking "in"...
    done (took 1.875309587 seconds)
  done (took 5.540722547 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.855608396 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85641539 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.854385967 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.855393904 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.854230044 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.856308396 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.855469718 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856054646 seconds)
  done (took 16.635166547 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.855818581 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.861718338 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.854411894 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.856167713 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.855188065 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.866957915 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.857510156 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.859567368 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.862260017 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.85886259 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.861529915 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.862089199 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.863503625 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.862661797 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.856973447 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.857573786 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860056685 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.862590978 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.860364281 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.855568848 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.861813764 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.855917784 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.857374522 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.857380974 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.856540725 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.861661268 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.869760277 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.861013406 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.86166938 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.858010331 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.867222357 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.858196529 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.857116164 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860137447 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.858928237 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.858001709 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.867010902 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.858178798 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.858175789 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.857721725 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.864069086 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.862985961 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.862813797 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.86798398 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.859025811 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.85908516 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.858262964 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.858315354 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.860808836 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.864117652 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.866123147 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.861342033 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.85866309 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.858281691 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.864188194 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.859217219 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.859314953 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.863302339 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868940953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.869058592 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.864495076 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.879227124 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.870547167 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.860707759 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.859100004 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871073336 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.880951061 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.865182627 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.864729356 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.859120775 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869320999 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.860051097 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.860485084 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.860322321 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873714246 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.867651176 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.860496118 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.859847733 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.859597456 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.861730039 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864826547 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.860033184 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862725126 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.8596604 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.872976328 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.884547992 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.860212673 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.861287693 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.864848471 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.86196033 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.863824379 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.866342394 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.860651164 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.861177724 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.86462202 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.863120657 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.86091784 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.86097886 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.859656089 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.873058101 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.86183665 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.862078129 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867626291 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.870019796 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.863199775 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.861334302 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.865264155 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.861321855 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.871911248 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.86162095 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.863763413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.862677373 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.864005985 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.866076359 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.86175061 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868735732 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.869589029 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.87350889 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.866665167 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.867043546 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.869722273 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.868610923 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875260389 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.883769175 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.862200575 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.870023525 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.874836884 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.873624949 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.87052214 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.863727665 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.869366587 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.863264349 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.864794727 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.867045939 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.864323629 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.863276497 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.864519931 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.863683742 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.863604853 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.863935905 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.865316323 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.867347453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.868940477 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.864636297 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.869446155 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.863741028 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.869764163 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.874354098 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.864247045 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.864602418 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.864494976 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.868974779 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.865138338 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.865990011 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.864224127 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.864004069 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.865783267 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.864367053 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.868750874 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.863970587 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.863699829 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.864602844 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.868921495 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.864432145 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.865831213 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.864617279 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865174332 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.86617846 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.868688524 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.868669878 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.87064981 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.866201783 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.871878631 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.865690795 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.866426863 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.865771827 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.86569007 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.865772037 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.871979222 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.87948792 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.871159357 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.878001757 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.866176908 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.876302404 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.866092783 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.86924988 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.868379777 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.86586474 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866284867 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.866935827 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.866077035 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.872431276 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888921525 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.879886171 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.871407154 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.867576565 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.872070431 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.870446422 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.874920855 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.866731066 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.869800997 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.871741397 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.867064954 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.867367762 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.867956182 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.872086384 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.866105418 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.867180832 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.872862716 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.867382397 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.866701471 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.870746121 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.867106436 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.872431316 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.867945191 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.867996407 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.869654502 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.869349549 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.877876494 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.874229374 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.866964915 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.868258816 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872789655 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.868823495 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.869110588 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.872664879 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.874793644 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.868835161 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.873038086 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.878600717 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.870135917 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.868322658 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.868446592 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.868794774 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.873816562 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.868961035 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.874475391 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.875448584 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.874918814 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.870347791 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.8757714 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.869506537 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.874483856 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.870597031 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.872246978 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.87030404 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.874247744 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.869087285 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.868839468 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.879236707 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.869195619 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.872777848 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.869421991 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.87186716 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.870853485 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.873946432 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.870647297 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.875942225 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.877925128 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.879561924 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.871650026 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.872912829 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.875738157 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.871875035 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.874196758 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.873662763 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.88466205 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.882188719 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.870900726 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.871152388 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.871371782 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.876205162 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.871054413 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.871185733 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880616809 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.873020417 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.870422465 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.875240564 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.872043149 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.872747106 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880165728 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.875270844 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.877329931 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.876115335 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.874774055 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.874622745 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.872300418 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.877876059 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.872542885 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.875640607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.875529345 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.871255139 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.875625547 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.871609952 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.883167074 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.872365563 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.875519158 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882345513 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.875866047 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.872830249 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.876206056 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.871780162 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.875850446 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.876540214 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.873566888 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.874080161 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.872916418 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.87927077 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.884593027 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.878326946 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.879840728 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.878891781 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884805528 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.87339741 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.873587719 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.872272085 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.878486567 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.881517655 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.874863673 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.873140876 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.883845241 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.874835856 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.874842404 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.878016728 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.874952986 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.874505676 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.874838844 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.875826222 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.882073362 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.879587636 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.874430889 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.876023222 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.87453011 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.872797563 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.881073084 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.880124089 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.877723239 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.875936732 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.875286294 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.875729487 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.876676116 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.874538799 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.876079311 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.875358786 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.874115833 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.885417042 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.876299414 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.876455529 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878660408 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.875665546 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.886073481 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.875278188 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.876886714 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.877315184 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.875090516 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.878533607 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.875865479 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.876296511 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.876391949 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.874838642 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.879189207 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.889281673 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.886859757 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.878882811 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.880751082 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.875228066 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.880004158 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887789537 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.898054617 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877316074 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.880825794 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.880696204 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.888182277 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.882797029 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.884323433 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.881736862 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.885228856 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.881560618 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.87698908 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.883080271 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.892278806 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.877819277 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.87712069 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.878854267 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.883984813 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.877708549 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.87801043 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.879722522 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.882317793 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.878678716 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.891910818 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.878416098 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.879542291 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.880310389 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.877452963 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.878687019 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.878116182 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.882103039 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.882267719 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.87797407 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.878025756 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.882899985 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.885744558 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.877459821 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884711367 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.888975085 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.878776949 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.880728628 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.879658579 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.878073195 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.882500658 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878396766 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.878654777 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.880331014 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.878204102 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.879207475 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884695545 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.888714129 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882973352 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.880115926 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.878810978 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.885909954 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.87894559 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.879953012 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.883196189 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.890363797 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885043727 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.891761202 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.889532524 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.880026978 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.881099337 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889282624 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.886638769 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.880377869 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.87937974 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.881365475 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.885926526 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.885138636 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.882710839 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.881017337 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.881972274 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.886419884 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.880554488 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.880716286 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.881155152 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.880435485 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.885646337 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.884540786 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.889084376 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.880673707 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.881207456 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.880220635 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.886086072 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.883884055 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.885116813 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.881183126 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.881827657 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.886369109 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.884981267 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.885922894 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.881149868 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.881561157 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.886135931 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.880879455 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.88146991 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.88136435 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.88225524 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.8812259 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.886346093 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.888493517 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.880939083 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.885238399 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.882274965 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.887249176 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.882692396 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.883055979 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.880897129 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.881541716 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.89277596 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.882794895 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.882250724 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.882281475 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.882222545 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.88893608 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.886302029 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.890269296 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.882999615 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.883988147 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.884347871 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.887769084 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.891845141 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.887784973 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.889037033 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.890576094 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.891773737 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.887240849 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.884225514 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.883945842 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.883523443 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.884497918 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.891198185 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.887096287 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.888382753 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.883258719 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.887831461 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.88400141 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.888882612 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.883690141 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.882927687 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.891027303 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.894646351 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.896140183 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.88355757 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.887284509 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.885137116 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.88950946 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.894016016 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.884085587 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.88431169 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.885126886 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.886388778 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.885311209 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.893863852 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.893089965 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.892142444 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.885787643 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.89240177 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.90318057 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.890847603 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.896277222 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.916946432 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.887203015 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.885271081 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.888524485 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.885887475 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.885764553 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.888163686 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.885381692 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.895846897 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.885939422 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.885838351 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.895751759 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.886024173 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.886559807 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.886601088 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.887150107 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.894255831 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.888447596 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.898303453 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.886344631 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.886417456 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.88761624 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.888044659 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.885705353 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.887322709 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.886486558 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.891771158 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.886180878 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.887196433 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.898101602 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.887188262 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.890727249 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.900502182 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.896589713 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.887908817 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.886909789 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.887402984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.895190269 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.892997878 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.886213124 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893422531 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.894893687 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.89327261 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.895134927 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.89154853 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.891009366 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891388486 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.887663899 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887237206 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.901612095 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.901494135 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.887764715 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.888603292 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.897672443 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.88758057 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.898595741 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.895897745 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.889187531 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.892273101 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.888860814 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.887736635 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.888193784 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.888682743 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.894160284 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.895312144 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.889768134 seconds)
  done (took 1119.815664707 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.889261605 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890196425 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.888317957 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.889535353 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890519622 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889306937 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.889366492 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.890040894 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.889947148 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.889883646 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.889800657 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890365703 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.890649366 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.888835632 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888470565 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.88988348 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890819365 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.889191991 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.890290159 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889383176 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.890041384 seconds)
  done (took 41.507841828 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.890666511 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.889345936 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889210805 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.889810088 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890530887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.890339221 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.889011136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889481575 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891001165 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890288272 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.890466637 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890942822 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88995244 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.890544118 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890172991 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.891146994 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.890172814 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891058702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.892087647 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.891248831 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.891335931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.891314222 seconds)
  done (took 43.414646698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.891629568 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.891946818 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.894760523 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.892423169 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.891823586 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.891572721 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.892282822 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.892470199 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.891479872 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.893407518 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.902017749 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.899572279 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.8923079 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.894153889 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.892452333 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.892418355 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.042389876 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.893021318 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.893574237 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.892936583 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.892051393 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.900861155 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.893666373 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.893357978 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.891984945 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.892618646 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.892143122 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.894483719 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.893015303 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.895047069 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.895746488 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.893685451 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.896402279 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.897845471 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.892238309 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.894324684 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.896933845 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.892728367 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.89365623 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.89231067 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.904456648 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.914651239 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.892830463 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.893448651 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.903591211 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.894266926 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.894256118 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.898064221 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.901020595 seconds)
  done (took 94.826857389 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.894128074 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.892853348 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.892367079 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.896386521 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.893192262 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.893432896 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.894017217 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.895350452 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.895079094 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.894682661 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.893137348 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.893966998 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.894461855 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.894420453 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.894479545 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.894556709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.894367033 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.89354759 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.893973248 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.895424448 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.895879456 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.89424179 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.894673499 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.894551741 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.895697242 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.89453436 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.895993175 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.894181584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.89504694 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89568652 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.895650718 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.8943004 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.894195112 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.894713778 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.895990598 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.895720614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.896055029 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.895107658 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.895624898 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.896570444 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.896321136 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.895675129 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.895175371 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.895152526 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.895772595 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.896358558 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.896295396 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.895533406 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.895389521 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.897471575 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.894504267 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.89660835 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.895353559 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89642165 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.897094389 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.895433427 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.895986855 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.895519525 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.896557727 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.895913433 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.897377133 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.896573369 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.897019014 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.896289002 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.89811068 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.897586411 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.897192467 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.898254305 seconds)
  done (took 130.714689751 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.897317754 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.898308227 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898156436 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.897838497 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.899066857 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.897341774 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.898158787 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.89831295 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.897810141 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.896260948 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.898236714 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.897572226 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.897123668 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.897286969 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.897989786 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.897901565 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.898655954 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.898030613 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.898842236 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.89859271 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.897921831 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.898671461 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.898318334 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.898986595 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.898660664 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.898431495 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.898502407 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.899577517 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.898529235 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.899383065 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.898849279 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.898235819 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.898792952 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.898748636 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.900044779 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.900474763 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.898981901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899776585 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.899788347 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.899719981 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.900302667 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.900822506 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.899056866 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.899878723 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.900338393 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.900572922 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.90099814 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.900769858 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.899235595 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.900580293 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.901586302 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.900600879 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.8999678 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.900513435 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.901234927 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.900362194 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90059873 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.900372887 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.900555652 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.901923005 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.900558403 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.900514918 seconds)
  done (took 119.584010646 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.900671993 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.899778843 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.900454666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.901122902 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.900068976 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.90047572 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.901250856 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.901461208 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.900071368 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.901335644 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.901057541 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.901128348 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902187866 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.901060602 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.901476315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903157981 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.902869091 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.901286822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.901666251 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.902249344 seconds)
  done (took 39.860520454 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.900623637 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.901716679 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.901870928 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.902539075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.90155203 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.902581781 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.901623126 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.901331262 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902142342 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.902129722 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.903345746 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.902190968 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.901373932 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.902721044 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.903289022 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.901802535 seconds)
  done (took 32.268610134 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.902498942 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.903730567 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.903632765 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.903809235 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.903217148 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.903755619 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.904515131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.90346859 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.904543428 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.903189731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.9033842 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.903502063 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.904720489 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.903966933 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.904269404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.902144987 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.904300769 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.904053783 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.90421318 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.903539523 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.904065664 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.905372274 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.903823 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.90408411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.904311083 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.904134527 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.904720375 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.903971032 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.904991214 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.905592503 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.90389886 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.90439833 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.904121834 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.905258345 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.904006911 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.903861828 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.905181024 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.905466658 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.904799867 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.905885556 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.904377725 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.904457551 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.904532533 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.905721116 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.904508694 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.905680309 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.905676484 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.905272557 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.905709673 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.905177452 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.906299923 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.905551946 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.905525714 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.906004999 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.904924704 seconds)
  done (took 106.582637895 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.904783454 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.904936568 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.905366132 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.905979916 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.904926727 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.905470209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.906284419 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.905649876 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.906512826 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.905436083 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.905735231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.907792104 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.905836044 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.906323061 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.905335484 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905682788 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.907104652 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.906107669 seconds)
  done (took 36.145094629 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.90721293 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.906397882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.907900315 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.905756588 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.907059678 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.907169369 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.905935634 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.908055313 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.907340344 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.906862707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.906758176 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.90681724 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.907664515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.906859311 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.907005705 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907226959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.907581305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.90809067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.906947353 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.907933225 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.908370107 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.907904921 seconds)
  done (took 43.799389006 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.90747391 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.907459132 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.921745544 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.928835454 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.928206784 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.942598218 seconds)
  done (took 13.376406787 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907783661 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906950564 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.908337638 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908356674 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908371274 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908587131 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908733598 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907908094 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90805528 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908067024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908410051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909152266 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907964051 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909023495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908418197 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908331883 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907314298 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908810538 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908640977 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909043575 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908121286 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907631389 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908763189 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.908010212 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908926969 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909052212 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908199377 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.908606566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909089661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.9086205 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90880826 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908890773 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.909920346 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.910002935 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.908681382 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909384925 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909702504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908117374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909621643 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909818152 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.909172066 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907827207 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.910539717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.909544195 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910398853 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909765662 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.909641309 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.909147222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909898426 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911206409 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91094489 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912546079 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911279858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912323723 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911759671 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913210414 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91290595 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912125019 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911215843 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91100769 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.910094439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910081091 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.910149255 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.910382102 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.909908768 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.911464045 seconds)
  done (took 127.866487562 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911443121 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.911365891 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.910818698 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.911113847 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.91124664 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91146266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.91094565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.911602875 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.911615123 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911395748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91229759 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911531336 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.912117206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912503221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.913073457 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912831836 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913148354 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912162248 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.911110166 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910670319 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910678626 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.910622256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.911453469 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914516977 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914337451 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912589755 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912235496 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.911758447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91217461 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.912190394 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912319863 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.911462617 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.912025879 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.911819773 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912504706 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.914074978 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913878387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.913610533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912871303 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913036335 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.913423491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.914167488 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.913924093 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.912855217 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.913779731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914656701 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913630684 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.913470086 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.913768906 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91430286 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.913217624 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918031224 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914752873 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.914323165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914233325 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.912654453 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.913439711 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.913460755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913408107 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913283724 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914717224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.913475827 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.914111982 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.912919099 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.914288274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.914387573 seconds)
  done (took 128.09455755 seconds)
done (took 2609.58480866 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.940020273 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.004002959 seconds)
  done (took 15.792412159 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.078286334 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.031390319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.916572701 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.97266993 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.917773084 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.943009504 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.93029813 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.917393126 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.918918503 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.916915361 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.918901036 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.1022982 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.976320948 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.91845877 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.918664772 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.011764396 seconds)
  done (took 53.254316241 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.923317044 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.922437957 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.932610215 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.921724349 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.924876497 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.935811674 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.954259706 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.927132136 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.959431874 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.937106045 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.993404033 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.935136677 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.923492503 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.975605496 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.936286992 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.939643478 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.023460521 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.001054693 seconds)
  done (took 36.915385618 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.003305684 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.929579942 seconds)
  done (took 10.789616398 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.944726294 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.939856109 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.933792951 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.931971208 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.935957922 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.948739146 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.923755748 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.922236254 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.950839773 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.922319303 seconds)
  done (took 71.222768083 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.92538554 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.923548061 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.926141783 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.920433638 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.91802125 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.924456781 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.921111846 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.918649 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.617834159 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.960125586 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.931809559 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.928879516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.922598946 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.92363034 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.918012731 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.946722264 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.025396894 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.916909004 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.917517062 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.925777369 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.921798013 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.976673289 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.934617389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.922479137 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.954309449 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.610318194 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.934056267 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.927548821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.048038682 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.918506041 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.921856654 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.132056046 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.927888333 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.390305218 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.195739406 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.927935863 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.932113827 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.929234053 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.918008769 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.045592842 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.923535637 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.928061956 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.882994745 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.169323195 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.01889305 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.971480493 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.266370152 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.925012868 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.922433351 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.957692045 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.925816323 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.923255431 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.941387656 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.428339868 seconds)
  done (took 135.819198018 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.921786441 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.264909342 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.085342145 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.923815388 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205707532 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124577943 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.923289006 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.966278265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.922070256 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.146771049 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.173654258 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.025625629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.922519102 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.920301659 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.923786327 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.921384089 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.073645396 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.990048409 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.923016143 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.920262438 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945967557 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.159438812 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.041641683 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.923329582 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.947732791 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130998516 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040318957 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.025068998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.698249881 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.921107707 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.982564228 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.923248867 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.920362776 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.920605467 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.077082299 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.013840412 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.006374946 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.923400539 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.922638455 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.919057063 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.666494789 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118780103 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.014756976 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.04985555 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.172490672 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.125483298 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.700915021 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.920993384 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.652574654 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082224322 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.150466895 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.149345391 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.041645906 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.924448523 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.252037271 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.92124596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.922003473 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.170498309 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143139283 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.020874162 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.925045101 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.923464548 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.921950412 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.210076747 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.925302651 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.01696969 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.925640205 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.9232975 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.018430903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.023263017 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.152461988 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133201101 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.951904993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.263203304 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.431241013 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.167907554 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.987104307 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.172743183 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.926223489 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.923336111 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000024497 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.769658669 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.177215355 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.2052874 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.166541091 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.959071933 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.640995277 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.924150069 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.145495343 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.143159657 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.184382536 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.172000654 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.164638115 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.237592067 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.924500808 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.924967281 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.280345329 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.04933325 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.927077067 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.265520638 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.155894859 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.485805885 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.950099634 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.228770723 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054147065 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.927651254 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.559798692 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.925771506 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.153776642 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.96368954 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.92653977 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.925935766 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.143226976 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.917992384 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.926289192 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.562930106 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.985633344 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.93008186 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.156531119 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.928408824 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.193602335 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.928459358 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.160247515 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.494144658 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.956033791 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.097574103 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.171757992 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.929598966 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.169590961 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.168399168 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041256169 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147420195 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.6187257 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.926036448 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.213343472 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.92901282 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.926783109 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.093205648 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.928909524 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069562229 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.930282168 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.217579798 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.946899186 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.162247899 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.92968458 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.179447496 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.958965264 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.977521242 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.93013237 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.057501278 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.929979654 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.849213679 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082128264 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.929229303 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.92602428 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.474023643 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.92634664 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074540937 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.154559668 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.947315889 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.000013844 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.590304491 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.927691843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.008558341 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.950810226 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.317800367 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.928038092 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.178876048 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.930920398 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.927579196 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.927298089 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.212114335 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.109461293 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.930003834 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.927945881 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.832188671 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.927912019 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.928373159 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.1092946 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.379851625 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.928985081 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129481946 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932814895 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.055288381 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.934021904 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.001282868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260607491 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.927754293 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.928135814 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.928383864 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.928810474 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.928768039 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.135143028 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.955222119 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.460937979 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.065749288 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.203195337 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.237108996 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.168592113 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.973143309 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.93358363 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.188683827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.933270106 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.991713656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.932654162 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948288959 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159917867 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.933668858 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.138538774 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.198579753 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.807874779 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976942115 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.933588357 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.929911688 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.929895834 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.074780602 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013916938 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.932942843 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.929907494 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.044285148 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.050626123 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.139469479 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.931506912 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.033864846 seconds)
  done (took 915.743964065 seconds)
done (took 1241.388163705 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.930807323 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.931428679 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.937960016 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.930581037 seconds)
  done (took 29.595105974 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.933351321 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.932178124 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.934154239 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.932940128 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.933531566 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.933015223 seconds)
  done (took 13.46321587 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.047870089 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.930590203 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.935120813 seconds)
  done (took 21.77803296 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.007750377 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.353452323 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.072793417 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.374759259 seconds)
  done (took 10.673926071 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.934534398 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.93499713 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.934819635 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.934319011 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.934373279 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.935717608 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.932837606 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.934858883 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.937457128 seconds)
  done (took 19.279707032 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.575959676 seconds)
done (took 101.233047854 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.938773126 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.280080012 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.001602157 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.03267981 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.168053171 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.245410617 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.702646867 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.507319667 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.127754528 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.952478613 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.240160192 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.11462132 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.130816127 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.949983159 seconds)
    (15/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.844350425 seconds)
    (16/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.934667415 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.038651683 seconds)
    (18/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.685284529 seconds)
    (19/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.958043871 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.161676086 seconds)
    (21/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.277205608 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.10113201 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.934077793 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.936953017 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.420226496 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.644876593 seconds)
    (27/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.062290521 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.934474902 seconds)
    (29/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.14552723 seconds)
    (30/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.958387693 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.590310607 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.918839634 seconds)
    (33/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.939425405 seconds)
    (34/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.015487032 seconds)
    (35/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.065048618 seconds)
    (36/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.798147802 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.058877224 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.020816097 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.462715153 seconds)
    (40/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.250912132 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.322455693 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.026093624 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.84929016 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.891133455 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.08411998 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.939832889 seconds)
    (47/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 3.756915587 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.111942047 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.077373474 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.046844526 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.225705176 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.052517274 seconds)
    (53/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.092588182 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.357070948 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.15139873 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.068791091 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.196190855 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.156132007 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.176878112 seconds)
    (60/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.461441042 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.758335508 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.669499342 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.177229466 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.935542986 seconds)
    (65/309) benchmarking ("sort", Float64, false)...
    done (took 5.677435316 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.998404441 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.098805669 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.940557723 seconds)
    (69/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.348103383 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.093329189 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.065371561 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.249060705 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.956727216 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.70193254 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.156458714 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.936810379 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.030603987 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.250702969 seconds)
    (79/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.64989847 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.063308658 seconds)
    (81/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.293465483 seconds)
    (82/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.943425054 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.956872694 seconds)
    (84/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.029359353 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.048825616 seconds)
    (86/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.016787142 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.280790338 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.946442349 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.972142619 seconds)
    (90/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.944974669 seconds)
    (91/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.067115801 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.974531984 seconds)
    (93/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.260239738 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.258929684 seconds)
    (95/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.226016344 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.19699198 seconds)
    (97/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.944291705 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.203762977 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.701831396 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.334689218 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.972252343 seconds)
    (102/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.938861668 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.14407564 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.128751698 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.959168696 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.953705681 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.554691652 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.893965631 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.948825098 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.377910116 seconds)
    (111/309) benchmarking ("sort", Int8, false)...
    done (took 4.835309829 seconds)
    (112/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.16162281 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.072717251 seconds)
    (114/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.234582134 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.066091086 seconds)
    (116/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.033132047 seconds)
    (117/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.951278236 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.229140976 seconds)
    (119/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.05042813 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.263134698 seconds)
    (121/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.427743596 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.239261343 seconds)
    (123/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.74763279 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.973845005 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.628426957 seconds)
    (126/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.133053873 seconds)
    (127/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.870242258 seconds)
    (128/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.273448576 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.968988992 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.292643313 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.967042128 seconds)
    (132/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.201419998 seconds)
    (133/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.964039812 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.969687011 seconds)
    (135/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.196966755 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.953238684 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.172736507 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.784334854 seconds)
    (139/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.228612503 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.945272359 seconds)
    (141/309) benchmarking ("sort", Float32, false)...
    done (took 5.679629257 seconds)
    (142/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.332613043 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.202110217 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.189965334 seconds)
    (145/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.21813193 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.20865284 seconds)
    (147/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.021169478 seconds)
    (148/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.942866469 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.070013926 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.961976984 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.338420624 seconds)
    (152/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.33221245 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.94611011 seconds)
    (154/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.385998913 seconds)
    (155/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.132354324 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.342568515 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.343852906 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.958784317 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.943572039 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.961669197 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.907433337 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.244799562 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.198584381 seconds)
    (164/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.837388235 seconds)
    (165/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.089868308 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.082329568 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.94258855 seconds)
    (168/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.58254445 seconds)
    (169/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.276971843 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.070783717 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.943584433 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.431997071 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.943221826 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.626054348 seconds)
    (175/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.982149987 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.109331647 seconds)
    (177/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.754125319 seconds)
    (178/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.047346556 seconds)
    (179/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.232374702 seconds)
    (180/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.647859967 seconds)
    (181/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.150888599 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.944695678 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.679460475 seconds)
    (184/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.031100363 seconds)
    (185/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.34428211 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.262546974 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.949091326 seconds)
    (188/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.150829246 seconds)
    (189/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.209695167 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.340406383 seconds)
    (191/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.026395758 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.341513198 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.231647467 seconds)
    (194/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.34442358 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.831816937 seconds)
    (196/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.118193748 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.943122445 seconds)
    (198/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.055868175 seconds)
    (199/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.069097639 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.102342372 seconds)
    (201/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.326428316 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.048698086 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.959796321 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.841536347 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.955953567 seconds)
    (206/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.167705914 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.127821325 seconds)
    (208/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.269571698 seconds)
    (209/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.948228241 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.341263097 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.008135551 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.952633573 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.605740666 seconds)
    (214/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.17116064 seconds)
    (215/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.282635349 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.178511044 seconds)
    (217/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.947461443 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 4.265677724 seconds)
    (219/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.095361095 seconds)
    (220/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.645897158 seconds)
    (221/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.09181994 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.646623337 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.270869191 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.94610319 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.947810593 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.638128052 seconds)
    (227/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.08103881 seconds)
    (228/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.947071057 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.139801272 seconds)
    (230/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.96145545 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.96748611 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.842135567 seconds)
    (233/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.168207183 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.204166275 seconds)
    (235/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.865150299 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.949376365 seconds)
    (237/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.545043127 seconds)
    (238/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.702737698 seconds)
    (239/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.722133018 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.034270177 seconds)
    (241/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.02873486 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.950365991 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.036437106 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.94971552 seconds)
    (245/309) benchmarking ("sort", BigInt, false)...
    done (took 6.948571632 seconds)
    (246/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.032593929 seconds)
    (247/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.006499919 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.945821664 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.37672881 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.287159386 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.286385657 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.012455095 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.046459265 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.099375306 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.08655197 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.43157171 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.20870763 seconds)
    (258/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.039034269 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.502434807 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.189763729 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.050727754 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.968866297 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.969305635 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.05864372 seconds)
    (265/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.047871232 seconds)
    (266/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.854453059 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.061479672 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.056221666 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.06553329 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.264276573 seconds)
    (271/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.957638019 seconds)
    (272/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.437220237 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.573548393 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.975432569 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.082253672 seconds)
    (276/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.448463624 seconds)
    (277/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.947821857 seconds)
    (278/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.684328758 seconds)
    (279/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.214450564 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.628775977 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.787838783 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.050648759 seconds)
    (283/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.961695098 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.950497028 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.97378916 seconds)
    (286/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.667161096 seconds)
    (287/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.115087096 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.963376008 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.851522703 seconds)
    (290/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.149881995 seconds)
    (291/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.442402775 seconds)
    (292/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.047973096 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.823181844 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.950352118 seconds)
    (295/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.087027609 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.949143359 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.952625591 seconds)
    (298/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 3.726950444 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.968663942 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.072146608 seconds)
    (301/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.216744851 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.247843815 seconds)
    (303/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.058054252 seconds)
    (304/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.086665835 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.159684979 seconds)
    (306/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.252192723 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.621383103 seconds)
    (308/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.042036666 seconds)
    (309/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.951036842 seconds)
  done (took 1034.991604322 seconds)
done (took 1036.924087404 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.134154099 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.973403028 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.953804164 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.978045441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.06740323 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.99738714 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.968132241 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.958847249 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.004059946 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.004872361 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.952682572 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.994309053 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.955330168 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.95707376 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.95379343 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.970455117 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.262439721 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.984114854 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.974705836 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.967195469 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.973550674 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.955169615 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.004694164 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.997149579 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.958732655 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.960282829 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.959260542 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.976341039 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.070169442 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.959555419 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.961920911 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.968845319 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.259509633 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.982717582 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.953604249 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.976192367 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.969806337 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.970231515 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.96171369 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.98955131 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.406525513 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.961935788 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.957344365 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.958036549 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.957726779 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.965071007 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.957801942 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.966704579 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.974907119 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.974417889 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.398549567 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.978276502 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.96129783 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.959848934 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.971054772 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.957728408 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.962666187 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.974188137 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.977852563 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.974519417 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.252187658 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.992311814 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.962257784 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.976499451 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.96627182 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.4353198 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.961106364 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.965549663 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.406675665 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.970518958 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.434502551 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.971963539 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.960458585 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.973813534 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.990670955 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.262651051 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.984512641 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.959188801 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.96922817 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.956108361 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.970529641 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.973813405 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.963014099 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.959568273 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.978054035 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.002331766 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.97221053 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.960289246 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.972040341 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.979570255 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.968643422 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.971808959 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.96383911 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.960468505 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.973004574 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.964324455 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.964470995 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.963563637 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.967052851 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.974143979 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.403867332 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.981019468 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.957349353 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.958818268 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.960302142 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.975948098 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.401117343 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.965535321 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.985529801 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.010325863 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.962098943 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.253794013 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.991207503 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.981064119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.973638527 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.963612923 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.958428033 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.253615482 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.429145304 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.981678162 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.960370715 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.960562711 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.980465142 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.962785429 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.958192704 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.266740134 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.991217421 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979890792 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.085068053 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.974625841 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.996098754 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.962663086 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.96962057 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.008273972 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.981699601 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.995871801 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.965863105 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.980976751 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.978676797 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.958040514 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.974448449 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.97610674 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.966026523 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.969912083 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.959682785 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.007588986 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.978124632 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.979780487 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.983713894 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.084176977 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.95979498 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.254927657 seconds)
done (took 309.497473331 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.039616706 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.957004098 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.076134247 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.957642478 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.045258424 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.029954132 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.960294559 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.959308292 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.959589252 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.457726909 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.959644128 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.967430673 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.957027435 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.960883956 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.028292654 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.959375998 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.95776306 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.405480744 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.963222897 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.038272051 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.958389492 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.963100121 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.961199994 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.462432854 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.961098116 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.959539836 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.04072337 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.960667389 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.409805294 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.960198608 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.961370944 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.410459835 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.040280111 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.987731026 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.966992985 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.967467244 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.047665378 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.970211959 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.026801546 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.02649399 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.07993017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.993437165 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.960251827 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.963921865 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.963624829 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.964158323 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.960904455 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.993423267 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.961833459 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.966016858 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.404661447 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.966150985 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.967811641 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.964172797 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.961396823 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.991660199 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.96207899 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.961142223 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.044118487 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.962902362 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.028385385 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.463843852 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.463453134 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.962266023 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.960243131 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.963889073 seconds)
  done (took 191.414083454 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.027238751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.035755603 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.027501417 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.967436376 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.011980251 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.029749898 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.966715137 seconds)
  done (took 15.959758703 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.968818083 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.962083314 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.011400121 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.011837773 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.962681997 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.143715848 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.974207217 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.967807942 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.989417689 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.962904317 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.630029771 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.012222324 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.968985058 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.963785494 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.975238737 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.020068265 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.965351858 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.966008703 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.078772165 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.112436729 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.968185898 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.970116575 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.990747272 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.974782478 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.964319034 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.964933946 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.963919509 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.973000852 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.964436739 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.964547102 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.964726035 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.016482957 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.966977504 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.964442941 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.964296256 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.967245778 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.964029089 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.964942329 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.965068737 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.963803311 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.964926198 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.96470013 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.965349344 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.964783572 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.964664466 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.987434601 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.964814311 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.967923111 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.964420198 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.96509108 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.99102198 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.965935006 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.966266585 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.969748851 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.007520046 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.972606275 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.965249968 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.965076145 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.965318138 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.965176829 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.96520096 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.114616628 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.015412857 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.966001824 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.014962722 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.120173183 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.965597776 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.9643893 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.965231249 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.054917182 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.964939211 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.015145846 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.965939523 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.080814828 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.964836612 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.145184017 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.989553627 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.97209354 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.970036212 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.966059461 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.973388645 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.966659281 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.968040551 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.973929016 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.972383177 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.969035125 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.96686458 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.968346508 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.973423789 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.966426921 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.019135005 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.96751822 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.966538746 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.110185868 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.966818256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.085663707 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.993630159 seconds)
  done (took 215.343469572 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.974012004 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.974163855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.971362361 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.984001261 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.969548025 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.968152137 seconds)
  done (took 13.739719498 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.973075751 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.970980663 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.96871173 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.968968139 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.969406654 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.969168063 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.970390254 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97047496 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.973062699 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.968274892 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.972847676 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.970056229 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.971976165 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.968334322 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.96969416 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.96906963 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.970774882 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.968296155 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.968693966 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.968819672 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.175609305 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.970578195 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.970328918 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.973916197 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.973677547 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.971876764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.982091137 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.966985524 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.968549682 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.977798099 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.973449752 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.970647437 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.972055736 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.975026391 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.974969714 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.974741832 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.974088272 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.971511598 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.969876207 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.971402068 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.972358173 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.969931315 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.970185126 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.970903876 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.973131571 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.980299261 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.97446218 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.982416309 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.970154582 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.97200457 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.974805089 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.971099475 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.971751291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.971872956 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.976908602 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.978966845 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.976172973 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.971827207 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.972784484 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.975626751 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.975981757 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.97411858 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.974171062 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.975967318 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.978301698 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.973104491 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.978553474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.975990022 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.970585308 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.972225253 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.972145113 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.975263948 seconds)
  done (took 145.136451172 seconds)
done (took 583.503404478 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.280824397 seconds)
  done (took 9.184106094 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.013200248 seconds)
  done (took 9.011503377 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.65333936 seconds)
  done (took 10.555657068 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.980790144 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.98683382 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.982773607 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.971735408 seconds)
  done (took 29.834526128 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.304335204 seconds)
  done (took 9.206651525 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.984246497 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.972787945 seconds)
  done (took 15.933572433 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.044153387 seconds)
  done (took 8.948061518 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.388554739 seconds)
  done (took 9.304585685 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.989881874 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.993639435 seconds)
  done (took 15.909009081 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.975839466 seconds)
  done (took 8.87835481 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.18088853 seconds)
  done (took 10.165867156 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.98315514 seconds)
  done (took 8.927372021 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.019778208 seconds)
  done (took 8.924294935 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.241427508 seconds)
  done (took 10.146325785 seconds)
done (took 166.834702593 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.975905918 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.971836623 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.971528383 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.971441914 seconds)
  done (took 29.793713253 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.007841836 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.008804373 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.016891457 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.009045233 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.998470817 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.998769017 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.007856726 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.008851084 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.999865018 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.006244338 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.008833357 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.006873429 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.008679518 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.018705279 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.017067405 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.007145636 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.007641737 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.009819041 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.000958786 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.017537758 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.006311226 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.008557746 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.974197109 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.976716644 seconds)
  done (took 50.036119741 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.166557567 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.04393641 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.129229948 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.027326849 seconds)
  done (took 10.272040348 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.975850839 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.03993763 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.027840777 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.025591349 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.028215016 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.078768448 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.02696023 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.110354968 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.103423827 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.098777022 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.980704286 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.995128714 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.998020931 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.02518257 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.08067924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.97511001 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.975783289 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.092313072 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.039612056 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.16269203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.975130465 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.030602569 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.027001473 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.03041375 seconds)
  done (took 50.808828752 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.976417591 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.984197668 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.983879771 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.97898435 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.97852708 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.977494158 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.983904606 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.979685247 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.001962894 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.978021194 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.976485446 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.977024378 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.984436671 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.979062414 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.978235678 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.991718523 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.99075987 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.97922413 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.98357169 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.98503132 seconds)
  done (took 41.555687476 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.97534735 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.822566968 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.320073303 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.229829589 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.975063237 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.976616516 seconds)
  done (took 32.2073371 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.988731142 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.982839152 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.976806991 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.031820646 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.117859668 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.986278886 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.981790111 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.987414991 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.020096223 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.043420524 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.996187744 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.005932675 seconds)
  done (took 26.026775271 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.977460962 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.98143399 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.979380016 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.99044753 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.98807211 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.984473144 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.984996684 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.976206103 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.99142289 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.994423654 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.984168445 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.989649571 seconds)
  done (took 45.733726843 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.683593343 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05201699 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9772091 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.851777898 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455443697 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.526796541 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.871579131 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.753753697 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.446442172 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.907079702 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179778672 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.97802625 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061697267 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.978364103 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248576694 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.375468937 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173929363 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221249266 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.75349881 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.009226599 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.180812771 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193056619 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.263504215 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978007111 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981274364 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.988605109 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.547011693 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.799674402 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014160396 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.355564708 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.221399805 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.929646231 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036846616 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.983809411 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.992136607 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980750849 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983146469 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250098853 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.978967206 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220515259 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053216694 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227614216 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985889322 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.397071801 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.685936086 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.336754039 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.095178923 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.981281797 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983276709 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978859108 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.905985622 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062734514 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.981976709 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985038392 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.679641508 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.979415567 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054273082 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.981721 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183286896 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.789793307 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.670183365 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.98229129 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982200088 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.529737188 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.096935979 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.096704295 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764558094 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36449366 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402691559 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.078008057 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.981610666 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983801248 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.168805282 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.945293431 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.7114659 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018627115 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.117150151 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.999006061 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621103695 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282262478 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.443561008 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.5449666 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903359496 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256946095 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.722456551 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.968064013 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200317007 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.8292906 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.912718536 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204184677 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013934847 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987862506 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.249132051 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766527962 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094568463 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.996336478 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421237897 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00242105 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99108227 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986818053 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19853568 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421954202 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014713441 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106874695 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002065325 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068171135 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912392629 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.999202236 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.986593176 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.892229315 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993105085 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954561856 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.033952711 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.693366738 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022759622 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.925544721 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992280856 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.099038757 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026791209 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.940311057 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231428044 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.287807509 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.652344997 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.991131119 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.123435473 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.40668413 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215231703 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993489687 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200365379 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.519842829 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.438220706 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.035400593 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278783276 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.049705165 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278992109 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420781289 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063536227 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.786169479 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.790053745 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.205077421 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001550735 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.990267516 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990056185 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992318034 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923183246 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.63814399 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.401219203 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.159302959 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201131628 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.353946317 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.982375112 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.969288207 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.296227742 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.125071906 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977570868 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.65370186 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.446523475 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.819038299 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.013214457 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.174860389 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.21964154 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.951026418 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000842423 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06442389 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008306901 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.991687392 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.398800262 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353931578 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.990617125 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.990457264 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.938191688 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98765539 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.990929072 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.522848903 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957400973 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.997658492 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.001113587 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.864710599 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063952632 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991650707 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992832041 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.529252357 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.49777221 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.993461364 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.657640131 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.991808479 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166126112 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276855788 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.389984718 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118925677 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.691790309 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.456629355 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.104473786 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.691276582 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918022534 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.990028868 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.932485429 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993472389 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.995551881 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995904381 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.176885894 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274651127 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295299704 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.467529388 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.060829486 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193624455 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.722508564 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946033591 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.993298633 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995873298 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.993722 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.990337878 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.504385525 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.293370569 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.110068517 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024496938 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000830317 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121246185 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.003936128 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.918711132 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.996796686 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993445799 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463719579 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.023909062 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.941077179 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.335348163 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.908684156 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115094604 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040851792 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.004585542 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999059428 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.733338994 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.035761315 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920506354 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448021196 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030973574 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.781378275 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483172822 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.554847274 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295858198 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.317094241 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.328200601 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.066167015 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.207944534 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07747718 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049108778 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082162277 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932169973 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.920637553 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.660248151 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330566318 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262171136 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00351805 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210809756 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728937055 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224812537 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023766281 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.701837588 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30365118 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.972987366 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012265115 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.35826045 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102920296 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076176744 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997818753 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.944426323 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.32393164 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032021846 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.698526641 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00856972 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.342202443 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462724653 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.064031877 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.428482002 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201342112 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.001082329 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350002395 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.249371909 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035853705 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001592261 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.984323892 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.209072292 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571706517 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.864517437 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000401673 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.199040671 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293080662 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.90005254 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.000169566 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.188626346 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256208425 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994705607 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.396578214 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.359150569 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.094293565 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053126888 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225074092 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.708503299 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306933846 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.556648335 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.478718438 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002761227 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.921840116 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.696407677 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.198129046 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.001076543 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959945098 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211672728 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226955651 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682160721 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215823977 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239924024 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.007434978 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26995988 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070037752 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.092666975 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.348735777 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.439492703 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.239853721 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.222147274 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537633039 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.213099089 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476639253 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.156777018 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.9984569 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201728964 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213675327 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.210706618 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.419770754 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169421885 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.70786711 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.003407867 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.204908526 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291877971 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058712144 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.427035726 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.170569649 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.082483574 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003881579 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062290677 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.002998481 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005725397 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.425220142 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.525295783 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.011664194 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077964295 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.126168932 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.505308028 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.00238388 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.005903554 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270420026 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351051745 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336257317 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.986090299 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.999307899 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00637157 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126616714 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.926551626 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003827628 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.268553516 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.001603261 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487269065 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.146563581 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016113502 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.365502251 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.389983734 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.704481213 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.964246186 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005136442 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218973137 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304022868 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.224551087 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115644291 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270676544 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329580583 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.03178939 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.410255398 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244267907 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002379454 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.874423161 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003174095 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128756145 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.197535929 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27576533 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.511146522 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.736328653 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267145795 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.849334765 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004261657 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.806663199 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271031013 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274012267 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.054165667 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065417273 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007478143 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47501743 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.722911404 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134622939 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.86778558 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927996363 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.014756442 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316849314 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.242270533 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.711925506 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.004615118 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280912277 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307974494 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276349838 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.057123576 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.868478767 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217800313 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006456882 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.00642474 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264685162 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224365051 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243844976 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006039393 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007496626 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.809175013 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930032161 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.003740208 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056572592 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.22845288 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024742902 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.517488261 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.703975715 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279156857 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048686124 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006881713 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277957582 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.543836087 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.560142716 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008259346 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213575223 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.030526709 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.304908036 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.00658561 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.474702367 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308199334 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.005368437 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.579688252 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.251752462 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270585297 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935795838 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01255747 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21754356 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.867851616 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.004932522 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01178853 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477175303 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237944603 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.741720914 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561607799 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.00672303 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.008159461 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471584693 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038046914 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467597849 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.033865251 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0221887 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.526313846 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.697756777 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.290540652 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248977747 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.568828802 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.598312532 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.006642416 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.0060631 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.006639965 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924685188 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358401301 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.192869265 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289429302 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036878913 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476859971 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040259191 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.452834379 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122600268 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219266207 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044496653 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.527936963 seconds)
  done (took 1721.464956813 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.015559773 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.0700862 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.048177155 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.014902526 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.027770155 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.017877592 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.070400112 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.06516228 seconds)
  done (took 58.265616906 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.008044729 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.020747844 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.009679526 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.008616969 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.019985238 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.00735619 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.166517776 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.016351076 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.033216869 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.011471637 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.009263258 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.006203486 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.749524316 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.037224796 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.014956967 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.045861674 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.018445582 seconds)
  done (took 77.124372414 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.018190792 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.432055694 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.079517807 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.018763668 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.07382591 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.02146609 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.088864462 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.019155709 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.022572322 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.264483091 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.315381351 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.061982599 seconds)
  done (took 92.360617531 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.02021143 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.018267148 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.016020995 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.016293226 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.016929671 seconds)
  done (took 12.036811331 seconds)
done (took 2249.6295264 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.426703606 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.075680047 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.117791286 seconds)
  done (took 6.137791385 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.165425736 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.209024555 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.322488923 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.084117579 seconds)
  done (took 10.732246756 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.329260894 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.395177042 seconds)
  done (took 6.668522885 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.437805646 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.018176525 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.432116521 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.016708015 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.021076132 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.021474362 seconds)
  done (took 23.00867284 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.017528646 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.018488444 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.017994702 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.017296961 seconds)
  done (took 10.017143288 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.016111795 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.733395208 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.021935813 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.027711043 seconds)
  done (took 21.74460541 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.166902316 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.132836048 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162722259 seconds)
  done (took 8.408682062 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.159175305 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.863497264 seconds)
  done (took 6.96955622 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.162609336 seconds)
  done (took 4.108207027 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.047454115 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.289107575 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.515492087 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.560364294 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.666100417 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.836991591 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.349509266 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.273552498 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.428427539 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.461973694 seconds)
  done (took 26.374669644 seconds)
done (took 140.431942091 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.38374217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.048975691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.239317004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.388014414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.250211655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.222580314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.238187674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.381258538 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.063460655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.050439584 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.383699967 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.248139256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.183981956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.043783909 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.193374452 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.04324933 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.262345484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.390692727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.067616364 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.289451916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.244641091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.03454501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.230688626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.048457749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.249414721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.173652373 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.578677541 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.047916757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.217238543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.59182624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.201188345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.433401764 seconds)
  done (took 173.371518254 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.021300008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.021676059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.019562234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.020194504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.490034254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.020634128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.021372208 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.019937609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.480828987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.47144402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.022367526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.477399287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.023927727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.022678241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.021982664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.021831617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.658236436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.022639331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.02138166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.02225432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022614561 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.313796442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.022067262 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.328838755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.644780231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.023771404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.022381911 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.021405248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.022662573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.022253433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.023406652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.022559511 seconds)
  done (took 214.342915825 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.022232569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.021101155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.023043611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.023724597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.023227262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.023361296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.024355741 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.023152001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.856702475 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.847286409 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.022697285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.024727571 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.024397355 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.02345754 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.022822964 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.023037426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.022928851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.033481054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.022301404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.023884667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.025452175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.749119764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.021707859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.757858779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.023409954 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.023390785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.025175727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.024744391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.023899514 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.024234001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.025644565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.025479305 seconds)
  done (took 225.834472867 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.263397292 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.025338285 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.025719259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.947906646 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.027269429 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.024096857 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.011797297 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.273211148 seconds)
  done (took 20.551054741 seconds)
done (took 636.067390489 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.446933285 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.284784265 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.21031192 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.048819158 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.294768315 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.095837749 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.045391691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.11052488 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.897433856 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.12891996 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.700808524 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.075106166 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.789530248 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.078108719 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.168040399 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.1033279 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.593557336 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.693382095 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.187598386 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.109695403 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.232930786 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.979035258 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.12938933 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.938600497 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.727207443 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.034422498 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.104124538 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.605090044 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.059854879 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.204602636 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.761260829 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.377808636 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.068939829 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.046701383 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.096871387 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.078845676 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.303848617 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.06472234 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.17816078 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.771897237 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.116929456 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.804779779 seconds)
  done (took 109.703606246 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.040016962 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.032343504 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.032412947 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.033438875 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.04241396 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.033159616 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.03322042 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.033924283 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.034768325 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.034033495 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.034407481 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.044192079 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.034898523 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.04267912 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.033650618 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.034323569 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.035261555 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.042312208 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.034360974 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.035368178 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.034651384 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.03506899 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.032096279 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.03477329 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.034266477 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.034379524 seconds)
  done (took 54.896855584 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.028733024 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.184822867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.272751967 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.049360342 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.030589506 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.032386213 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.047397178 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.033802197 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.032331545 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.03218304 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.119297413 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.036089224 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046642856 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.274243112 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.045488365 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.029308447 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.029967826 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.029192008 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.193870477 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.045651225 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.050707389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.034758215 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.048697245 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.043796725 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.031812681 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.031701495 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.033663189 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.47491429 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.040617965 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.121757806 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.088217385 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.053005927 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.409854008 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.282551017 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.087266279 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.038282399 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.031061616 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.125587736 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.038114302 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.031581638 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.048421972 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.037498223 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.2772329 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.54805493 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.048292807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.032871986 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.486148157 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.135309023 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.07309682 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045085433 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.282263752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.049490742 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.032141895 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.032316869 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.068975271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047500867 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.032142888 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.347009961 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.046042922 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.050202301 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.036316446 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.034966274 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.203358712 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.042661672 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.189724474 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.042230793 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.039313599 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.034029771 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.281440714 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.04925318 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.55939812 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.048461224 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.033837121 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.124143826 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.196037755 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.512455414 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.046971764 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.204087948 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.425933174 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.058286583 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.041911201 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.466374751 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.060144795 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.041257248 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.034994881 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.034579076 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.034496004 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.079900094 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.049685022 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.474289529 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.556529793 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.364633942 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.060368537 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.044557819 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.035561411 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.345303396 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.041954631 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.03359477 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.270767055 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.56939229 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.049217522 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.041646176 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.537743255 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.049552371 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.05293475 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.043005279 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.288965502 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.050668511 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.078598401 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.035159226 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.04124546 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.038082315 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.053528222 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.0425116 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.034261712 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.526606533 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.144012861 seconds)
  done (took 251.283642634 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.034999023 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.034466486 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.034217595 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.034347544 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.034721857 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.035417454 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.033284032 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.032641382 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.037764255 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.035584295 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.036523046 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.034452538 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.035752098 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.040270856 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.081082988 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.036267975 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.639171876 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.035094181 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.035386074 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.036597045 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.676629778 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.041023514 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.035982205 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.036655423 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.037955915 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.036060355 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.039406808 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.076874141 seconds)
  done (took 172.303567955 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.037645296 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.149124115 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.05987968 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.066441046 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.044013242 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.037770636 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.136349772 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.059247219 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.042291822 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.037063937 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.037742996 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.096718359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.050158448 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.13656424 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.072987653 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.145145422 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.145898908 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.048597649 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.037573156 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.038237398 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.067124894 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.047148936 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.097855854 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.163534899 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.060364832 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.151459285 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.062126912 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.040015279 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.038649407 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.151363698 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.061139656 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.099316754 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.070777829 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.055804415 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.156492795 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.157807736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.148056238 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.149123515 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.049621415 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.038597954 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.038622735 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.039839265 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.152770937 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.060919989 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.040973318 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.154898597 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.063150667 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.040182072 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.039345104 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.040584709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.052432311 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.057158547 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.104713997 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.17201411 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.077800945 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.06365838 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.138224985 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.170739072 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.039886895 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.13963722 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.051846849 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.153441202 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.063131586 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.041300064 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.041581189 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.044082972 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.06964678 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.148121039 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.149626992 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.052129476 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.139971007 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.081670189 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.048907205 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.042412111 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.042991676 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.154093851 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.162956285 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.080161586 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.078348232 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.072249976 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.050405885 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.041867101 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.04412861 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.057892407 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.046040485 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.155359275 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.163355483 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.050563849 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.041781661 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.041379464 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.042893668 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.065773488 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.162244967 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.081216889 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.148176197 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.11361693 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.11678407 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.056175382 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.055146985 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.047012624 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.105704424 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.056999093 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.054924917 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.338515617 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.102210351 seconds)
  done (took 220.95910302 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.439245079 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.092636179 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.098904606 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.371637157 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.407665098 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.076616337 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.091193711 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.092098251 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.12468858 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.319312166 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.167132624 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110070652 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.076857829 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.064813787 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.090721256 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.125323134 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.097735433 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.437431479 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.298360025 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.646181548 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.083645618 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35781497 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.425972368 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.670803529 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.139021085 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.49652132 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.700729286 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.2542722 seconds)
  done (took 68.333171975 seconds)
done (took 879.435187246 seconds)
SAVING RESULT...
DONE!
