cset: moving following pidspec: 9032
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.528861136 seconds)
loading group "shootout"... done (took 1.200203644 seconds)
loading group "string"... done (took 0.396354117 seconds)
loading group "linalg"... done (took 7.570194833 seconds)
loading group "parallel"... done (took 0.143818565 seconds)
loading group "find"... done (took 1.254240636 seconds)
loading group "tuple"... done (took 1.837587099 seconds)
loading group "union"... done (took 12.079104769 seconds)
loading group "dates"... done (took 1.246589641 seconds)
loading group "micro"... done (took 0.1914324 seconds)
loading group "simd"... done (took 4.135865737 seconds)
loading group "io"... done (took 0.80523034 seconds)
loading group "random"... done (took 8.190779748 seconds)
loading group "problem"... done (took 1.569097443 seconds)
loading group "array"... done (took 18.424429569 seconds)
loading group "misc"... done (took 1.429333371 seconds)
loading group "scalar"... done (took 37.460932794 seconds)
loading group "sort"... done (took 2.867335261 seconds)
loading group "sparse"... done (took 11.283374474 seconds)
loading group "collection"... done (took 15.766775845 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.501886398 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128042016 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125338526 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117236028 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.135472598 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.10641229 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119466354 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.079532708 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.91713478 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147426373 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.10841273 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.426047553 seconds)
done (took 5.432731434 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162216926 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082737276 seconds)
    (2/2) benchmarking "String"...
    done (took 0.073940524 seconds)
  done (took 1.472798938 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.058215657 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126364068 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.059607087 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.060317936 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.059796131 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.059458197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.059045838 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.059068789 seconds)
  done (took 1.800787617 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.065818509 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.060721188 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.058379867 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.060828176 seconds)
  done (took 1.556507074 seconds)
done (took 6.383350604 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.224230084 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.094754765 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.278433663 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.38223515 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.448184814 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.083837046 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.065031982 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.0616776 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.118840585 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316838443 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098257243 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.172605963 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.081876626 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168215339 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.98768571 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.110204915 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.077121681 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117534331 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.084306174 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.122951271 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.391401107 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.068244019 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.065545166 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.061138536 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.059335175 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641628737 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660512619 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.121573823 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.074940548 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.094812006 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.10995824 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.643310762 seconds)
  done (took 10.429717973 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.084213529 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.081231828 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.059665785 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.113723791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.084706559 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.059204507 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.064030805 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.058319684 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.080463387 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.113299658 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.079444333 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.0890163 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.05776733 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.060217616 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.066888468 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.186527992 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07080432 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.071494761 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.059154046 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.071021048 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.095654284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.068891773 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.068602429 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.06838126 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.119278409 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.160726608 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.088432698 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.088880124 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.057510638 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.069781867 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.106553302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.116554036 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.059346776 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.057844852 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.109966794 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.088151826 seconds)
  done (took 4.404957358 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.925642727 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082133531 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.093270276 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.465204647 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.057730076 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.140468759 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.223316675 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.062988987 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.34210246 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.124187423 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130687405 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.131184356 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.098352181 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064268477 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.20816261 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.10045217 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.373898777 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.057995665 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.058189481 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.055906316 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.059334012 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.059580345 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.055497341 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061140789 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.080337023 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.078940592 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.16362658 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.910012645 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.24403564 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.058083184 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.156382791 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079005378 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.349622305 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.058252425 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069755871 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.215045947 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.108761391 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.055754647 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151835982 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.105377289 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.05587554 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.100464608 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064439191 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.063995124 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.059718581 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.05772108 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064619163 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067606009 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.091180385 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.057583815 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.056682185 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161115139 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.056190263 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.055841663 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.057386555 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.059193169 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.142142453 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.055950149 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.055098869 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.074008461 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.135197834 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.055797234 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.061772646 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.084014465 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.059321459 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.081621743 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.092078934 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.324556565 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.0241521 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.05790718 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.035393624 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.070093088 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.057328787 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062183465 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.057811593 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.058401107 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.057750463 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065377765 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.063370292 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.057439704 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.095599275 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.057853275 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.058983937 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.058344587 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.061898587 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.089120315 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.056948038 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.264348497 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.091129478 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.057618161 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.068182535 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.091541679 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.057610128 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.063505434 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.057486665 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.05869381 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.056887295 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.169720954 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.059483255 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.083052481 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.063942043 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.106141875 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.020834549 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.05974612 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.055486194 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.057606732 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.062527707 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.060020822 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.058158735 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.058826835 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.060925343 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.059017207 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.057944499 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.106597259 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.0578867 seconds)
  done (took 20.120477146 seconds)
done (took 37.187806756 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236576277 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.072797544 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073988013 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073762082 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073378778 seconds)
  done (took 1.941528961 seconds)
done (took 3.345839326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.092036655 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.056253061 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.091152783 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.089407686 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.058176472 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.055758915 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.089916688 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.055479529 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.088396239 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089832703 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.093270027 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.091069479 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.055734636 seconds)
  done (took 2.415893361 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.061138942 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.071791229 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.073844379 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.053777609 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063733805 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.072341036 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.053649534 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.071518984 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.078590544 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.072797576 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.072447023 seconds)
  done (took 2.146740637 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.060932197 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.071996733 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.074989165 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.054183685 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.064944405 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.072965901 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.053399941 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.071996336 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.075518034 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.072525566 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.072512071 seconds)
  done (took 2.141002797 seconds)
done (took 8.095023805 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.059189999 seconds)
  done (took 1.428850744 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.514082176 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.53476662 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.059704881 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.079943788 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.174855599 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.089583712 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.217450691 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.064210105 seconds)
  done (took 8.290786655 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093152004 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.061475873 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.059837512 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06124929 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.059628558 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.059472867 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.061435409 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.060732444 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.061391485 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06002694 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06003895 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.059917104 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.060470304 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.061035392 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.060774288 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.05994631 seconds)
  done (took 2.473121232 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090022331 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.087375678 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.064892507 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.065319507 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066072699 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.062468925 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.065042609 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.064764738 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.061546647 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.063402446 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.065881667 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.064185416 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.064019618 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.053515898 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.064520511 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.066842501 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.062159456 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.065175516 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.065402356 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.066240954 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.065431338 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.05352388 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.063748228 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.064665319 seconds)
  done (took 3.074503649 seconds)
done (took 16.657018965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10684667 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067336089 seconds)
  done (took 1.555446783 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.061380607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.061588169 seconds)
  done (took 1.524425447 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.067378046 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.051970147 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.073153061 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.063464283 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.052776095 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.051808786 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.071461715 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.052580858 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.052227157 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.0521986 seconds)
  done (took 1.990339675 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.055297657 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.062295109 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.059917703 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.061101929 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.058936699 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.053516586 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.056267814 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.053659085 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.061084224 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.052354561 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.057596862 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.073978299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.056885946 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.075510916 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.056528648 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.057525629 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.059452367 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.057240898 seconds)
  done (took 2.474653927 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.05342635 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.054295652 seconds)
  done (took 1.518357659 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.058024826 seconds)
    (2/7) benchmarking "second"...
    done (took 0.05483061 seconds)
    (3/7) benchmarking "month"...
    done (took 0.05758334 seconds)
    (4/7) benchmarking "year"...
    done (took 0.056926074 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.054839482 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.053607942 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.054416619 seconds)
  done (took 1.792633314 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40326711 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113730697 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335484771 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.057129642 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.072695648 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.238519277 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.05549976 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.060217262 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.060130056 seconds)
  done (took 2.842845424 seconds)
done (took 15.108155073 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.073558023 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.075642699 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084103437 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380351939 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.085902216 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.060038008 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.106805351 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.171744927 seconds)
done (took 2.458577727 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204741767 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.283633756 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.728721741 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.055954611 seconds)
  done (took 3.475631773 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318853622 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077972946 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.070845121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.058328214 seconds)
  done (took 1.944146568 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.058891061 seconds)
    (2/2) benchmarking "read"...
    done (took 0.064387541 seconds)
  done (took 1.537867644 seconds)
done (took 8.580713585 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.05816709 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.056493247 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081663896 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.05562772 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.055105263 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.055896017 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.055622936 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.056029189 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.055715642 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.055169131 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.055163622 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.05514675 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.055621108 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.055799943 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.055515175 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.055687982 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.055408904 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.05529341 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.05580432 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.055663851 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.055671645 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.055404798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.055720722 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.055515037 seconds)
  done (took 2.800735904 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.074686762 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.059911523 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.060719877 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.060346312 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.061353844 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06074809 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.060690966 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.059137083 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.060752621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.058985778 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060774568 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06118223 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.059205208 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.061152571 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058357449 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.060794182 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.060718824 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058743106 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057455385 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.059982709 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.059095771 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.057668903 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.059621896 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059690882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.059840603 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06023894 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.057694229 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.058290787 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059310245 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.059872428 seconds)
  done (took 3.239928899 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.057527815 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.050314304 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.051414644 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0612965 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05099247 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.164881166 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.05150977 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.05056506 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.051179666 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.0523416 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.051178805 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.05046862 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.051517512 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.050614145 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.050762866 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.051818697 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.056362147 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.071215953 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05084063 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.050342623 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.056148346 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.050813051 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.05045876 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.050908478 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.051400831 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.050476885 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.050387007 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.051249576 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.050875116 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.051381482 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.051137385 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.056034847 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.056970755 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.050869551 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.061296922 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.056760294 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.050830988 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.056225252 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.052292382 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05079512 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.050776846 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.050652825 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.050446644 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.050545884 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.060978273 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05128267 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.051899267 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.0516338 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.051260896 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.050522024 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.050588256 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.052767946 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.057464995 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.052337642 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.050665653 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.051919045 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.050195878 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.051754649 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.050809802 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.050060733 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.050129085 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.055165631 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.052246692 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.051057638 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.069761398 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.052070498 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.060615104 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.050175703 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.05151438 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.05806505 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.050986813 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.067319581 seconds)
  done (took 5.370178721 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078893769 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081351943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.056983794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.056982463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0512358 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05099281 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.060583918 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.050956479 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.057459636 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071442356 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.051173422 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.056822056 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.057045575 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.056675522 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.051558743 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.056881392 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.060777096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.051504389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.051020141 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.056278733 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0513842 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.060682687 seconds)
  done (took 2.719608342 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.133680737 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060352052 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.09660762 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068822524 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061631332 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069090645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.058540526 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.058616406 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058317509 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058930711 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059213513 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058470792 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061267483 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059318012 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059117103 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.058686982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058674667 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.058798809 seconds)
  done (took 2.630379385 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071414265 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.059771357 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08128622 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.059455029 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.058622373 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.057981671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062335107 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.062930249 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.057491255 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.058037402 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.062727152 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057852711 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.05788911 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.057929271 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057673541 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.057868176 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.057334836 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058107499 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062506849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061908862 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.062032018 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06249464 seconds)
  done (took 2.780056395 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068512902 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.057463064 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070200087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.058503544 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.051478627 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.051466921 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.058606047 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.057373805 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.058243062 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.056697261 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.057525618 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.051193018 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.058625725 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.057302465 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.059054176 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.057239847 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.05671399 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.057508813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.056929463 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.050858656 seconds)
  done (took 2.587367506 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080343142 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.054167383 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.054165485 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073776381 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.053853225 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.053839832 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07393225 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.054023411 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.053766124 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076455662 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.054726134 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.054051831 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073731119 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0739023 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.054617553 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073600105 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073469388 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074196756 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.054076422 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.053999144 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076431463 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.053902909 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073937958 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.05384349 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.054154266 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.05401138 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.054080603 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074175917 seconds)
  done (took 3.201351551 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.05817898 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.055214058 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.055602349 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.055202569 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.05533173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.055338593 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0554373 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.055791997 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.054934276 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.055421409 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.054977856 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.055140372 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.055305262 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.05488927 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.055182061 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.055068433 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.055195565 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.055439401 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.055670867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.055412764 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.055217425 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.055468975 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.055383998 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.055864313 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.055623945 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.055519614 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.055792044 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.055648331 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.055107598 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.05584243 seconds)
  done (took 3.107106794 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.065910737 seconds)
    (2/2) benchmarking "in"...
    done (took 0.06335238 seconds)
  done (took 1.572079887 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.054738853 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069537489 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.050504421 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.061941712 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.061477871 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.05642163 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.062324447 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061221716 seconds)
  done (took 1.914389609 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06065099 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08125824 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.053416724 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.053791436 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.056612501 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10421132 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.068690309 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.063588517 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.065715526 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.058673651 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.053170523 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.066140223 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.052215942 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.064957437 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.055013118 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.061553632 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.059582919 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064508672 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.065038829 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.050982794 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063859473 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.053277098 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.051636724 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.05377108 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.052624881 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.059483419 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.067842952 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.064614071 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.061378144 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05041503 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071456233 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05146388 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.052424154 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.061227193 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.056244222 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.051582318 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087348137 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.051735506 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.05743757 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.051329033 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.063780622 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071280741 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.065047155 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.068967189 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.053341499 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.053725693 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.051038933 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.053311432 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.056059896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.060874667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.051098519 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.059006734 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05088268 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.052872549 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.061986515 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.051331042 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.057302579 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.061177093 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063778875 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.064541506 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.060276812 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.066008687 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.060579065 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.060393271 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.05234982 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069949168 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.053260221 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.063955868 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.065633014 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.052583085 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06445641 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.051007326 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.050026519 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.051615939 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082667215 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.053008738 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.052431936 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.051558944 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.051524476 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.052848879 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.061261014 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.057412603 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.058908906 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.055194136 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066877123 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.061020426 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.051245329 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.059244219 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.068963718 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.055395124 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.051507204 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.067995281 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.05549959 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05116313 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.062526015 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.061096434 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.05346864 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.052221246 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.055791772 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068773371 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.05289178 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.050358336 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.060001888 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.05318044 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.054569085 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.056499274 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.059590238 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.050896065 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.061480263 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.056793418 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.053171607 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.050323816 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.056552264 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.052793847 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.049995565 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.061217629 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.051494615 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069647021 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.058215874 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.065501922 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.065580494 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064796027 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.197089547 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.051599135 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.050448643 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.069419913 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.061978906 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.053212808 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.069210425 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.051356089 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.065193896 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.051666811 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.053092543 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.061207332 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0505412 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.053306296 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.051419378 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.057943004 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.053231953 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05366462 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.056534753 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.059846557 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.066612705 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.053070459 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.060467721 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.052209234 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.066948413 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.063856418 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.056653968 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.056019403 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.052450603 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.066514927 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.058619165 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.060891284 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05144014 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.052222613 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.051330871 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.061950877 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.061597101 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.05284086 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.060108958 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.056752534 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.052137996 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.051356554 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.052299707 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.055897332 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.056741707 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.052564008 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.059319735 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.060654781 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.068731405 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06245709 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.060731663 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.050992595 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.051463627 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.053527202 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.051352219 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.057210851 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06175003 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.066377701 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073259346 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.065708213 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.051714265 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06410327 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.05360649 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.062131672 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.065255175 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.052514932 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05688831 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.050469329 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.053489216 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.061486085 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06365288 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.068361839 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.065594883 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.056479946 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.056609364 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.051118624 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.065801939 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.051569811 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06025312 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.060921497 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.056634071 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.051225742 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.053272124 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.060905888 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.056696685 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.051883831 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.066745669 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.05856947 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.051187205 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.065565526 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.051925726 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.063195748 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.051195172 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.055284507 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.056786144 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.053489496 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.060633396 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066442035 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.050081238 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.052053009 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06651085 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.053464234 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.053623805 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.059296905 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.065917369 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.05693561 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.059386942 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.062157817 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.061800825 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.056785376 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.061510109 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.052641431 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.061203565 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.055206037 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.063936765 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.051431825 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.069543202 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.050546686 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.066602746 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.052207547 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.063271157 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.05191 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.061889034 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.052803135 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.06837844 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.053326593 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.186052684 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.065377896 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.050867617 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.062546304 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.052043418 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.057859217 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.058873729 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.061715255 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.053849815 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.061634739 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.053455434 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06013323 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.057193644 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.060826166 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.061529036 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.057141152 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.051155472 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.060656652 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063736983 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.060370873 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.053478785 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.053002113 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.052032565 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.061211538 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.052685417 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.053261566 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.060214222 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.057346912 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.058851877 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.053353512 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.053645947 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.05356192 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.060628153 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.062067529 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.069048659 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.060472101 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.059339611 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.061011905 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.051410698 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066976573 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.051415761 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.059222465 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.050327125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.058648632 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.061418398 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.051275077 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.070320475 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.053075646 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.059628707 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.063016066 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.060179049 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.055772845 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.062701711 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.055269232 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.059805375 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.059994689 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.056923206 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.058752537 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.053495614 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.059859918 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06155599 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.062637257 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.052516943 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.059312882 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.060459535 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.053311186 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.060699094 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.053432051 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.059970109 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.053179332 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05056786 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.056981867 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06335792 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.05722604 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.057225733 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.051633617 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.050108842 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.05184581 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.059509654 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.056658278 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.060291434 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.066289511 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.050266855 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.052496585 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.051507491 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.055904798 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07162713 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.061934847 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.059350725 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.057320622 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.050671552 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.053355305 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.053550933 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.0519369 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.055502298 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.050489069 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.050886555 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.061992304 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.053155866 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.056581161 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.051411355 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.052549853 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.063930715 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.056893038 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.051787179 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.058207092 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.051163228 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.056867706 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.050352537 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.053090809 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.056742161 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.051151345 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.056033945 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.064642449 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.0672578 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.058792122 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.060764837 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.052370389 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.059816199 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.066481897 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059897345 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.052478111 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.061246311 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.050801173 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069625506 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06121932 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.059945436 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.199152998 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.053385896 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.062689076 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.05723333 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.062592287 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067213485 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.053665524 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.059568917 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.051715555 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067340774 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.057003783 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.051210655 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.0603667 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.059676828 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.058242645 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.065024303 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.052854846 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.059944308 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057261281 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.056012682 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.053590918 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.053558477 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.060196425 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.060960198 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.052806085 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.056530097 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.060410245 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.05986163 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.05685563 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067232406 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.060103319 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.052881592 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.053821504 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.056079239 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.052493844 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.066661714 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.052232643 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.056848276 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.057006979 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.051192937 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.059132152 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067733103 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.061233416 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.062232444 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.051250921 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.051027544 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.068945276 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.05557601 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.055390188 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.060112612 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.064078293 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067569175 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.061230862 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.062016339 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.052381791 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.058293387 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067425743 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.05237463 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.051347982 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.056022811 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.053177196 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06083889 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06174449 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.05947861 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.053773404 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.058998495 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064773875 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.05316198 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.057057668 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.057099092 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.052438896 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.062333458 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.059842243 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.060145614 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.053153571 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.051154895 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.055711429 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06060626 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.059049306 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.061113779 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.052421929 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.059562696 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.068921946 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.05907885 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.055200607 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.051439369 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.055367237 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06084244 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.056782329 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.051588413 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.057022547 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.055686089 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059513415 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.061235796 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.05680882 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.050869694 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.061867354 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.060029678 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.060883893 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.053535659 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.053560971 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.05164072 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05123314 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.063242775 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.051158315 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.053614545 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.056905309 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.05330673 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.06917465 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.060011525 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067212833 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.052762316 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.056790056 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.051466904 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.061119192 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.05709844 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.051639625 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.062528674 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.051076176 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067119592 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.063942921 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.058051947 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05422514 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.057082882 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.060491136 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.066517426 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.198125845 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.061430278 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.055961741 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.061819949 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.054159443 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.063298566 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.051377257 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.050718188 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.062798865 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.060450197 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067480826 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.051726783 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.062294336 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.054059568 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.060523285 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0603837 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.053639611 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05375611 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.053924746 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.062062126 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.056791803 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.061320189 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.057285048 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.068043107 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.052987146 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.06294108 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.060589536 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.062893081 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064758166 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.063394055 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.060562712 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.05233111 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0595135 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.060270376 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.05272264 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.057059135 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.05524633 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073548478 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.053358445 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.053567041 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070308162 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.059215943 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.051559136 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.058979769 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.056737393 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.061975878 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.052611534 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.064727934 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.056274265 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.052795938 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.057378862 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.057356586 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.050554645 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.051734716 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.051666632 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.062051505 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.057237107 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.051956616 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07065191 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.053617346 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.060177613 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.062978072 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.058646734 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.053597351 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0503772 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.052748395 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.064500607 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.06625511 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.056376906 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.060315823 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.053427019 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.061428596 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.050482971 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06076592 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.059971558 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.060170653 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.051444368 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.051757819 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.065886721 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.066278489 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.057261006 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.061692097 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.060987389 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.053433296 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073818922 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.060377743 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.052805203 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.062908119 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05470877 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.051166839 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.051048619 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.053756243 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.064141528 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.051430529 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.054613726 seconds)
  done (took 36.639163752 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0954011 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.053380778 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.051791619 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05143336 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065048092 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.052634302 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.051336762 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.052737811 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.052887913 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.054781919 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.051467541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.051392612 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.065071719 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.067783585 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064402363 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.056458086 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.051753833 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.052753316 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.051332835 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.052660062 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.064251399 seconds)
  done (took 2.755118668 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.061420202 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069109652 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065544359 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070836225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062009241 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056718345 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065426426 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056708288 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066198563 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061447376 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.065721837 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056254523 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.062192167 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06166405 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061807744 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056699926 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066048151 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061891375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.056427071 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065146321 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05661146 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065430716 seconds)
  done (took 2.887142367 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.055219223 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.053526194 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.062385183 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.052248861 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05168008 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.055209717 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.05095631 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.05619155 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.056172768 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.056263194 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.060728587 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.052075741 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.050920468 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.057405403 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.050574963 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.051975046 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.095100552 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.052048008 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.052011084 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.050774693 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.054159558 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.063369112 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.050706542 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.050969054 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.056282228 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.054661125 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.05102151 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.054003879 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.051648825 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.056422186 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.052135324 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.050809682 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.060663271 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.059480333 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.056433265 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.056106017 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.052674456 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.052029441 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.050931463 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.051032661 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.060027915 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.052532522 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.051328679 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.052719247 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.060610221 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05100385 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.0508282 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.060120396 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.050969351 seconds)
  done (took 4.217581021 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.066721676 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10174779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.058659947 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.080336538 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.066831667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.058427824 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.05857911 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.080956424 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.052486924 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.053436661 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.067924682 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.06802081 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.054772411 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.056624414 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.060507435 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.054736798 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.055628754 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.05402493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.058087171 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.054409488 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.058242023 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.060007098 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.066827868 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.067705688 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.056130001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.054274985 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.054473597 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.056417473 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.066971091 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.058451709 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.056369948 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.05702771 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.067276519 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.059066754 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.054128452 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.05441983 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.068159534 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.054809807 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.054641174 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.052864532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.05459201 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.056524542 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.059932971 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.06887973 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.054981487 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.060695092 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.054747781 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.052075881 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.067235543 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.054342996 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.059383308 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.068372869 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.055648672 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.055165198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.056441748 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.067487455 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.054802594 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.052997986 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.054925111 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.066760987 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.053195472 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.055455807 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.067881855 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.053880915 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.05868119 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.068263686 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.060574282 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.056151459 seconds)
  done (took 5.739439744 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064925864 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.086250834 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06672789 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066759899 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066012961 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.065064574 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064217729 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.064279387 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06421283 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.064914491 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064081383 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102813 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.059871948 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.069228082 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.064267187 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064387516 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.06426807 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064073695 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064250545 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063913849 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.064423885 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.064612806 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06407936 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.064997437 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.066912591 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059838644 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063897272 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.064035531 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064401641 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.063646276 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.06707379 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.063898679 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.063971708 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.065090868 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.066777948 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.063779955 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.051900963 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063720046 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.063796049 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064007112 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059692464 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064543491 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063726477 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.05942854 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064171206 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06382444 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.064662507 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.066814966 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072637216 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.064618492 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.064699436 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064403886 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063689206 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063776696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.064568217 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.072556536 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064834269 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064634944 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06387293 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.064823785 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064843025 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.072319317 seconds)
  done (took 5.617406438 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069943407 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059977404 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.072317569 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.051387422 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.053842049 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063155112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.051261555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.051706058 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060067898 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.059762068 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061691528 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062988552 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065421595 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061494672 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063285808 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065545568 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062978154 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062697804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059533584 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062884621 seconds)
  done (took 2.773566721 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.067577352 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070304158 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.058502989 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063126064 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.056987339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063329809 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.057874144 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057258615 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058142182 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056866853 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064236926 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064346298 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.057332334 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063114722 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064175614 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063068975 seconds)
  done (took 2.518209169 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.061961417 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.062399801 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.061691912 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.053555291 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.058160176 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.052393374 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.052997342 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.051227108 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.051969313 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.067413408 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.052982103 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.065532007 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.053008161 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.051971684 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.052447686 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.060114366 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.051711821 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.052958291 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.052499901 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.058153388 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.060844485 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.053916487 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.058068791 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.052817524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.059325712 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.061717517 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.054563022 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.05775215 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.052855931 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.053338088 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.05960121 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.061192028 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.052342202 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.053446147 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.051671387 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.052864176 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.052411919 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.053089193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.059685513 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.052713448 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.050951225 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.059336084 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.052927275 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.053957539 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.051850338 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.053318079 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.051758395 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.059677853 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.053284231 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.059626109 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.052618128 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.054874272 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.053199155 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.061578403 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.055254688 seconds)
  done (took 4.598831764 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070320439 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060265113 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.052309537 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.052193835 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.057966653 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.058961621 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.058711895 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.058105482 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058855506 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.051133982 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.058877193 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.057586342 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.058578569 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.058594436 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.058524929 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058670054 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.050881123 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.058246089 seconds)
  done (took 2.588135134 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.065971015 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.059936561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.064363115 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.05934208 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.057641425 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.057567553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.051855724 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.051785473 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.052031799 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.05810107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.057789654 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.057620782 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.051749827 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.057860288 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.058097729 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058258768 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.057680955 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.052139393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.057756622 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.051881316 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.05756772 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.051745818 seconds)
  done (took 2.786524213 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.082117789 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.076639352 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.114924771 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.070067139 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.078248599 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.063076721 seconds)
  done (took 2.025076582 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084405076 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098280838 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058246749 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.057914216 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068482392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061279741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.061398258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.061489295 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068159002 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066210818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061636213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068526359 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068183736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063526959 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068244481 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071116711 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061712993 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.061388857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.058086693 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071132386 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.061664926 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068446944 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061793209 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.061224645 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061678927 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06355112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071277015 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06627526 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061538865 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070926117 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07156152 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.061442956 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068774724 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066439808 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.058045195 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068486735 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.061872298 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071654191 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068959084 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06377154 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0582181 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068702159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068855585 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063971896 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072036439 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062019751 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063999206 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062230225 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06177755 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073965443 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068883637 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063792706 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068548478 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071742046 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071726852 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073924493 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066456153 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063722592 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068478528 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06648062 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.063787892 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068632611 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063971347 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06634111 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071403582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063670382 seconds)
  done (took 5.936213248 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092035948 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058472833 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.062382921 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066760875 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064031733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062074665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062092984 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062000824 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062176175 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.058680278 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095393182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062415655 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064262403 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063911163 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0620666 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061824855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062144545 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064010515 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.058485136 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073974919 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.061971434 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063925463 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064052357 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06369632 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066545339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071431926 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.061605734 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062003987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061670716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.061866516 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06392081 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.061817006 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064174741 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058581392 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064040167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061942282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.061564044 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063902372 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061449408 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068533502 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063741699 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071241054 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.061665673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.061531066 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066256057 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061932677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061827845 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.058472551 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.061939813 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.058614772 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0668815 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066818325 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067078769 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064433683 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062122475 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062352466 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062254078 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.062337177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062173968 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071896873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064048836 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061799209 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074446613 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061707083 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061901496 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06384578 seconds)
  done (took 5.825466269 seconds)
done (took 120.244416196 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211416393 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182771026 seconds)
  done (took 1.92709427 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.065415111 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.085648035 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.064001001 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.122556138 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.059961257 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.094322907 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.093512509 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.064542719 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.059625893 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.059943336 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.059893542 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.062552058 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.126415121 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.060067566 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.059934157 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.062494689 seconds)
  done (took 2.751106427 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09813867 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166395339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099859593 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.060038488 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095259969 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.067506574 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.060039874 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.069392561 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.063478059 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06291257 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.066873803 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.065201015 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.062770381 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.065034368 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.063702317 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.067387378 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.062766794 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.06740576 seconds)
  done (took 2.925320858 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091894429 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.076391303 seconds)
  done (took 1.732235269 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.146538653 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.096197719 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.134667375 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.308218148 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127681372 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.266367595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.121818201 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.120165007 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.102594289 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.11658127 seconds)
  done (took 3.098027632 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.093198063 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.137218683 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277431907 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.106201414 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.065923349 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.078735777 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.107876397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07247803 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.070737696 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.070088486 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.070385358 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.06798969 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.088441466 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.065344749 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.067662135 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.067639037 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.089268107 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.066655048 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.05968273 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.064921512 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.090839602 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.060768129 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.065766336 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.067208588 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.06923625 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.068716171 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.061685813 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.060489956 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.06527763 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.059489073 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.065566671 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.072081867 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.068542812 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.093259709 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.064695476 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.094464311 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.06567972 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.064755629 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.059682763 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.064907635 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.066278768 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.066196886 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.069151476 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.067050507 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.061450674 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.06562 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.061669311 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.060280729 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.066117659 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.061524153 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.066428877 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.065396393 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.093265163 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.061720625 seconds)
  done (took 5.692779999 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100153763 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.095915523 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062569687 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.103816126 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095655081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.061589692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.09452723 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090511557 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.097187645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.060870953 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.060748532 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.060553483 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.067646539 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.070090357 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.105557656 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.09777061 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063133605 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06098692 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.097043797 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.096546916 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.059991149 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091730615 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088759999 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.096514255 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.059281566 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.061597518 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.060041287 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.060359664 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.06485043 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.066195147 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.060157917 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.06690613 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.072123952 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.066162646 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.059592281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.05966108 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.059824683 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.066609828 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.066995495 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.066986473 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.065256803 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.059293013 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.059747219 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.060041426 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.060883488 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.058831386 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.065673436 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.06660216 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.065452218 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.059641801 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.060230658 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.059579974 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.060134327 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.066473157 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.065363948 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.067361422 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.066844177 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.060009977 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.059864946 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.061739913 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.067711365 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.067700216 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.066896347 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.061010889 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.067714924 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.060157981 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.068208976 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.071971055 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.05971507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0603876 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.059831827 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.059777848 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.060696265 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.065789447 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.066048551 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.060687986 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.059816586 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.059854108 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.067716159 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.065324637 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.05992866 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.064521766 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.05886818 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.059890315 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.060202585 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.060714437 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.064490601 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.066751263 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06039761 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.059433542 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.059888186 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.059792781 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.059046674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.064746241 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.066345041 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.066442514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.065709998 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.060343632 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.06629093 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.065499003 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.060724192 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.065768751 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.059901799 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.060436595 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.060348353 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.065932357 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.065234175 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.199089309 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.060541775 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.060472931 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.066154344 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.068748129 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.060792916 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.066041428 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.067965746 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.066523251 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.060097216 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.069031549 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063058757 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.067922558 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.060826806 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.068200298 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.060299354 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.06593045 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.060811857 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.059851148 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06073962 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.066588136 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.061217833 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.060573185 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06110138 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.060697192 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.066937096 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07037766 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.060918371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.066123025 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.066242683 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.060979678 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.066028801 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.060421628 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.066944054 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.060206028 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.060505717 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.059481433 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.06836112 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.060127565 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06016439 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.060193822 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.067525629 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0601995 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0682739 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.064948342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.059590294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.069396213 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.067719158 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.065730447 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.068238098 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.060698485 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.060049038 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.059797921 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.05978865 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.064949517 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.066279443 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.060571821 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.059946323 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.064922648 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.067952568 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.059489829 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.065581107 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.065420191 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.065848202 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.060240612 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.060303865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.068595812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.068287961 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.065805294 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.065812251 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.066365742 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.060522863 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.065247963 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.06574585 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.060207876 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072072763 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.060137906 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.069820725 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.066235876 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.064817815 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.06627214 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.067486556 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.067685078 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.067978225 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.070445452 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.059387031 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.059755919 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.065667936 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.060000842 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.060105947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.065739365 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.060487987 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.060340635 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.070036191 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.060166305 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.067594645 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.05928426 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.066613252 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.059094661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.060511422 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.070284135 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.059902217 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06051027 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.065615551 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.059946149 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.065711569 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.068227165 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.065395692 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.059924438 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.060760109 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200496567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.067364906 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.060368091 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.060720692 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.061340635 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.066222202 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.065290359 seconds)
  done (took 16.549948905 seconds)
done (took 36.24944454 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.194062804 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.145982102 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.170554062 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.107131009 seconds)
  done (took 2.271088128 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.09338218 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.090995799 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.070446749 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.057088166 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.075905216 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.057182089 seconds)
  done (took 2.052814377 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268549503 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.182774666 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167712591 seconds)
  done (took 2.218285912 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20635797 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18703493 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.450610694 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.270951628 seconds)
  done (took 2.814647117 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.12896649 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.072730241 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.054579426 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.065059715 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.103884376 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.12322472 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.081621896 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.100509954 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.065521162 seconds)
  done (took 2.45745313 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.125650975 seconds)
done (took 13.53357151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.095228697 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.243848601 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.063786499 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.139603331 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.228624375 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.060450944 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.079468053 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.062789204 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.198161106 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.131363755 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.16122878 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11275525 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.151728312 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.200121064 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068773427 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.0679002 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066548629 seconds)
    (18/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.070769576 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.080320322 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109276194 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065819821 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182775432 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057800593 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169286159 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.066109189 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.102724394 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.164807867 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10862249 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151669617 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.057249352 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070729631 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065591342 seconds)
    (33/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.167620182 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.233081515 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.066609194 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064208168 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088813073 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115934369 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066347659 seconds)
    (40/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.16216375 seconds)
    (41/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.07989398 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.067261774 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180099262 seconds)
    (44/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.241792414 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09075126 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.200627452 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.066571766 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076664423 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.056783746 seconds)
    (50/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.163448585 seconds)
    (51/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.134446933 seconds)
    (52/309) benchmarking ("sort", Int8, false)...
    done (took 0.167322515 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.16205653 seconds)
    (54/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068445389 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.059753532 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.185629991 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.069302312 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.148411896 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117059973 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.060517742 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094768853 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186194734 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.057486988 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.179614086 seconds)
    (65/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.080447336 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.057124793 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.204713475 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.076010834 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.067815405 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163076583 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.072237552 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.056729334 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.066425346 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058696159 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.082993963 seconds)
    (76/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.063159323 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.277878675 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065931139 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.05876935 seconds)
    (80/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.187370137 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.057172716 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.059442245 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.176299627 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.233584258 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.156205921 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.085866464 seconds)
    (87/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.134374247 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200685373 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149627092 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.163167666 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.159336518 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068909458 seconds)
    (93/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.057859493 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.067073425 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07772769 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066844026 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.067162032 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.082604516 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.152577074 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.073112886 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149428321 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.083961318 seconds)
    (103/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.132903516 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.126341995 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.066356447 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.165535469 seconds)
    (107/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.129162672 seconds)
    (108/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.060673628 seconds)
    (109/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.057764431 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.059897109 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.084811083 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059526521 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.181232601 seconds)
    (114/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.131081572 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.063892058 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069134607 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.067369629 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.058111323 seconds)
    (119/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.06486905 seconds)
    (120/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154186952 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068832447 seconds)
    (122/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.067666222 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.060131295 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130677459 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.060012453 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.059877574 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.068250658 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.066597575 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.056666966 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.084408574 seconds)
    (131/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.159279449 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.057559785 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.082469419 seconds)
    (134/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.05743301 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.154589987 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.117105371 seconds)
    (137/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.059872938 seconds)
    (138/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.063976874 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066242402 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07486645 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.158317963 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.188744601 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067404693 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.060134289 seconds)
    (145/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.05757591 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.068476841 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06172102 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.080433683 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.066635303 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.130068642 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068034486 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.115232198 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.057614861 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063961823 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156616504 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084277066 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.062127418 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.065734445 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.059344345 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.078639896 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217605175 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.173838343 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.05649774 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066045999 seconds)
    (165/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.061669855 seconds)
    (166/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.059504305 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.063823992 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.059692462 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.129404852 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120364014 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.124152432 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057421709 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05963387 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.058727149 seconds)
    (175/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.245050116 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061071276 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137738387 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.058075071 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.057587815 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.061158599 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.058177884 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154914851 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057887964 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.057988149 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.061573503 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.080495452 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066731951 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.06462041 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.059814287 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.340490234 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058825989 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065179027 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057692733 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057747439 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059764525 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057980981 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06759784 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.069362833 seconds)
    (199/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094620442 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.05719137 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.082566226 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.125048303 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.058135968 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.057109458 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.062498102 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.058396192 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05847512 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065136242 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 0.127758183 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.1181275 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.105322274 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.070789413 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.058469966 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057534122 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065150469 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.057189004 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110334698 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05764336 seconds)
    (219/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065544737 seconds)
    (220/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064177777 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109447751 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057661861 seconds)
    (223/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059553774 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064246221 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.057736356 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.060346592 seconds)
    (227/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.059252408 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058169989 seconds)
    (229/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.129300793 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.068685572 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.069182729 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.06844382 seconds)
    (233/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.057679661 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.129732073 seconds)
    (235/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.06614567 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057569447 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.05653375 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.071740396 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.0656504 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057494971 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.057342016 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060481546 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.057905587 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059485839 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.057798732 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057778925 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.065723593 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058286157 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.058388582 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059377264 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.056745994 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.079463376 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.057255219 seconds)
    (254/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.057275917 seconds)
    (255/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.151489663 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.05649451 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.064458647 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.059861638 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.066141645 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.057221681 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057521462 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.056735147 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.058924672 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.082796715 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057700975 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.057224319 seconds)
    (267/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.066161236 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108787072 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.065422227 seconds)
    (270/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.057914731 seconds)
    (271/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.059513079 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.083089293 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.061124803 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.063892136 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.059654479 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.188609755 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.068989807 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.07761169 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064399478 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.05653498 seconds)
    (281/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059951868 seconds)
    (282/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.059580288 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.058192226 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.120924153 seconds)
    (285/309) benchmarking ("sort", Float32, false)...
    done (took 0.128606926 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.057128071 seconds)
    (287/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.059410103 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.057533045 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137102738 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136183982 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.067954268 seconds)
    (292/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.057203043 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.057299874 seconds)
    (294/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.060321342 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.058049459 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057470461 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.293734289 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061591216 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06267971 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.065902074 seconds)
    (301/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.071725332 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.061132442 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.078761853 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06037751 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058570471 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.057871471 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.058175953 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.061022648 seconds)
    (309/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.058410793 seconds)
  done (took 30.508167422 seconds)
done (took 32.125495776 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.078133086 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.081643708 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.065269715 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.077225921 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.072680182 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.089433131 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.065439991 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.071664577 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.072832785 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07224704 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.071057623 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06554222 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.065009528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.065708514 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.065175357 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.079985171 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.071920966 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.064305249 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.063975545 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.057149653 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.064381667 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.058096571 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.057077244 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.065420728 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.068889054 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.064896612 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.066978869 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.06474363 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.057472038 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.058259741 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.061903226 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.064437189 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.057405488 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.070171241 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.066588397 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.066580136 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.06554626 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.070203589 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.056892748 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.057774658 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071019764 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.05762272 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.064281845 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.063845762 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.062561792 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.057053214 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.063931999 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.071416535 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.079886371 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06154665 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.067663602 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.068482842 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.068958927 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.063430345 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.062909117 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.063672594 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.05738194 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.080198084 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.064595432 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.061569308 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.067493718 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.066785292 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.05688373 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.0640976 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.063803925 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.068582711 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.070613478 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.057245264 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070688403 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.064441724 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.057153284 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.06373765 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.062072829 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.057811101 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.068395551 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07135122 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.056946335 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.061909342 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.063930689 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.065480237 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.05758448 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.061431195 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.057336284 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.062465867 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.061392155 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.065548866 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.062652313 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.062952791 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.057339605 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.064740236 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.063162264 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.06426861 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.057489839 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07054108 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.057446396 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.057565078 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.0579013 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.057662443 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.056705587 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.062801069 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.05742377 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.061061574 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.065943924 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.056948736 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.062160248 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.070279506 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.057421105 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.063248982 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.056546264 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.056844101 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.069886197 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.067356502 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.057109626 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.061229877 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.056764071 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.056787408 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.056935803 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.057085804 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.057109826 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.057519149 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.062132956 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.05711531 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.061011437 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.056530737 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.070054479 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.057305731 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.061883868 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06111054 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.057412877 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.064201622 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.05784089 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.057189249 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.056555294 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.212842353 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.061837058 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.057954262 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.057817059 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.062155917 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.063847875 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.05694458 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.064853279 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.063772465 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.062589105 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.058187887 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.057264562 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.070589417 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.061716864 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.062098183 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.057021208 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.057894 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.057622655 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.05758864 seconds)
done (took 11.483461975 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.0629416 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.097409941 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.063824713 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.074241265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.072862486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.059135067 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.06283791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.076621542 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.060657911 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.07507473 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.078902222 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.077530218 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.082747728 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.058147536 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.058537099 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.059146409 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.056717508 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.064039582 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.073180284 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.075147487 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.08034766 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.058056286 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.06254904 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.072675211 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.066268346 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.074619824 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.058455669 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.058827291 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.060479024 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.073019583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.077489749 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.057496389 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.058712963 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.072796835 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.071882783 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.066439049 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.058638599 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.062708007 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.061276186 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.059493172 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.059283149 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.072463346 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.062390829 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.060965966 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.058952946 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.059314832 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.061931216 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.062291299 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.069092643 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.062434829 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.064050102 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.065986109 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.060783481 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.058726416 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.057872266 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.06298438 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.058473402 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.059193111 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.057532007 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.058250554 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.05727087 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.060465245 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.058903746 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062180628 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.059729204 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.06139092 seconds)
  done (took 5.953836172 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.075157044 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.087143254 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.070999551 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.071375057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.058253744 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.058708866 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.058560207 seconds)
  done (took 2.186146804 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.061204073 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.071399055 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.075203956 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.074426948 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.067215095 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.075868335 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.058576192 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087331225 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.057237584 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070674194 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.103356659 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.075598149 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.061537587 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.067650324 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.058424066 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.066339154 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.058619418 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06635229 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067321001 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.074569169 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.062793597 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085522929 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071458667 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.058741745 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.079222457 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.063510972 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.058137995 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.058624874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.059978804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.059615055 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.059682866 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.096470312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.063087899 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.067776798 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.056933701 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.058102997 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.064455453 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061743108 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.061637979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.066723745 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.064463598 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.059817196 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.057737702 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.059885045 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.061064467 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.062398333 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.057298172 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.059744988 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.059724376 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070107223 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.057313051 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.062968268 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.063034672 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.063701039 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064106195 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.063291114 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.066237686 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.05984378 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069894838 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.066273158 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.059514743 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.067567976 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.067193605 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.064580432 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.066748559 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.06265208 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.063025198 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.063976324 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.059340557 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.060854544 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06010599 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.066833973 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.058081101 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.060956574 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061798863 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.060121372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.062468106 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.074430303 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.074929381 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.068457656 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.059810584 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.060025025 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.062736874 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.074326697 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.063710415 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.059664936 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06176418 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.057613707 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.05785939 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.060112015 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.0642574 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.060052866 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.066485603 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.060627455 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.062061647 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.067263231 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.057905339 seconds)
  done (took 7.990280266 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.061494418 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.057937031 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.061357308 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.060135848 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.057555871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.058065886 seconds)
  done (took 2.102426541 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08403945 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.059485438 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07205349 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.05946534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.093031182 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.064942697 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.065331329 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067983552 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.065400441 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07125145 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.064571128 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.067299571 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.064048857 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.063492722 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.064335824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.060435455 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.064597354 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.062726764 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.070603564 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063772029 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.070710913 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.063637726 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063684107 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.070576896 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.060436675 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.060351186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.059458262 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.070750825 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.070522724 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.068145619 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.063312415 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.063223347 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.066369561 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.067869752 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.064902807 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.066249485 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.059824796 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.063467667 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.061462056 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.060709183 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.06711839 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064050961 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.062243127 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.063409014 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.067822429 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.066110921 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.06274351 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.060964652 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.064252354 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.063024946 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.063299302 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.059960186 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.060325601 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.06298019 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.066143395 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067652923 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.062746255 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.064575503 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.063051311 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.066186411 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0592321 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.060495869 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067437269 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.060205316 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.064927052 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.063354539 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.066353114 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064013957 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063549618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.05967414 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.063070075 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.059736156 seconds)
  done (took 6.382914582 seconds)
done (took 26.310706075 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.974034936 seconds)
  done (took 2.655499806 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.543817453 seconds)
  done (took 2.268337878 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.712616231 seconds)
  done (took 8.435719652 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.280475044 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.324063844 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.663136759 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.120423894 seconds)
  done (took 3.132499631 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.685221474 seconds)
  done (took 2.424159184 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224663389 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.212115748 seconds)
  done (took 2.168753219 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342738196 seconds)
  done (took 2.068321976 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.058641959 seconds)
  done (took 2.783593478 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226531133 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155225806 seconds)
  done (took 2.107983665 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443509918 seconds)
  done (took 2.172723057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.236410503 seconds)
  done (took 5.968608659 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229328731 seconds)
  done (took 1.98879475 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.228736806 seconds)
  done (took 1.962843436 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.702440909 seconds)
  done (took 3.42376533 seconds)
done (took 45.293748475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077272028 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.076015292 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.076340164 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07421165 seconds)
  done (took 2.005566985 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.068928624 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.062460775 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.066024079 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.067523736 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06386457 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.064833203 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.06511248 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.062034627 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.063551081 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.062039094 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.060539683 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.06225451 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.06635352 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.062392106 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.064896758 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.067436532 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06203349 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.062744542 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.064773721 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.062296998 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.066526625 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.062080096 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.060441363 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.061500731 seconds)
  done (took 3.258240895 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073041759 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.065222157 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.068236665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.063912464 seconds)
  done (took 2.005876135 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.070974551 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.07832857 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.079792436 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.084324267 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.068663146 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.069149454 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.076667368 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.077386496 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.057444371 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.080488404 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.060059788 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.058770431 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.058927237 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.078299661 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.076196976 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.053680215 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.054508412 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.069222786 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.067899519 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.070417807 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.059506678 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.05756035 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.06822562 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.067925768 seconds)
  done (took 3.375682569 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078761822 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.058237453 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084881594 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084342243 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086129404 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.057906585 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071789825 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.085907322 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122402024 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.057783332 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.057738959 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.057944977 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.092195043 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.057669705 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.072068251 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.097006469 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.100863966 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.058198119 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.08977979 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.057869507 seconds)
  done (took 3.274483957 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072591876 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.0615451 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.062599573 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.057887768 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.068663768 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.063291802 seconds)
  done (took 2.126370424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068213254 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.059810056 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063246878 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.058102609 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.064083318 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.057969292 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.057984678 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.059627259 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.059556823 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.057838675 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.057687868 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.057983631 seconds)
  done (took 2.453194571 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.154676755 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.061906027 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.062085176 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.058410582 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.061644223 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.057274424 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.074293272 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06036191 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.074597196 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.058232691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.058543619 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.060963133 seconds)
  done (took 2.575830162 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096575215 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122645263 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089133098 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.065085219 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161321359 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088128576 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.087535169 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.114776081 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087093893 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.062394853 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085401599 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128266001 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087724276 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.092271478 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076210102 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116227071 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101513722 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080082503 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104962931 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074420651 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.063560618 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125252849 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.062716497 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085621937 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094164146 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.090498042 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101888933 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125548396 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078624537 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.08230969 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075753778 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.067891713 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099055005 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.079393189 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.092406312 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087168522 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091196591 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079788458 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.079667938 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112938766 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146201002 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09319283 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093757454 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128736518 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071829378 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.100941343 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07447267 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092567858 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097315831 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086615283 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069264964 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085131418 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.099298979 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095274002 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.074823009 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075070555 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109972337 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.09159757 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088902447 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073201155 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102523811 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.080390528 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250405395 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113977508 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132436977 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105749556 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129190306 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116165691 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089493076 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.082024124 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.08400634 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.063239729 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103020513 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091135086 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128660235 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101892357 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093028719 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.08896264 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0773272 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100864563 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107580454 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0881857 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089251695 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138299722 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100696902 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085470586 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085681254 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.13245914 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.06474858 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139467267 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081535016 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115323381 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091258502 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130322468 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084555487 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.076459283 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101268109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09662925 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082546499 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09600706 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077326558 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105682384 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085530069 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094280155 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.074890111 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083934458 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080180091 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.091868923 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.070214612 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096048003 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108730666 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10601976 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.068542288 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101463395 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081121597 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075838307 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087137298 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13160444 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.076116746 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0687027 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142950221 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.086982765 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.265356518 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104657721 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078516253 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110814277 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129064353 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086143995 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084511269 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.069937164 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146028127 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.069352761 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111202235 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074973447 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095430426 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100502689 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124809926 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131589403 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089642782 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071713313 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085321864 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.097735334 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080258899 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079228137 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072305446 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10323658 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119110773 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.098390341 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074211283 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.086445805 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.063491619 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107146895 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069833595 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075926206 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089054916 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.080805652 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.085843823 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134937941 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.077473423 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101092726 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090572817 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.060534051 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084735669 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145347788 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07606089 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.105136818 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109443681 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077724556 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.062245714 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.089696159 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.067056267 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102477784 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.08915122 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102423948 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073989558 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100411878 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06255462 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068079421 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122863292 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096313474 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082760315 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.125744627 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101008757 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.082975974 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.250794119 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096338945 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090508245 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096842131 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.100978676 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098993568 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.063171819 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122310641 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084972966 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07067717 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080784552 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0725692 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077432173 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093455594 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108548897 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083646802 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094748258 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09637988 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084246862 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.103956194 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082338308 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072176634 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125051749 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.069546727 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.070044847 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083401888 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.099476631 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082006991 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.127178289 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.07808744 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129246224 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086097221 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075039094 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10900896 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.062720758 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.063600007 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.07683665 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088528347 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108860055 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072865089 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071542182 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111058456 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125754855 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091201159 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09627774 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.062227005 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085967659 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128300128 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.107018345 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077984258 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103056976 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077946938 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122915917 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091234615 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113872698 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09971125 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104236111 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.08510908 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.074820476 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.067187143 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081188692 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100410245 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079651871 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077355445 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.061933869 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.069071518 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086243506 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081346232 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262937869 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082119836 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128880976 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.067655352 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095829794 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101047523 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101755701 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083382298 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088748586 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.086302877 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085949173 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085145869 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086150177 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.067856649 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122793359 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098897455 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072140155 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082428858 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089576422 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100812678 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101092519 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102539853 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08744994 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100283165 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115155909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091967691 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07732554 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077988685 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.087726255 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078372584 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076404904 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.097454829 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106433527 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092120314 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102426292 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.087173355 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.086258433 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100132733 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086358504 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082307391 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.1103904 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145489609 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.094654458 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098708366 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07861945 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099927259 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09931347 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102315604 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.102414963 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102502243 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.064238884 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.068910534 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.064770309 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10033948 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075477033 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110695988 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.070401189 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102558723 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090361196 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074029407 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.060770976 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09518609 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084785829 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.07592837 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11624014 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109804247 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221747587 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085043902 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103927181 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077640814 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117895745 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.099461425 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096311864 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.066336535 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085450161 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.068769124 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103165097 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.096133123 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073320798 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.070841684 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.065729114 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101005973 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.077824017 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103498198 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085085773 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094890357 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115653529 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125234046 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080646044 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087159791 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111068278 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103547776 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.076335604 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106244978 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128698921 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.11675112 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.076350654 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.078005992 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100393774 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100066657 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095721669 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072048207 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073334785 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103919688 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107676157 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.062176806 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078641113 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.064246202 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.078979155 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105982954 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089065875 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.075888709 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111043506 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068552185 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101337852 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090389326 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116533458 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115844807 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13730384 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090353903 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079267753 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06677879 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11547021 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.064522404 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110784384 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106184997 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084014295 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.062634033 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077999226 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.090062321 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.621728718 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102530699 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.228729545 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129936119 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082156516 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109949481 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080432027 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.111476209 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083150954 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097768139 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085728676 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122252644 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.078237224 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102864038 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.168225417 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104099524 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.100730138 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.067601849 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.080310603 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.067442 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.073167566 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.071558109 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080966624 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101919608 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080372626 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098989314 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.07361862 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.100313641 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084193077 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082285219 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.094971809 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074584607 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131821692 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081480174 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11607692 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100616391 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072470912 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.070014046 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.081589355 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.096193033 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07594308 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088425655 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.074498094 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.071727198 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144395367 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095831166 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078923642 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09633371 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089485528 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.080110574 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085844358 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110235287 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10305682 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.062674454 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.078958657 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096976108 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074626755 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.070604668 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.090679392 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.063749903 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079609524 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092648093 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090000577 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083780268 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.0967662 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07192865 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082541924 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103242487 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235372373 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.066320783 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072768927 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.070788397 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.071335465 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097884201 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102590953 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107821876 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103330813 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085119171 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089178027 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.072298357 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.213860824 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074381403 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090547673 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.099869808 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071408918 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.12584612 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082187274 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083089592 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091545384 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094289597 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143679695 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.062322751 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102742406 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.084705903 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102780148 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081964739 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102275034 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08879833 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08713127 seconds)
  done (took 47.708709074 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089399868 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.13886987 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.150603457 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.076125379 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.088013388 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113233877 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.218716239 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184961846 seconds)
  done (took 2.927558294 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.062529632 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.073668198 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.095963308 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.075121539 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.059082346 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.059870254 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.197675478 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.073776642 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.058126374 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09516926 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.066803841 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.060431398 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411738877 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.058135238 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.058850006 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064747096 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.059327584 seconds)
  done (took 3.472821441 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364307298 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.784625025 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.329612586 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.065726185 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.491033188 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.081185021 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.707705251 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.15533939 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074083422 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.74002028 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.363519862 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148731047 seconds)
  done (took 22.160808409 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07059539 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.066648215 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.070631529 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.070822039 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.065963288 seconds)
  done (took 2.191246401 seconds)
done (took 101.273079478 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.074146013 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.158769346 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060406294 seconds)
  done (took 2.098408461 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.076586027 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07216609 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.071443835 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.069732817 seconds)
  done (took 2.148394508 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.068923047 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.068768645 seconds)
  done (took 1.989261615 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239217297 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159147438 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095221936 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078138956 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.073264981 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.073096903 seconds)
  done (took 2.080682981 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067633918 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.064495823 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.065329165 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.065532177 seconds)
  done (took 2.105680534 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063811488 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060177784 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062206989 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064715143 seconds)
  done (took 2.095379071 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.079340859 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.076801717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07108342 seconds)
  done (took 2.075198399 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.091050083 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089343607 seconds)
  done (took 2.030316583 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.07545308 seconds)
  done (took 1.923508631 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.108408297 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.095818973 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.143207608 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10318732 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140774184 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.124759278 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.066018217 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.064209814 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.065989565 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.065026081 seconds)
  done (took 2.825321825 seconds)
done (took 23.781691957 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074120397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.35740755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355380892 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078216009 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.661473695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.349264067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990908856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077508752 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.088705044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.061146157 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.076751562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.639752347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983333195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322832519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967609883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31656251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.642395971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.060016503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.059647431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.060760974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976823858 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.059831648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.060799528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.059897961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.642472221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.365751887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0614212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32097597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.059902964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06677897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.346881624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.061222589 seconds)
  done (took 16.127778755 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066470734 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.106731997 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068663667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.07583959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067306256 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.061850531 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.064208285 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.061767816 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.099324236 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.061477477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.077464123 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.060222873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.064507382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.062186465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.079948492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.060840592 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.061149064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.060281514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06042491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.061174108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.078337773 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062719661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.061295883 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.060204959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06068368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.073027407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.061778692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.060469565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.060516182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067444827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.063202612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.061775939 seconds)
  done (took 4.016524821 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116221504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.113176039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069975063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09896611 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.108366555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.062632298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140884061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078027822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103162222 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.061228328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.077352753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.060333881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.095262005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.062099034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.080086144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.060872655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.061886671 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0610811 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.061326598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06183545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0797576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.060741769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.061730157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.060994375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.062403582 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.075969568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.062421521 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.061095789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.061040601 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067748976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.064167913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.062611293 seconds)
  done (took 4.279579936 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.061351212 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.066203415 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.067204479 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.069300977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.061078894 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.059368356 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.05896654 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.060406542 seconds)
  done (took 2.370459623 seconds)
done (took 28.657524252 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.071909306 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.05906458 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.065153121 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078505973 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.065396567 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.06456103 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.056629217 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.065628128 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.065333699 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.063783145 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.06596639 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.059742887 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.057166728 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.056256152 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.064307031 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.058125498 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.065884733 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06417065 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.064276586 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.065334301 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.05688991 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.064703599 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.065450368 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.064723279 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.064031622 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.064197107 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.068638846 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.059585551 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.058292976 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.057076426 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.063480954 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.071503144 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.066032481 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.066849518 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.057767182 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.057853321 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.057570337 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.060264361 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.065385917 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.062341781 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.059308781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.062592857 seconds)
  done (took 4.479188305 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.0815628 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.083897042 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.076737473 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076212762 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093424657 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.076769851 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081192407 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073433258 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.071910718 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080773229 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069115375 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074946847 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073195806 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067038609 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07205534 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069310698 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074198394 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068261528 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072145495 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072123233 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080987933 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.066513515 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.069700478 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.073599248 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.068857694 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074683625 seconds)
  done (took 3.818421621 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070170225 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.078256622 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.084838291 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140650511 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10195349 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.072766066 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07420335 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086524445 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090029746 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.060484484 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.064409406 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.085338943 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087783276 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.066430286 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.096062115 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.076628791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.072524291 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.062514103 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.067126413 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089713881 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.080812741 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077759592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.085913617 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.076643631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.059793357 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.062908608 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.066402979 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.074250437 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.067259613 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.072000107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.064898576 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.063820019 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.061614573 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.071903957 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.065066055 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.05980637 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.084368587 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07239542 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.073407699 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09719546 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.06402352 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.061860315 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091638301 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122771139 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.060177944 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.064004831 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069578804 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.072318774 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.061864676 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088494211 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074909679 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.060303505 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.061002973 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06205625 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.061845596 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071663935 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06271516 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.062664828 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.071702295 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.063271904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08263937 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.066349439 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080165008 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.060459769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.070503777 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.062008731 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.061725371 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.059768941 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091617363 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.066631595 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108373309 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.061766896 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.05942867 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.072361685 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.070767864 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.067486192 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.060359777 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080104562 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071191565 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.064137493 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.069135484 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.063226229 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.063701457 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09161701 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06099582 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.060087712 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.05919772 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.063543887 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.063347742 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.061353563 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.074056395 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.060704914 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.0636494 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.07453061 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.060269682 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.061033326 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.06368834 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06254741 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.059886318 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072839465 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.064461794 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.061583871 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.072095166 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.061306685 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.062869806 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.073779632 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.067058899 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.059634198 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.061820246 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.062892299 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.061467476 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.063873399 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.063111821 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.05922283 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.066723789 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.066951941 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.065397397 seconds)
  done (took 10.174495568 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157142651 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.143362286 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.062014838 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.135991632 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.06787516 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.065803153 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.137058009 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.079542678 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.060911294 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.061419674 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.059937259 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.089021837 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.085277139 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.095236512 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.065244344 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.0609415 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083781927 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.091887308 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.139646069 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.134787559 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083409626 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.06716904 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.062370006 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.061845642 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.062031093 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.068699418 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.075620698 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.068542911 seconds)
  done (took 4.341596552 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073614111 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.08491737 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.064550944 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.071868967 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.079464351 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.060850079 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.062508752 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06234465 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.075054113 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.069281667 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.060979714 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.065233736 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.064415091 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.063303219 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.061124701 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.066816742 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.067166228 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.059861214 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.064335916 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.066912586 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.071602478 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08581752 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.064946796 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.060400527 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.062994992 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.060393924 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069606253 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.071650327 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06054071 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.075238352 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.058285559 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06491301 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.073095171 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.061338413 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.060056366 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.061106098 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06064136 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.060563278 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.060689501 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.058767347 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.058999388 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065665056 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.059503603 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.068167996 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073878129 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.067804927 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.062521239 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.063775774 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.058762668 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.058176456 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.063638908 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.062950052 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.062810669 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.067980385 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.064014672 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.058668218 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.061493968 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087308053 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.068050208 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062498342 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.060294157 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.059388752 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.062723166 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070812766 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076733651 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.062632881 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.059091549 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.060619676 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.065803689 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073816464 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0598133 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.061851354 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.05801041 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06073869 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.062769885 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.062646544 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.061527339 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.059082629 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.059913216 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.060811547 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061180245 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.060137531 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060973707 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.062587635 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.058492644 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.059106052 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06050005 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.061973652 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.068965049 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.059303492 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.063837141 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06111797 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.059042859 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.062601836 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066099684 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.062888896 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.073002578 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.070740921 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06114952 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.058908805 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.073720029 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.062838455 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.059623843 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.068625036 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.064324929 seconds)
  done (took 8.69661981 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08571407 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06077084 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.07722157 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.08264144 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.070370908 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.064381618 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.070901605 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.060003543 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.07648849 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.058134123 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.066803117 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.057551347 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.071748762 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07046114 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06008906 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.070849993 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.061373254 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.077528527 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.074435097 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.057361694 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.069379116 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.072140194 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.072466269 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.074338813 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.073383765 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.074560877 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.07199816 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.061339521 seconds)
  done (took 3.869265606 seconds)
done (took 37.234819001 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.949791418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.10488215 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.929360836 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.13876731 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.165210188 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.968549253 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.140522451 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.936846854 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.150728505 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.988846329 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.252714413 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.458873993 seconds)
done (took 68.116289603 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.960834967 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.10099106 seconds)
    (2/2) benchmarking "String"...
    done (took 2.202252206 seconds)
  done (took 6.178559597 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.173533194 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.779181346 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.20449597 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.936374863 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.940553836 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.387460001 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.734524457 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.399555624 seconds)
  done (took 32.260031329 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.126115986 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.153054376 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.671029805 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.66083825 seconds)
  done (took 16.528111915 seconds)
done (took 67.070961867 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.978629817 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.929650294 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.955770735 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.965811158 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.933610426 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.928232698 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.927778228 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.929102087 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.969332323 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.030199864 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.929420925 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.934289008 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.920832076 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.974680209 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.490629102 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.967450733 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.936474537 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.929504501 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.925503877 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.928106638 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.920628416 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.088501766 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.429507968 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.117189438 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.536902514 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.236910924 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.428039303 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.344317001 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.936607353 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.924920308 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.971670211 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.194242899 seconds)
  done (took 209.482438024 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.925907575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.699132382 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.796020671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.963631527 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.185439417 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.095948674 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.023662304 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.285146763 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.923147309 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.934457657 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.056655604 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.919929811 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.073305239 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.886455187 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.950877462 seconds)
    (16/36) benchmarking "herk!"...
    done (took 7.002041638 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.057744443 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.106997439 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.946592774 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.073105275 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.915549746 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.890534009 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.857777301 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.029155182 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.917765087 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.99057291 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.908709349 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.909178569 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.091227916 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.014335167 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.943822641 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.915590235 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.062752754 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.766645 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.901797634 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.930852273 seconds)
  done (took 173.814018661 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.100684909 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.905725533 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.900250006 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.960029635 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.022265539 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.899455639 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.560194705 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.913339447 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.993312354 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.901890319 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.899933115 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.89953003 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.900253728 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.911198406 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.980562998 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.896522904 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.916739796 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.90115442 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.927695304 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.900824196 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.899890007 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.899345057 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.90102063 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.897819296 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.896702933 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.900771276 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.440296752 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.142688251 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.901035101 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.897932402 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.909465211 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.911797082 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.974569966 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.899867835 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.986068454 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.954822945 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.010219242 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.899702312 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.115239835 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.969373583 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.899816155 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.897541291 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.957652276 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.911437852 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.897685648 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.897413407 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.901539991 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.961123356 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.134490694 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.899037328 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.019286144 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.380926169 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.899090679 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.8982157 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.896021079 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.899545747 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.491065023 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.896385995 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.899406392 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.895931876 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.897950149 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.904422702 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.901064241 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.894734298 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.89928852 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.28266617 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.965495933 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.126769678 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.593963376 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.901911206 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.346374496 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.045985662 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.894116172 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.893828799 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.892620265 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.896720683 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.893990001 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.90166726 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.015667321 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.901526298 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.020020662 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.981021616 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.01375702 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.894436476 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.909267217 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.716687255 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.965121852 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.936348565 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.719912977 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.898358069 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.268582752 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.670681289 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.896811402 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.894239144 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.906187337 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.896520104 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.89479297 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.899090806 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.974503503 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.89328442 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.014230903 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.616233626 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.654229763 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.907676993 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.898242433 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.897946176 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.914187637 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.97929944 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.020388905 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.898560313 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.966529555 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.904826529 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.903154509 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.978355205 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.899795081 seconds)
  done (took 415.748193401 seconds)
done (took 803.069492718 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.495299742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.45549078 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.544254498 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.473291239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.448530153 seconds)
  done (took 14.25839106 seconds)
done (took 16.10161679 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.916887376 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.90467187 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.953472926 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.978447773 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.909869229 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.916290193 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.003863289 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.914518216 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.945272581 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.953337589 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.007781199 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.982937491 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.923024654 seconds)
  done (took 27.148167599 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.906286645 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.061066654 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.146370023 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.941273645 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.910016116 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.143865363 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.964884056 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.051605441 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.048340467 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.133528241 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.145774712 seconds)
  done (took 24.29893175 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.91527237 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.057594966 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.147727214 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.945059984 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.915937145 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.133295588 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.969612162 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.049321445 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.05165833 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.137323234 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.141829974 seconds)
  done (took 24.317570374 seconds)
done (took 77.604166962 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.903653117 seconds)
  done (took 3.74371447 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.933880225 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.0661667 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.90264841 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.904283906 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.903401383 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.911094129 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.901127961 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.904730274 seconds)
  done (took 17.265577812 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.900517662 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.903447798 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.900216826 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.899659941 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.898526552 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.899267895 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.903864763 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.899154592 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.899977659 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.899200955 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.899521632 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.899397184 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.904694537 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.901756953 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.902390972 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.902338484 seconds)
  done (took 32.252934723 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.913972387 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.904020555 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.902317733 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.902070949 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.903063131 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.90537315 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.906949427 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.902387709 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.904594064 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.903656036 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.903018771 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.91305654 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.907198606 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.907781428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.906016113 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.907772327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.912108672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.910030317 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.914417059 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.905262624 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.907875704 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.907961468 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.908687717 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.90861076 seconds)
  done (took 47.612668106 seconds)
done (took 102.724689109 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.740357953 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.556774872 seconds)
  done (took 10.14720855 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.913745644 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.9051888 seconds)
  done (took 5.737062913 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.907726403 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.908034432 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.911905833 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.908332552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.9104033 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.907603518 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.910249959 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.908533474 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.911761746 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.909045887 seconds)
  done (took 20.938581334 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.908705051 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.90657364 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.911958068 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.911268197 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.911900321 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.914844431 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.913138769 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.915020868 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.911933903 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.911857299 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.907686893 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.911457983 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.911243289 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.908020502 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.911518425 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.913961551 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.911977867 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.913554073 seconds)
  done (took 36.250670528 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.910824708 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.912559046 seconds)
  done (took 5.676470977 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.908803993 seconds)
    (2/7) benchmarking "second"...
    done (took 1.914035257 seconds)
    (3/7) benchmarking "month"...
    done (took 1.913429151 seconds)
    (4/7) benchmarking "year"...
    done (took 1.911667942 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.91316453 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.912598451 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.913651043 seconds)
  done (took 15.236274912 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.912086752 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.075359998 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.140630326 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.812566132 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.912215379 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.91542953 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.234570449 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.913818228 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.916560423 seconds)
  done (took 21.679511098 seconds)
done (took 117.511212699 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.765863779 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.909833445 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.198465173 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.981430332 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.925655817 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.202715983 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.949475263 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.195362663 seconds)
done (took 43.980385384 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.908235411 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.906191724 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.149450138 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.947430479 seconds)
  done (took 22.850342703 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.928823342 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.350238787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.942476494 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.803889849 seconds)
  done (took 22.89943297 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.311042105 seconds)
    (2/2) benchmarking "read"...
    done (took 2.262027966 seconds)
  done (took 6.433240752 seconds)
done (took 60.943703612 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.915615871 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.915557596 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.916217815 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.913600461 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.916376663 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.913884036 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.916949295 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.913426023 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.915309269 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.916534601 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.915705382 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.914953785 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.916329743 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.916012652 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.916766925 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.916990139 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.912947369 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.914618542 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.914972711 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.915675036 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.917419454 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.914444668 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.915799934 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.916296155 seconds)
  done (took 47.826095452 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.918446496 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.913654534 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.916460669 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.916691248 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.915984008 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.922102393 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.918031448 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.916652649 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.916476113 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.916378705 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.915402745 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.915838412 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.917491929 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.915898453 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.91823249 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.918415909 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.919841748 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.918416929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917715324 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.916543418 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.918742927 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917781109 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.915541165 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.918213089 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.918625733 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.918830009 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.91515316 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.918484047 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.91599527 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.918635773 seconds)
  done (took 59.378282207 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.916745652 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.916918967 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.918175388 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.917885864 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.917737795 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.919263742 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.915394961 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.916827822 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.917610931 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.921053552 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.918128356 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.917195689 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.918164409 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.917331747 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.918400505 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.916633498 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.918578771 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.919170171 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.913171561 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.915509301 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.917759273 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.918945578 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.916331137 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.915688531 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.915809824 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.918794965 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.916076031 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.916627732 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.916039735 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.919388635 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.91658244 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.916063139 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.919479488 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.92051746 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.919177641 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.915734309 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.918663926 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.917861799 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.919962697 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.918688877 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.918459807 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.918166331 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.918466965 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.916172922 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.915912259 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.916856883 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.921969429 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.918904823 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.917782076 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.916082793 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.917515486 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.918282227 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.920053124 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.918393691 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.915472531 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.918295714 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.917291933 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.915871815 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.919200769 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.920654402 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.919658706 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.920983116 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.915948431 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.916621448 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.918234004 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.916432639 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.91778553 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.917904206 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.919597669 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.91655683 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.919535433 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.915792395 seconds)
  done (took 139.940315805 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.918339056 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.920862431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.918633126 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.920458328 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.919297189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.920064908 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.920075421 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.9175768 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.918728442 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.920857017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921621365 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.918520189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919400192 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.918712352 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.920361382 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.919789631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.918478216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.922533106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.917362623 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.918440558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.920349434 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.921759522 seconds)
  done (took 44.092300074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.920553283 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.920409677 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.921215111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.919804426 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.919306467 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.921749252 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.921493972 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.921966385 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921949969 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.919619207 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922180118 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.919836082 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.918458141 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917772748 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.92149231 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.921022938 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.918677641 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.922062774 seconds)
  done (took 36.430463317 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.923331823 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.919507356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.918661121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.92338616 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.921762692 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.920657321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.919634127 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.921981228 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.921611691 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.922368972 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.922802867 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.92181433 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.92334779 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921381787 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.924244838 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.922769725 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.922034675 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.924413474 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.924457903 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921181276 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.923844171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.923090976 seconds)
  done (took 44.148652689 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.924566575 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.927684608 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.92378653 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.924881627 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.921569308 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.921949368 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.922076733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.923164042 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.921508337 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.922227676 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.923932226 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.920115497 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.925288417 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.926468078 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.923956729 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.921493037 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.9235317 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.921381933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.924012027 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.924696787 seconds)
  done (took 40.333944242 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.926852166 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.922901108 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.928118858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.926041734 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.924673936 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.927537339 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.927235698 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.924461723 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.927220259 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.926925702 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.926995118 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.925956378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.926747235 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.926817345 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.926483354 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.928809148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.929837829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.928325907 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.927927305 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.927167974 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.926290672 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.928678868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.92858638 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.927560183 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.927757881 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.932311524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.929752691 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.927813688 seconds)
  done (took 55.829964532 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.922604935 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.924148698 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.924885873 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.924600858 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.925027959 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.923401885 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.923022365 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.925699589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.925044244 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.925479401 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.928666996 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.924961497 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.9275089 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.924425144 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.923567133 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.922022278 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.927335679 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.92496977 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.926057578 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.924830512 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.926929791 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.928204112 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.925888431 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.924077939 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.926539596 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.927074823 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.927009059 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.927026653 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.924468979 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.924068226 seconds)
  done (took 59.624487193 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.994690905 seconds)
    (2/2) benchmarking "in"...
    done (took 1.993806743 seconds)
  done (took 5.851981072 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.924922772 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.925357612 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.924763208 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.926138753 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.925605396 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.927824034 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.924609494 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.926140035 seconds)
  done (took 17.269772158 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.92704093 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.934734872 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.924881698 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.926081092 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.930022856 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.93858741 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.930824177 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.929162813 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.931865573 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.934497424 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.934855881 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.933539126 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.939808842 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.933573035 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.927614551 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.930621278 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.930930124 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.932793605 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.931161209 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.926833695 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.932095179 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.92992006 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.925198787 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.92792733 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.927566575 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.933003972 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.938560789 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.931837748 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.934437118 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.928158633 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.938462965 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.928021284 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.92876309 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.935820243 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.932489363 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.930612178 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.937785943 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.930786909 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.931276919 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.92723149 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.932961468 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.933534204 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.932770809 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.938780309 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.928579385 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.930259579 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.932437289 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.931629503 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.931882868 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.934472308 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.938945412 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.933108059 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.929276587 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.931083108 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.934537993 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.931750889 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.933311077 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.933335083 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.936996958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.935331035 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.934232312 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.948718294 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.937509004 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.934879545 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.932781658 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.943970926 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.95503452 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.936505074 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.934042489 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.92543547 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.940525314 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.927637292 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.928081002 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.928197993 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.942414456 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.939546953 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.931124676 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.929446621 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.926763929 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.929360037 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.936068123 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.930783251 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.929864399 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.930751545 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.94292239 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.957439382 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.931050076 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.935531798 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.93745559 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.93560842 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.933505487 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.934922722 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.933191646 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.928389454 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.936017288 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.934927662 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.932008553 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.934224351 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.932470661 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.940209884 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.930502469 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.932453735 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.936737787 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.935777591 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.928150331 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.93154598 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.934805785 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.931091439 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.939453785 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.931653998 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.933592473 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.929019409 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.932066199 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.934770905 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.929714939 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.935897266 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.93915566 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.944113149 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.935103921 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.938445593 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.937491157 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.937489719 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.941280671 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.954697615 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.932755152 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.937163946 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.940444751 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.942057912 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.940121243 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.930745889 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.93397955 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.930517519 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.930194173 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.937264466 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.930906933 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.934813995 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.93518005 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.933236206 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.932157207 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.931145506 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.935665906 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.936691385 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.93517515 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.930627573 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.939334843 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.933331066 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.935448351 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.941821604 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.936985677 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.935471541 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.931904326 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.936969252 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.934585181 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.935092569 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.932195432 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.932339373 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.932754998 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.936267079 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.938509098 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.936524273 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.932253208 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.934364543 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.937478643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.937617792 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.935910571 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.936270578 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.936143739 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.935093306 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.93734378 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.936213374 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.935493941 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.93552116 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.942419445 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.936303121 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.933399742 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.936270796 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.931590543 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.932959179 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.941301812 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.948187861 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.945684303 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.94565429 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.933786629 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.944288924 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.933548341 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.939043737 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.938154593 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.938005899 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.937765868 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.933979261 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.936659026 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.941961887 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.95751146 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.945589532 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.938025968 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.938416348 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.943820458 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.938924236 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.941969178 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.934003943 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.938726382 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.941765762 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.937405696 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.939390118 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.935071482 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.941734571 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.935732625 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.935058289 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.942153618 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.938376724 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.938133847 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.939040098 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.93749256 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.942419863 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.937452066 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.93791686 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.940623588 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.934987403 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.947453028 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.941523277 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.93666345 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.938273333 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.940210749 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.936295373 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.93531565 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.940666242 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.942237357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.937738464 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.940040122 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.945173787 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.939736 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.941507957 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.94071418 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.935787671 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.944561953 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.935940353 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.946947006 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.944447594 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.94058434 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.936685821 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.94462473 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.940428155 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.942798209 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.94102281 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.940539605 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.941095133 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.944762415 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.941852908 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.940528351 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.95125546 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.935865624 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.941994905 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.93938459 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.942604233 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.944892151 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.945060112 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.941379747 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.944708645 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.950241399 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.94350591 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.943391396 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.94435647 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.944451166 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.942752271 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.946770854 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.943178727 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.957256712 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.953511936 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.937764001 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.941226507 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.943411645 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.94531582 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.942725489 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.941917357 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.949560656 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.942228083 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.942052936 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.942539869 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.942379198 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.941797987 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.949436768 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.946325912 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.944238844 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.9432103 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.944729562 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.944779402 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.940156137 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.946951964 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.945416329 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.94425855 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.946535803 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.938856261 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.944770434 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.942941488 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.950778219 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.941973462 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.945435854 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.947309181 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.946369005 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.943068255 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.946924803 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.94221148 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.944764282 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.94668639 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.945039937 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.947033129 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.943071674 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.947936357 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.955245766 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.948191019 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.951197587 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.946226832 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.955124159 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.947292224 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.938626131 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.945668464 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.948804042 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.953401856 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.94153128 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.946147302 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.952754484 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.94527498 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.944783843 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.949449704 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.945245351 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.944031246 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.945095909 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.948732737 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.9514297 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.949291895 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.94166307 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.946930273 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.941254036 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.944911162 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.950513174 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.949387619 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.946054624 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.947206152 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.94527769 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.94509813 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.946413207 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.946247417 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.9474598 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.944566443 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.943828835 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.952887484 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.944230346 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.946471195 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.950939123 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.947123301 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.960140343 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.947680812 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.946205241 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.946816039 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.944514213 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.947544109 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.941300761 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.945936924 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.946299919 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.945787958 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.948919004 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.958335371 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.95201474 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.949388054 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.948385542 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.948280093 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.948850179 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.953989373 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.966324539 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.947044587 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.954562719 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.950051167 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.955463217 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.949766453 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.951623308 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.953390754 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.95291257 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.948182493 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.949648272 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.950836384 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.963102867 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.951462509 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.945974933 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.944851384 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.952597423 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.951804426 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.945123678 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.949707386 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.952272468 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.950982833 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.959384978 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.946423222 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.950697722 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.947186689 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.946138217 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.950825885 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.951142945 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.950073489 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.951621861 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.950458173 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.952260122 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.950475546 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.953361467 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.949214623 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.951928809 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.959323652 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.951968012 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.949623795 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.950230931 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.948700989 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.950274299 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.949443383 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.952520017 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.950804175 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.945945023 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.950017847 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.953000417 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.959814857 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.950938358 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.947431187 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.947479894 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.956650031 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.951608961 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.949376716 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.952108476 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.960071714 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.955304861 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.963217517 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.962459611 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.949866991 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.952593923 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.961767832 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.959337985 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.951154868 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.951664607 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.95441953 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.954285542 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.952584687 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.955817442 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.952664169 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.954038594 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.95732609 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.950243094 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.951866434 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.948680347 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.950423493 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.953369874 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.95308514 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.958725145 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.949109481 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.947056933 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.950742947 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.951753297 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.951772696 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.957049906 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.95118025 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.949802666 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.956008194 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.954585344 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.953297159 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.94953909 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.95022678 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.95536837 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.951916486 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.952082317 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.952015897 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.953153748 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.953352386 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.956063894 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.962837075 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.949952384 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.953224874 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.955260167 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.95953185 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.954581495 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.955692733 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.953724099 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.952408533 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.962471267 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.953076844 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.956641502 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.954205422 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.953841847 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.958915336 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.954861713 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.960807171 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.953215441 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.957136221 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.950538547 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.959217106 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.962300091 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.958244814 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.957003856 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.9614496 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.961733634 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.958006915 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.955745272 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.953019785 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.954376731 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.952800271 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.957429158 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.955355911 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.959312805 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.954357269 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.95654254 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.956993992 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.959103975 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.951644713 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.950638792 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.961002178 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.962780786 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.962302473 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.9559003 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.95812537 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.95383585 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.957514284 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.964893587 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.959959071 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.953499927 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.957365002 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.959417927 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.955096332 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.966448713 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.965351519 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.962106121 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.958129279 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.96085209 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.970755466 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.960180942 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.965210873 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.98482048 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.956373273 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.957041819 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.956562884 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.960166143 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.957059659 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.958117574 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.958160677 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.964009967 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.960215751 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.954785713 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.966153694 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.954697404 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.956784257 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.956317217 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.960953051 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.962470752 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.956262285 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.96180228 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.959267345 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.954552616 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.957532478 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.957419656 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.955609918 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.956170781 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.954128376 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.959848599 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.954903112 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.957793601 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.965056384 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.958446802 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.959015886 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.970309389 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.96754099 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.95987239 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.956141866 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.957569684 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.963992769 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.962614073 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.958405261 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.964302599 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.963495306 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.961637018 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.96233237 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.961436669 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.960622048 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.963850641 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.954694545 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.959360106 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.973857234 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.970723554 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.960417327 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.96049153 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.968553437 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.959132742 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.967676575 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.963469347 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.960389657 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.960974261 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.95920109 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.956961833 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.955352481 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.957464411 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.961071732 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.96436586 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.959622225 seconds)
  done (took 1161.540740905 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.955990564 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.956072156 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.957123615 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.958132211 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.955831146 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.957746542 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.956250565 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.956462501 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.959322559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.958326838 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.958110421 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.957792892 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.956288142 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.956316366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.956423882 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.955386039 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.957079265 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.957704938 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.955869319 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.956454699 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.955374723 seconds)
  done (took 42.989972091 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.958224134 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.958725463 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.954564683 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.95718807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.956283075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.960224869 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.955412864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.958744052 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.959964724 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.962069645 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.956247168 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.957143576 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.957051099 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.957462488 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.957184191 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.959371218 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.959611768 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.961051023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.958241281 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.960191662 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.960238155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.957111476 seconds)
  done (took 44.975664669 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.960730837 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.960978087 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.962135536 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.957755851 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.958276808 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.961126778 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.958197013 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.963756619 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.962530925 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.961400301 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.968674759 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.965769939 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.95854762 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.96361284 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.956924724 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.964512661 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.107656134 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.959529504 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.962236134 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.95788737 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.961699618 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.970954308 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.961777279 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.963828247 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.964260765 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.965254538 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.962318213 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.959678446 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.958481469 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.963690663 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.965749657 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.957182466 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.964112849 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.967011771 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.962296316 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.961603804 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.967167437 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.963079722 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.959841715 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.959749418 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.973289807 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.984583144 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.958838406 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.963945056 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.970661276 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.959298217 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.963717522 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.96981033 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.966087154 seconds)
  done (took 98.242678679 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.960127466 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.960779845 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.961623151 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.962370052 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.959300457 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.957906716 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.960631801 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.958965261 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.962131411 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.961546726 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.96460382 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.961535243 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.961451688 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.961566691 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.963193119 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.963413283 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.959250719 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.964013623 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.961320777 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.960915519 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.961263122 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.960824611 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.96107272 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.960428798 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.962844429 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.963518198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.961846442 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.9622919 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.963461559 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.962761443 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.962305472 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.962594519 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.9625901 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.961178694 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.964621606 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.964996334 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.961545668 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.962351358 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.965024311 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.964157842 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.962971165 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.962409658 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.963045477 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.964474612 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.964914394 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.963663522 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.965320845 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.964343927 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.963499052 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.964823965 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.963534517 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.965851514 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.963962422 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.964731616 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.962411262 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.965802664 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.967845979 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.965010495 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.962579356 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.964544197 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.963666965 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.965097297 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.962255465 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.963632226 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.962960965 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.963969261 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.964765262 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.964435987 seconds)
  done (took 135.374233642 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.964062133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.966395734 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.965816522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.965544555 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.96562732 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.965061125 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.965060348 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.967692235 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.966285864 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.967821154 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.966116659 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.963029299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.968169417 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.962443299 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.967803582 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.967942054 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.965615894 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.968031681 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.965977408 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.971349095 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.96735828 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.967766657 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.969211603 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.969090139 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.968861024 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.969504587 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.968831461 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.970483485 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.969954428 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.96742186 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.967522342 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.967159088 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.967796299 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.967380275 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.970784539 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.968713726 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.968315745 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.968061706 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.968455682 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.968005643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.967637816 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.970111909 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.967901521 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.968380333 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.968862161 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.968516533 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.969265991 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.970595977 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.966106227 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.966784278 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.969984061 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.968534361 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.967695192 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.969148956 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.969046526 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.966986827 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.968333632 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.968714579 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.969749504 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.96736775 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.968925898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.967864173 seconds)
  done (took 123.906900257 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.966086361 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.966448325 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.965227327 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.966956339 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.965869089 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.966572469 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.966542865 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.968754157 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.9679493 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.966416331 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.967869652 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.967416409 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.966837141 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.966510009 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.968246022 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.968605816 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.968115639 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.966073112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.967036505 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.967136558 seconds)
  done (took 41.246883971 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.966786351 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.966220543 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.967940343 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.96949695 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.967271213 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.967715824 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.970477095 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.970909328 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.970882227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.970280193 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.969604801 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.971876626 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.969974798 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.967908659 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.966712561 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.969131563 seconds)
  done (took 33.409278496 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.967166563 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.968935635 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.970535926 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.972719839 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.967809797 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.967246551 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.968064315 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.968465151 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.968854632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.969621885 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.969116259 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.967801256 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.969744931 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.971687623 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.970210255 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.969133083 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.970587037 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.970299298 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.970297908 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.972660474 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.970288788 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.970232357 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.96890753 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.972259113 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.971515154 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.97131682 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.971496122 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.970327323 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.97121463 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.969817236 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.970071421 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.970471139 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.971358591 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.97278317 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.971366508 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.969153633 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.970497754 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.971868081 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.970796013 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.969963113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.970147439 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.970161541 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.970474851 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.971850461 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.970893167 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.972094287 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.969379131 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.974908798 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.973087091 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.970309239 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.971173509 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.974405191 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.971192678 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.969961379 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.972305261 seconds)
  done (took 110.285697602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.971709752 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.970867327 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.972935578 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.97118787 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.970718005 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.969945993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.97249114 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.971748046 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.97108853 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.970538111 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.97212207 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.974200019 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.97355818 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.972003286 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.97193026 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.972050082 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.972082252 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.972721602 seconds)
  done (took 37.402970342 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.972577739 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.971605105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.970396351 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.972991327 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.972508518 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.973250072 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.973262487 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.973392388 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.972616925 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.97233524 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.97184078 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.97370807 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.972175874 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.972232458 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.974612677 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.974702822 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.974008764 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.973284076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.972453114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.973873292 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.972134888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.97159874 seconds)
  done (took 45.313268552 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.975601708 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.975357104 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.990029259 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.995195929 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.996303004 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.008671276 seconds)
  done (took 13.850878269 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974824566 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.973145688 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.974649379 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974625214 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.974156455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.973385427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.973058115 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.972282681 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.972303744 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.973758843 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.973854811 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.973532138 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.975878185 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.973159134 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975807822 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976191023 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.972893448 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.975974958 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.974344118 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.97595585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974652005 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.974069803 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.974479191 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974004937 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976631623 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.973928795 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974046962 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975709931 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97417251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.977490078 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.976990551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974064828 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974762481 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974638533 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975025009 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.97540356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.97636693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.973287113 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.974781064 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976644727 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.9744085 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.97439858 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.977518085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.974921919 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.975810642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976511634 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97565913 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.974941259 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.974811737 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.974697171 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.975457321 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977435839 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.977388905 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.976530161 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.979203968 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.977569191 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976096388 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.97658891 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976219994 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977027456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976854149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.977754881 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.975649691 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.975835192 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.975484601 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977516453 seconds)
  done (took 132.281361631 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.976810272 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.976468877 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.976227885 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977762423 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.977123335 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.975887366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978175066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976572182 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976203083 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978631939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.977253683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976406202 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976682822 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.97505343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976211551 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.976456005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.976119689 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.976001578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.976221796 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978637459 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.976588447 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.976256554 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.976503135 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977866532 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978040295 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.97576051 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977453945 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978101361 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.977129543 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.975615004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977640301 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978326213 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977813746 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.978122622 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.980304023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.97775151 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.977653543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.979825726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977411935 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.977772041 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.978663751 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.977928124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.977813163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977662807 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.978855433 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.977327227 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.97693929 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.977746086 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978453387 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978268205 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.978811149 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.979392244 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979588297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978729129 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978599418 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.979407394 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978951004 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.981562055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980755515 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979475725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979587812 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.979443496 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.98011822 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.978240309 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.977950473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979613968 seconds)
  done (took 132.453127072 seconds)
done (took 2705.856720949 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.086141555 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.059680841 seconds)
  done (took 16.062129821 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.162450954 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.115578457 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.002950091 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.024527856 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.0010435 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.029441747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 7.02228017 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.002667905 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.003199858 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.000702947 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.000762922 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.188709634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.012253286 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.001323054 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.001520379 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.092991805 seconds)
  done (took 54.590009276 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 2.007560602 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.998772659 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 2.018887717 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 2.000174399 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 2.008276442 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.020253785 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.029092812 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 2.012658133 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.042607069 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 2.019967698 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.077819725 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 2.015050789 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 2.007948916 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.053591969 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 2.019679157 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 2.020784106 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.100347895 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.080831489 seconds)
  done (took 38.464159264 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.081754555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.010569304 seconds)
  done (took 11.024962272 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.007577112 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 7.017160672 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.009925563 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 7.011500754 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 7.00112115 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 7.016102276 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.99652329 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.024973876 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.995297487 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.997057415 seconds)
  done (took 72.008877955 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 2.00094475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.997947307 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.996844034 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.991907825 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.988776676 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.995315258 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.992431269 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.988695018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.678639365 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.037222581 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 2.007650544 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 2.001237613 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.992898595 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.992796698 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.988502315 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.017880232 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.104611051 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.985784028 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.990373026 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.996673002 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.989182632 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.054161495 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 2.00606672 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.99279617 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.03054215 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.67898329 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 2.013135137 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.99769576 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.102823238 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.986791876 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.989142168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.365652735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 2.00301708 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.463408309 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.267964003 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 7.00237236 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 2.003070146 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.999124909 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.98676044 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.10919798 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.992550333 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.999171166 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.95043398 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.241073062 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.088156293 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.03779135 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.348182079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.995377591 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.988897751 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.026244886 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.991256557 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.992188987 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 2.015384578 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.49997091 seconds)
  done (took 139.885121069 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.988451747 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.33572989 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.155636758 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.993015124 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.273681498 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194062335 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.98948524 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.038498294 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.9913951 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.221274093 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24875936 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.095878077 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.993173057 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.991127734 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.991973565 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.988721271 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.143257812 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.061966004 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.993754641 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.995473437 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.020676724 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23196962 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.112311009 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.994098708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.019993885 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.199454802 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.112358397 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.095306283 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.768375727 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.989721764 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.054578028 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.99425927 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.989798404 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.993896128 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.147774382 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.084865832 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074158839 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.996660764 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.992253583 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.991814939 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.651223056 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194898424 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.086194047 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.120896768 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.24159865 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.195242284 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.77078284 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.994388809 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.747944228 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.154834504 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.218817787 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.220624627 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.113205316 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.993621594 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.520075434 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.993547812 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.995022718 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.241551626 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.210767287 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.089959674 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.997340676 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.993534636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.994131769 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.231129238 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.998611567 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.08801293 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.998354436 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.995482692 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.086810259 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.094645467 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.226030745 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.204971491 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.027087183 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.339082461 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.495801766 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.238989367 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.060258405 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246077213 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.996361766 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.993247978 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.073243659 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.844107555 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.247399764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.234443114 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237988175 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.030035478 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.711063534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.996441032 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.220847988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.216232795 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.253546185 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.244286813 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.230749512 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.313469459 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.996312599 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.994386203 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.347517428 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.122245759 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.997352859 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.34573039 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.227681879 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.557296407 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.020358511 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300112417 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.125467507 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 7.000021618 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.624696806 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.997537426 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.224758896 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.036161891 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.999118096 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.998329512 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.216477356 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.984202337 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.996709823 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.877977528 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.058948407 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.999702441 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.229485963 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.002181288 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.269166954 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 7.003315048 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.232558073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.593795516 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.02913285 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.22395394 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.244787676 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 7.001716196 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245602244 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.239369153 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.114477799 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.26819063 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.885862418 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 7.000733024 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.286723193 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.001931158 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.999085686 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.168465903 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 7.001127992 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140452661 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.001571344 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.293970244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.01977742 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.228740663 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.001498277 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.252208417 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.030096462 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.048313072 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 7.007408434 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.129817531 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.004895991 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.843520933 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.160397682 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.005070765 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.998283742 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.891583462 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 7.000740452 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.147360096 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.229067619 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.021622617 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.071458701 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.666712381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.00166559 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.084484662 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024841929 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.484659496 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.998938351 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.253793851 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 7.001849836 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.001738621 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 7.00025466 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.233110448 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.246476346 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 7.002873926 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 7.000827169 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.910309555 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 7.000426368 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.999831591 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.179487828 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.373044594 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 7.002895549 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.200846548 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.006702858 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.130519335 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.008179658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.076258873 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.339609668 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.999898585 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.998692932 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 7.001020445 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 7.00334078 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.001134027 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.267098345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.030088673 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.537924506 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.137512906 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.279763822 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.313167813 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.246892243 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.046421107 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.008302331 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.25931992 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 7.008904719 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.065244069 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 7.009709436 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023328592 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236529226 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.009206911 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.215518057 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279083177 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.918381737 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.048588829 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 7.007703218 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.002778619 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 7.004967874 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.15784887 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.091913261 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 7.007612501 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 7.006136695 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.121040292 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.123428262 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.215776327 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 7.009853002 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.106441669 seconds)
  done (took 933.048730937 seconds)
done (took 1267.003111536 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 7.002101374 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.010710435 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 7.005327619 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.008995432 seconds)
  done (took 29.965151885 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 2.007939053 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 2.008178339 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 2.009273764 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 2.012441804 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.00935811 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.008268584 seconds)
  done (took 13.997020704 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.139180648 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.012015258 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.01063981 seconds)
  done (took 22.103110166 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.088408193 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.408727474 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.156363011 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.444552855 seconds)
  done (took 11.039696598 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 2.009987464 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 2.00992242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 2.011670395 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 2.011339482 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 2.011968622 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 2.010246309 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 2.013141042 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 2.010083547 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 2.009977635 seconds)
  done (took 20.040359876 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.74805789 seconds)
done (took 103.834574901 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.097769769 seconds)
    (2/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.006087984 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.096189194 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.136203533 seconds)
    (5/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.269145486 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.196585796 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.002181096 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.772072712 seconds)
    (9/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.077312337 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.140797669 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.493331121 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.751741904 seconds)
    (13/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.079472306 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.241901963 seconds)
    (15/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.005387127 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.038921933 seconds)
    (17/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.076626405 seconds)
    (18/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.170545733 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.392714037 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.947893121 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.17419001 seconds)
    (22/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.178009645 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.379807145 seconds)
    (24/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.146676279 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.028684899 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.124665021 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.002505071 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.706879729 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.344035635 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.391589822 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.106611571 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.006222238 seconds)
    (33/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.2326274 seconds)
    (34/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.409628996 seconds)
    (35/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.025161621 seconds)
    (36/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.088729176 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.020566364 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.129104963 seconds)
    (39/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.079003223 seconds)
    (40/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.077858784 seconds)
    (41/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.639048716 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.004652957 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.307243054 seconds)
    (44/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.809344646 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.977673726 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.249261679 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.174063556 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.240486149 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.109901458 seconds)
    (50/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.229392166 seconds)
    (51/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.621985672 seconds)
    (52/309) benchmarking ("sort", Int8, false)...
    done (took 4.870926664 seconds)
    (53/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.258366489 seconds)
    (54/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.008406103 seconds)
    (55/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.405413162 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.304700673 seconds)
    (57/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.428145486 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 2.221295665 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.10993385 seconds)
    (60/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.06248118 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.493801455 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.484671755 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.318063796 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.009248836 seconds)
    (65/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.105611797 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.729120522 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.903861475 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.419016574 seconds)
    (69/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.256530093 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.084855688 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.565201534 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.172666238 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.025300292 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.007879068 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.621059228 seconds)
    (76/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.141955181 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.081128432 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.165048737 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.011998164 seconds)
    (80/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.78095918 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.097400589 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.003983448 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 4.291669011 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.423355366 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.167093081 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.627016155 seconds)
    (87/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.92691029 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.355815308 seconds)
    (89/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.124319949 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.011888638 seconds)
    (91/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.011585916 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.021340314 seconds)
    (93/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.137764888 seconds)
    (94/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.00589087 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.297251715 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.014025275 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.056457816 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.890552966 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.113570958 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.251591554 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.270348784 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.772970931 seconds)
    (103/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.261546897 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.288013697 seconds)
    (105/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.032029393 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.008717638 seconds)
    (107/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.112320515 seconds)
    (108/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.825576669 seconds)
    (109/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.388772443 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.303809072 seconds)
    (111/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.034606304 seconds)
    (112/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.138824177 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.938485583 seconds)
    (114/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.362892317 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.02444037 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.550842022 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.150909223 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.012163014 seconds)
    (119/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.131333221 seconds)
    (120/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.120315194 seconds)
    (121/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.274814462 seconds)
    (122/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.147103011 seconds)
    (123/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.320606743 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.016412684 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.348763605 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.270293103 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.304307885 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.029435238 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.010952275 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.01243661 seconds)
    (131/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.494978802 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.319913315 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.393667742 seconds)
    (134/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.705680585 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.011823347 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.116130765 seconds)
    (137/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.927163164 seconds)
    (138/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.029903881 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.088614035 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.011400073 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.015314267 seconds)
    (142/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.342811057 seconds)
    (143/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.041645404 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.334680327 seconds)
    (145/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.713924318 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.260599717 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.068665352 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.142830785 seconds)
    (149/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.023205736 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.268925707 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.252274227 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.011046526 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.401143816 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.326503229 seconds)
    (155/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.223075102 seconds)
    (156/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.024088631 seconds)
    (157/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.160728112 seconds)
    (158/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.031580049 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.10854453 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.962235571 seconds)
    (161/309) benchmarking ("sort", BigInt, false)...
    done (took 7.022944151 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.195344765 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.029548971 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.795081901 seconds)
    (165/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.246261148 seconds)
    (166/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.213767264 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.019729799 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.330624636 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.192206883 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.05220689 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.13401263 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.32619246 seconds)
    (173/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.270612623 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.011013978 seconds)
    (175/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 2.057789652 seconds)
    (176/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.145008622 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.02028727 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.341509605 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.267782593 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.02216577 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.375552959 seconds)
    (182/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.128137831 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.232209971 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.278844636 seconds)
    (185/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.022827973 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.545632066 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.718280487 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.11078792 seconds)
    (189/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.094953465 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.153128563 seconds)
    (191/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.405380243 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.157973678 seconds)
    (193/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.203960631 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.277683383 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.016657828 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.814420329 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.728831952 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.593642558 seconds)
    (199/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.03757347 seconds)
    (200/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.171899815 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.908142905 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.026632019 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.200690357 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.114398519 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.037075949 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.017866483 seconds)
    (207/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.349225392 seconds)
    (208/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.120605736 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 5.737758799 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.15223179 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.14248294 seconds)
    (212/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.828455474 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.023865036 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 4.114242343 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.08612751 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.372743243 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.028991341 seconds)
    (218/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.211614876 seconds)
    (219/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.027257411 seconds)
    (220/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.437780265 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.955474385 seconds)
    (222/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.27708495 seconds)
    (223/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.527401414 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.253822539 seconds)
    (225/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.023802981 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.123201782 seconds)
    (227/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.111738155 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.198218129 seconds)
    (229/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.134651134 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.324989569 seconds)
    (231/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.696290581 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.692967061 seconds)
    (233/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.772969947 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.019398876 seconds)
    (235/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.04704511 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.424380314 seconds)
    (237/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.168595142 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.824017531 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.053828742 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.167251317 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.422767885 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.009622984 seconds)
    (243/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.937285871 seconds)
    (244/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.246834017 seconds)
    (245/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.869213978 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.432909805 seconds)
    (247/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.049283167 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.018335905 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.117513892 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.164283479 seconds)
    (251/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.116849139 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.069066082 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.361348395 seconds)
    (254/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.22481557 seconds)
    (255/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.895687775 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.163643042 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.015279518 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.436343036 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.037316689 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.201114781 seconds)
    (261/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.511476409 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.109291286 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.016618145 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.351541644 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.138360452 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.358235364 seconds)
    (267/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.050568632 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.027880026 seconds)
    (269/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.059301178 seconds)
    (270/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.914358384 seconds)
    (271/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.132529996 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.808921243 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.097191471 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.038925509 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.302230349 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.027504166 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.697461795 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.185511387 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.259268828 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.108852433 seconds)
    (281/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.243382591 seconds)
    (282/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.200291453 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.825768229 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.139349284 seconds)
    (285/309) benchmarking ("sort", Float32, false)...
    done (took 5.760011068 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.240604078 seconds)
    (287/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.335664758 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.348151536 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.032934126 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.027346561 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.873270919 seconds)
    (292/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.41883457 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.123352801 seconds)
    (294/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.102356969 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.328640621 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.137047796 seconds)
    (297/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.020864967 seconds)
    (298/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.032692222 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.062797663 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.063840032 seconds)
    (301/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.924640911 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.729411452 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.038504514 seconds)
    (304/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372750425 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.036645446 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.084526239 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.245556143 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.031593469 seconds)
    (309/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 4.143424516 seconds)
  done (took 1058.655338273 seconds)
done (took 1060.672196743 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.058642772 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.05071518 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.027787561 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.051200631 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.142255 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.079455202 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.042923131 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.035114951 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.07955594 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.077194592 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.030051502 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.070863908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.028546481 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.029631344 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.026969731 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.047057072 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.328328508 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.051614192 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.045572519 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.040974383 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.047127899 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.023184255 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.07796145 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.069635488 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.033400087 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.033014831 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.031253225 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.047157051 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.142312688 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.034784786 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.035584369 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.04456146 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.332801559 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.051810851 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.027961736 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.04742041 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.044630692 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.040437826 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.031275581 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.061947715 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.455755987 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.032360793 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.030155044 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.027681617 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.028951725 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.034319614 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.028129934 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.036359923 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.043487398 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.044170925 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.467978562 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.048722061 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.031241464 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.028457253 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.042861673 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.028419492 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.03262216 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.044438615 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.04878179 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.043042216 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.318473882 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.054913484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.029903404 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.046990558 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.036120513 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.500976918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.028612934 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.030891408 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.45308768 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.039080261 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.496564634 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.040169204 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.026142994 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.0400763 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.057175573 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.327445939 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.046781066 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.024557528 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.03392681 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.02403566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.040935058 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.044319849 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.030347236 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.02558299 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.041977745 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.066743141 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.035125542 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.026739723 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.033528914 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.040823642 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.03087313 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.034562586 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.024826226 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.021587401 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.033639147 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.02881077 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.025665555 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.025120588 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.025716902 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.034343291 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.445704479 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.045795164 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.018355065 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.01813298 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.020058803 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.035547761 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.445218349 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.027990887 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.042500407 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.072139074 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.025071001 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.311487354 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.048865371 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.040096313 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.032956291 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.025420395 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.018177649 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.311073962 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.480437615 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.040244477 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.023283055 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.019442778 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.03877867 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.017218676 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.015626828 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.32559611 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.045291854 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.03715166 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.14167019 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.03134186 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.051080269 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.014968194 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.02219578 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.06315241 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.039100878 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.050052547 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.021634156 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.03664488 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.038858247 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.017752153 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.031087291 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.02907999 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.016953064 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.025050912 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.014523663 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.067600375 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.03019662 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.028744901 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.033953164 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.134073983 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.010460126 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.307216819 seconds)
done (took 317.764382503 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.088999806 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.012966876 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.127828987 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.012828015 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.102383043 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.085367675 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.011148688 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.012599615 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.009609349 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.512097713 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.007344693 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.015270124 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.011852545 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.007273883 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.080489034 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.010793445 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.009816811 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.460488508 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.011238329 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.115798476 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.011421092 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.006957171 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.010889789 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.518581212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.01012943 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.01645987 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.114550382 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.009041593 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.465159492 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.011432638 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.011309674 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.458850532 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.115371707 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.036241186 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.013311078 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.017104026 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.0960294 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.023213471 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.076725413 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.073978477 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.128097993 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.042495211 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.007732953 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.004662936 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.005687042 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.004535453 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.00260955 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.03699452 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.008749335 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.015002488 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.456239032 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.00898519 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.007907294 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.001938798 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.004082291 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.032442442 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.003976391 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.0079188 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.109394493 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.009079139 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.071050424 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.510797424 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.506492142 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.003955675 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.005730408 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.003365429 seconds)
  done (took 194.74964979 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.101289682 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.078015015 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.104867699 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.008484276 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.053865445 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.10409803 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.007340288 seconds)
  done (took 16.391239216 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.011564068 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.000605568 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.04919199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.049721498 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.998504953 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.182026277 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.017103747 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.001794688 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.028305193 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.001804043 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.668336553 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.049875269 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.008370608 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.002975839 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.012784628 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.056672388 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.002352297 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.002074534 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.116490472 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.150043578 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.006215021 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.008713979 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.02668893 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.014962628 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.999693135 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.004262262 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 2.000012199 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.009709377 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.000202525 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.997802268 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.99801484 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.051827088 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.998935857 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.003640391 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.999178529 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 2.00423184 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.998641555 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.996278132 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.997784259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.000574943 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.99691972 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.997780465 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.998837569 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.998383299 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.996125467 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.021696827 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.998326125 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.996365564 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.998242801 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.997935816 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.02456031 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.996181092 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.996818397 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.002123617 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.041963178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.003408203 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.997234468 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.995606027 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.99727742 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.995936859 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.997011415 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.147858975 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.047132519 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.996736301 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.050850717 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.152225531 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.996332654 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.996078452 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.995324144 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.087963384 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.994141653 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.046953505 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.995589785 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.112059435 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.995319788 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.178829778 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.021283917 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.001137802 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.003472644 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.000090017 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.009196526 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.995178051 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.002107664 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.005217823 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.003159228 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.999504372 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.997407801 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.000954437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.007561982 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.997774283 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.051074236 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.996939079 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.997759822 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.139421639 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.997948247 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.117115405 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.027128654 seconds)
  done (took 218.679144686 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.00774311 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.007833407 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.001675996 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.015567667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.001031177 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.002008524 seconds)
  done (took 13.967085885 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.003168954 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.002112048 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.998499112 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.996886469 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.999903116 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.000421893 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.999333687 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.004066665 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.004278642 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.99930605 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.001680297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.010916834 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.999026044 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.999016753 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.998769592 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.996684361 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.999964397 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.998376624 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.998989436 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.999310988 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.207198299 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.002242156 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.000909841 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.012400355 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.005977743 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.998769849 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.014161444 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.999053909 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.999782665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.010135369 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.004431937 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.002318948 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.013418616 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.011007905 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.005440634 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.013169496 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.003417499 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.010559167 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.998800083 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.003144258 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.012188348 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.001954525 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.000983372 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.010674561 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.004534551 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.017723999 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.015104742 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.015370057 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.001612094 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.012270094 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.012628131 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.998923821 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.004479555 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.011198935 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.015874112 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.009082636 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.017724825 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.001447764 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.00239299 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.014957951 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.006192091 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.003660694 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.007156375 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.005262569 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.006895769 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.012461605 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.015922801 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.008486592 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.003849546 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.004725946 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.011837906 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.001639717 seconds)
  done (took 147.529767711 seconds)
done (took 593.27854169 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.133392143 seconds)
  done (took 9.067316431 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.174802631 seconds)
  done (took 9.214870045 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.683123025 seconds)
  done (took 10.63873461 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.033360969 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.033766836 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.035958091 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.035274632 seconds)
  done (took 30.099054073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.048106397 seconds)
  done (took 9.0038656 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.040474469 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.024447362 seconds)
  done (took 16.046127865 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.051085398 seconds)
  done (took 9.011123474 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.365346698 seconds)
  done (took 9.333056402 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.033454975 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.0349225 seconds)
  done (took 16.049048953 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.030131688 seconds)
  done (took 8.987012747 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.268601448 seconds)
  done (took 10.301561862 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.033545122 seconds)
  done (took 9.02769136 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.059233016 seconds)
  done (took 9.014567581 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.129733272 seconds)
  done (took 9.082780641 seconds)
done (took 166.812899141 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.027324297 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.019343289 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.017200963 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.017249278 seconds)
  done (took 30.031996452 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.054879361 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.053543607 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.059433364 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.049083261 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.039188037 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.040378177 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.053029372 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.049511675 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.043074688 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.047712062 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.05024111 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.047955343 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.048764564 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.057297774 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.058424549 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.048151713 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.052659954 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.048807297 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.037418418 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.056808587 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.065594109 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.047911452 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 2.011237062 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.013741798 seconds)
  done (took 51.084020729 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.583200888 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.091899322 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.167707543 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.065767348 seconds)
  done (took 10.852330324 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 2.015314081 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.074665888 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.061807966 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.059270531 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.06288284 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.112888445 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.062823405 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.174178348 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.136880407 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.138551818 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.018232346 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.031213367 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.031825524 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.05551843 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.11278378 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.010065518 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.00721251 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.122496192 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.067389597 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.185528416 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.01262145 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.061364097 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.05682298 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.059571817 seconds)
  done (took 51.675562067 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.006822264 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.014839155 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.013264081 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.006042451 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.006107676 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.006310855 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.013281568 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.006996635 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.026850759 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.008642933 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.00577049 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.00431448 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.010437415 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.006299773 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.003661854 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.018003611 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.018363172 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.005932164 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.009001463 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.015005982 seconds)
  done (took 42.145637005 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.005428291 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.871795777 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.348524261 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.255922778 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.003724167 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.002649759 seconds)
  done (took 32.424791778 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.015392988 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.008962047 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.003431687 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.05605971 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.139468379 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.008056355 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.00036802 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.011822467 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.044413171 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.064164205 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.016849565 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.02607036 seconds)
  done (took 26.32779149 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.00148061 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.002410849 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.000042076 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.010058211 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.010140133 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.004976012 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.006047559 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.999942898 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.009552019 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.018690875 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.004225976 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.007609079 seconds)
  done (took 46.014250275 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.701819881 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067424304 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.993709745 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.867881995 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434397588 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535916638 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.888957572 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.712639081 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.470568868 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.929665553 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207852175 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.004274337 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085090641 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.003460376 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272896273 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.368035172 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189397463 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245901138 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.707057589 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.02943109 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.205683389 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210564205 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.284996723 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.004241845 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002953895 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.004678306 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.583551205 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.799578515 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032747596 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.379667872 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236929544 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.954487669 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064423317 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.010172257 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.014576485 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001631936 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007657493 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270073568 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.002191705 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234341583 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070569887 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244501977 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002783285 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.425408092 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.700620934 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.310667722 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.098691191 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.995055178 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992139105 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989417176 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.914650117 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071210628 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.990806498 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994639034 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.688327767 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.991114007 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062256335 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.989810069 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193322814 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.797984269 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.680084626 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.989531358 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994021029 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.566070009 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089742906 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.761184602 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76877152 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365725941 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408290684 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.085941065 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.990341477 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990470319 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.174758709 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946118535 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.75894985 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023886563 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.124915858 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.00553674 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631872071 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283236405 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.42849985 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.540969378 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.911117042 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25241489 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.736238072 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967994555 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205538711 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.839750447 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.91715508 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194102376 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018021007 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994673511 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.254868636 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704344993 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095717496 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.000900795 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427649807 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00847728 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.992256558 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990307773 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201558142 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438186476 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008763997 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.108961326 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999336379 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06526473 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910164018 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.000464142 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.985566311 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.890925696 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.988264818 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979395387 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.023511556 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.707810021 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.015778934 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.929162976 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988335666 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.084577775 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022341118 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930068518 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220557145 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.280747999 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.664074492 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.999766717 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.110059526 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.365847445 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20005845 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.98595841 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198424848 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512013558 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.409962624 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.022743619 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270162706 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.039274167 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270827375 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414783357 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059596313 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.762602478 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.606316311 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.197523163 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997186149 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.984947615 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.983180501 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986765501 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916212449 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.636592923 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.377015949 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.159849898 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.194064068 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.360854909 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.954678297 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.980767261 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277279256 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.118084172 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.968861932 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.637095383 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.439892333 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.791121861 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.004794622 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.171029323 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.208572864 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.936861706 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99418383 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058094825 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995769057 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.045327968 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.308272204 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337575018 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.984408311 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.984584475 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.93465385 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986416382 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.982798822 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.520218302 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948102824 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.983836146 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.993620157 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.856889524 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055405266 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983920107 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985774204 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.520472505 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.488662816 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.986030508 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.658789829 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.986256318 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149861218 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.254473816 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.365433388 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103245716 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.684520074 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.405717233 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.086454401 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.683220952 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909588267 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.983071933 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.926368452 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985984077 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.983606697 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98827685 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.190011742 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255476018 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284107449 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.475213556 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.042779919 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182195895 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.757180779 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927014288 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.978991199 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982617784 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.980806248 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.978623239 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.49354228 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.280031434 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.086529793 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004580941 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983780844 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107665011 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.989827203 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.905950699 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.981857637 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.981804641 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451652561 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.000922856 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.934221195 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.319697115 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.866460832 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104063936 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025931785 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.990768946 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984441506 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.700841075 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.017370642 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907619327 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45804426 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005039737 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.699850943 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467051762 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.559543648 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277698221 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.297502839 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.308844272 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.051979408 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.194423296 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063394553 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035662322 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067329779 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916951959 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.906169594 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.638295099 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311294641 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254025527 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989961935 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201793627 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76323903 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.209638223 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011680063 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.709149883 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280752484 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960152187 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999362711 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.378136425 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080333562 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066022257 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987506963 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.93173246 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.333562068 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045109937 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.689389404 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998461825 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.336969251 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461615558 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.190814909 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.380648848 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192170979 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.988304608 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.337142363 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.23737712 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.014625028 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.990094242 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.980835593 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.201401315 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56717882 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.840324006 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988947856 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.187577489 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270325152 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.890821652 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.986838968 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.187166572 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236580036 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984384597 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.396269065 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330369344 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.703694524 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094268759 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212138184 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.711960704 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279817754 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.037575544 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.478999788 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985177723 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.912034713 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.685474315 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.188513518 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.994796705 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.953905036 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185668591 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214345832 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672044135 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205574294 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.227346301 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.996598528 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.254789129 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061024001 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.08266635 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.318257887 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.407915459 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.225329674 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.211859737 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528306528 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202100958 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431473204 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.709331933 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.032308364 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192808774 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203981888 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.203196089 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.379247498 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156204562 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.699263606 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.992760613 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.196227116 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285416436 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048212652 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.38288494 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144776592 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.603241893 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042095332 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051259918 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.993180371 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024713081 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.381934767 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.085498059 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.001275481 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064871916 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100694236 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.49922422 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.98801354 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.992477998 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256824549 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343732975 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323042803 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.970800546 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.983272291 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99270014 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113366525 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.910713493 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988295216 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25486698 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.987707283 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478501652 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.122991078 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001341642 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.321189072 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359810646 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778086552 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942788337 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992240689 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190253374 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274519338 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.21043414 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091140186 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256378458 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329817386 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.012428262 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.379950696 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214069473 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98863913 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.860495587 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989378867 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116533321 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.190558898 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260011853 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.496575437 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757245623 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250366768 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.851798506 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990860569 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.71691926 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255100507 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.256564879 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.037911898 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051721086 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992892757 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469120462 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.729857392 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11913549 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.842724295 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.915861151 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.998408261 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290589786 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.22908957 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.697670838 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989279027 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264190901 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29435014 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258678564 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.038864552 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.844447537 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203456427 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989512493 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.145049263 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.205368596 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194234334 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227134594 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991105785 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.99533847 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.791928495 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910272343 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.983740642 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043724724 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209904373 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002130684 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.501107042 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.680196962 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247809631 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025827494 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984232996 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252711823 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.499368688 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.547258465 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9870726 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183949181 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.002893915 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271558567 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.983160972 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.463612251 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27715614 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.982134857 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.555585652 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.215882153 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247217616 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91136177 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987972802 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195486532 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.840216691 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.981869697 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.963666643 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462489915 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205826641 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.718992977 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539418321 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.982107568 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.984784081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.477289677 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006064259 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472045413 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005173173 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002218313 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.503124914 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.676008783 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.267619968 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.223700229 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.567947032 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.560688891 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.982710846 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.98306822 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984065578 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.900814842 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.166238518 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.192872631 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252549293 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010157284 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505846894 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008244463 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.379159483 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087900878 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.192168772 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012036806 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.505089891 seconds)
  done (took 1728.688409416 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.010144301 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.036433807 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.034774602 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.999274536 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.995021989 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.017090919 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.10086503 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.078775713 seconds)
  done (took 58.188917895 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.980280147 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.990482806 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.9821222 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.977925355 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.975870689 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.974095012 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.117664251 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.980542854 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.975170572 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.974400631 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.971433291 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.973268246 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.243932044 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.989082326 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.97211979 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.969899033 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.974524303 seconds)
  done (took 75.935856097 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.974312767 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.327421669 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.036706357 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.978343674 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.999467232 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.970632951 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.492304435 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.991510253 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.02694758 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.996270387 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.266613338 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.003156576 seconds)
  done (took 86.969384158 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.975906877 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.967530302 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.969708306 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.966584627 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.968393593 seconds)
  done (took 11.75464456 seconds)
done (took 2254.104238388 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.19694491 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.02573219 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.066899234 seconds)
  done (took 5.99231691 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.11181804 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.160823378 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.275066101 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.032342504 seconds)
  done (took 10.487766562 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.27231132 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.349842169 seconds)
  done (took 6.521438199 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.327931184 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.971178429 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.786735919 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.970830548 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.967558565 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.969286441 seconds)
  done (took 22.860263672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.966256083 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.969779835 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.969701839 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.966474237 seconds)
  done (took 9.779169662 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.969200222 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.680703246 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.970630316 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.97965375 seconds)
  done (took 21.499008875 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.115337614 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.083268894 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.111264673 seconds)
  done (took 8.209421105 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.115469922 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.073267632 seconds)
  done (took 7.088144557 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.115586109 seconds)
  done (took 4.018156706 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.001848082 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.238084547 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.526516446 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.521543587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.652680082 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.707906667 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.278646264 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.199110965 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.396861788 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.392781105 seconds)
  done (took 25.814781294 seconds)
done (took 138.452922818 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.315311345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.991754518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.247613245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.332944672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.200685363 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.180716309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.187850876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.323097369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.005222267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.995005354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.3340443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.19561767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.139711759 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.984301785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.14454724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.98441648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.19469331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.327416349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.014178185 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.24012686 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.200955165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.978959823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.177110288 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.99292912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.203474421 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.135576726 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.517894861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.980812727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.159531251 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.532113161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.129907581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.377312228 seconds)
  done (took 171.626266703 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.975130208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974466839 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.974157482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.971657768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.436310624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973940959 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.973577836 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.974214564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.41852752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.408314003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.975495093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.430450958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.973906683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.973864089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973339775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.975341772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.592535504 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.974919085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.972266382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.970322278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.975365035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.257620335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973698997 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.263459261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.582570675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975717641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.972155193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.971720499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.975311665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.974237626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.972573821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.973280957 seconds)
  done (took 212.665525756 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.976548992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.97240438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.973709606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.975436761 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.979605835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.976827981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.977980931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.974321302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.629018124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.628572369 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.978283839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.978310716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974520914 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.973320798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.979847337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.971707099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.98026526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.984849907 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.982625361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.991356065 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.974427165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.626130371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.973803182 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.644908894 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.973826587 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.980460679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.974698554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974696123 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.976584296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.978477847 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.97610351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.975502708 seconds)
  done (took 223.797199738 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.220425728 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.97401427 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.972893995 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.86470418 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.975999836 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.97527961 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.962596031 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.23917336 seconds)
  done (took 20.093387837 seconds)
done (took 630.098043435 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.325789057 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.156253447 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.153507458 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.999305678 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.250967239 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.042658074 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.992280517 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.055585767 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.832113957 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.062553977 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.640707668 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.014730762 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.729657525 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.016392899 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.117789352 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.053627841 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.569584771 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.669463299 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134477688 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.060381386 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.177359404 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.922010093 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.066115093 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.889576535 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.658457313 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.958113928 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.046508511 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.574003966 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.00471139 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.155146694 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.643208244 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.28760022 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.009096208 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.998736055 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.046995134 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.025711616 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.229142706 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.007317197 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.122399404 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.70681228 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.058789957 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.739574317 seconds)
  done (took 107.113988188 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.986731161 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.98639716 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.98525806 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.984245632 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.992399399 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.985917182 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.982862983 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.983439947 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.984917423 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.98365578 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.981819823 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.996215803 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.983039379 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.992151536 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.983289071 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.981776358 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.987196711 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.993457712 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.981962304 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.983502877 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.984172942 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.984472481 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.980760036 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.98665342 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.985111737 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.984568133 seconds)
  done (took 53.548386257 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.427946247 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.128649356 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.221322612 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996179707 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.978463888 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.984088377 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.993947371 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.980835891 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.983875821 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.982912633 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.070115707 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.983673566 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.997795966 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.222418855 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.996529391 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.979063931 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.980376149 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.982003518 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.143470456 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994845513 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.997987184 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.982849164 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.998439452 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.993385126 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.986074802 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982355959 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.986854605 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.481442399 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.992915418 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.072664594 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.025434359 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.000714369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.400035381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.232551337 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.033594469 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.984370976 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.979509944 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.079418728 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.991992161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.983325491 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.998718887 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.988362485 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.225125963 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.514097679 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.994238686 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.981675073 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.492147339 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.087077176 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.021688096 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994089009 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.236742898 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.998889722 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.982031614 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.98761461 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.021982498 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.990210376 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.984775024 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.352919476 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.998831858 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.999474337 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.984437574 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.986301746 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.144833956 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.991817953 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.141510257 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.991594636 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.99145809 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.985766439 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.232131798 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999128562 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.538276225 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.998415197 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.981991116 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.07380206 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.14091675 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.517050212 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.998283226 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146389279 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.423977416 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.004725842 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.991731335 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.474190122 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.01096868 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.992777916 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.982604406 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.982088503 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.982669221 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.026172726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.996779624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.441399587 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.5333571 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.362775956 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.008948599 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.997072362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.985885618 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.348832293 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.989867539 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.985705156 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.222186977 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.541419886 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.997297111 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.994669409 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.508190507 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.001913048 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.002900968 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.99552754 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.238762751 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.000067772 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.02730599 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.987154997 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.99408695 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.993245342 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.002586566 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.993087114 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.985721544 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.505917603 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.095896385 seconds)
  done (took 246.431883337 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.990328702 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.986688095 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.989327535 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.986783668 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.988569649 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.988299615 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.986608499 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.988770221 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.98808451 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.983285123 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.987946167 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.986904819 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.986482371 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.994860205 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.498447778 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.991335507 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.598823378 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.993311045 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.990454467 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.989362261 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.674221039 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.99822909 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.988500417 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.988790369 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.991491974 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.991434758 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.995171686 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.039113553 seconds)
  done (took 171.483289046 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.991750908 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.178750088 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.010629204 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.020387558 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.001530667 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.991458544 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.133874536 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.018540803 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.999038524 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.990101274 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.988647386 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.052040223 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.002932448 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.090092968 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.026692152 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.099421309 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.100707688 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.999054518 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.990260243 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.992837789 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.022799553 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.002809276 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.054702635 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.11773002 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.01027764 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.109846376 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.011119873 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.992572394 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.996005553 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.11028994 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.00901633 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.05422027 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.022453478 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.014398492 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.115970282 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.112863922 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.095375399 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.098727325 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.997841721 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.990229843 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.990790986 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.9954907 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.106752853 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.010232568 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.99710718 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.110139348 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.009721062 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.991066215 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.991584243 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.990917649 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.006806008 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.010800935 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.053888442 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.122290679 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.026291604 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.01406261 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.092254 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.117084055 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.994090341 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.097622856 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.000042554 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.105673003 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.01046642 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.99477836 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.992495798 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.992729003 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.019488796 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.099588899 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.103922385 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.003012359 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.094530844 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.027076824 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.001987472 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.99268971 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.993878279 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.109760404 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.112472444 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.02756057 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.03252519 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.023880298 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.002835576 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.993394424 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.996442144 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.012077713 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.996279022 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.105656256 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.11413264 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.999109264 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.993242067 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.994060812 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.995617059 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.020703938 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119737471 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.029724945 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.103568775 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.059904869 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.067532081 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.006021173 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.006435863 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.996903326 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.059285337 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.006310276 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.00558297 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.284371104 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.057619578 seconds)
  done (took 216.036220953 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.391120283 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.043812718 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.050814749 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.313107306 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.362186066 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.935966343 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.040426975 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.047833187 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.078952826 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.268786166 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.112342493 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.071722613 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.03395777 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.020161318 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.042086322 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.078397427 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.060212586 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.396825232 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.266013188 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.504583602 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.03486221 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.331369139 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.370136888 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.639994834 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.090760639 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.446305603 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.653446181 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.204463218 seconds)
  done (took 66.82448827 seconds)
done (took 863.347259736 seconds)
SAVING RESULT...
DONE!
