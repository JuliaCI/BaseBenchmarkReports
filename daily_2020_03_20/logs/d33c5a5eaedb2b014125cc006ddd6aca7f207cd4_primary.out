cset: moving following pidspec: 9067
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.20254661 seconds)
loading group "string"... done (took 0.694119978 seconds)
loading group "linalg"... done (took 7.518776163 seconds)
loading group "parallel"... done (took 0.153489771 seconds)
loading group "find"... done (took 1.192836101 seconds)
loading group "tuple"... done (took 1.769154588 seconds)
loading group "dates"... done (took 1.241665354 seconds)
loading group "micro"... done (took 0.217724411 seconds)
loading group "io"... done (took 0.904325771 seconds)
loading group "scalar"... done (took 36.718537541 seconds)
loading group "sparse"... done (took 11.829729709 seconds)
loading group "broadcast"... done (took 0.940784153 seconds)
loading group "union"... done (took 12.158761675 seconds)
loading group "simd"... done (took 4.462627947 seconds)
loading group "random"... done (took 8.926565594 seconds)
loading group "problem"... done (took 1.826253988 seconds)
loading group "array"... done (took 20.641259199 seconds)
loading group "misc"... done (took 1.692418303 seconds)
loading group "sort"... done (took 3.259726192 seconds)
loading group "collection"... done (took 17.015817756 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518434066 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124196831 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132780624 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119452077 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147165586 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118743995 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125058494 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087044704 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.837922299 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146665722 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115710958 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397346387 seconds)
done (took 5.344347682 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176840735 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083636456 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085104158 seconds)
  done (took 1.315100844 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068065085 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126133104 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069267294 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069874991 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069859912 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069990689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069308245 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069596759 seconds)
  done (took 1.690949202 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075017605 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070890152 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069260291 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071643522 seconds)
  done (took 1.433910719 seconds)
done (took 5.844820193 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.743492501 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211936513 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186190844 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.385247405 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127449078 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168840994 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653040266 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.313808754 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186900943 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077779216 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108048598 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337948471 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.121054666 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649360012 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076716845 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091800466 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141481085 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42822166 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070578651 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085442811 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091841322 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131471524 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088813049 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075902868 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147829385 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070091 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132962966 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082615477 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068466456 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214674344 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175186334 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660945367 seconds)
  done (took 10.286149156 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100389626 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099514062 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071338335 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128520361 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10225779 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072569437 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077589158 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070286429 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091862112 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131865064 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093045643 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107310191 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068765402 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071671614 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086125258 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209981048 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08347758 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083876842 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073079476 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080417636 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110417355 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080130417 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082552732 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082553749 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130965068 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182715055 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099297765 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10176101 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071412203 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084246877 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117706078 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130667995 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070579971 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071117188 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127648084 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09735793 seconds)
  done (took 4.737827689 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.953361496 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14035994 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08960084 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131358151 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068416709 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108184805 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06848957 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082390556 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204679899 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.419345168 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575173321 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130327853 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112311124 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104943194 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069765241 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070774 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092444689 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069712702 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.438723979 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100403523 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108644113 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083955611 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073567274 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072011717 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068081438 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069873818 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066939627 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070445249 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115448089 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078895643 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.3091063 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120148938 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07074574 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.902329561 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163115634 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068224689 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.236781214 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170540239 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095382527 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13793964 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071200072 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068091194 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155124355 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068132722 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072137525 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068429943 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088361787 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104884415 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120013918 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067931034 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068585843 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164786398 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067773842 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080379954 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.108463258 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156367017 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068726173 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.26054846 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091424119 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072492278 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067785396 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.187435872 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12520502 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070686973 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069405394 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070736966 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071018057 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362675413 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068647823 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.176956423 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06774263 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082557216 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070302791 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072402355 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071971086 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074655216 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074803765 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089909045 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069013809 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076229358 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068348525 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068987747 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069409078 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084426849 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362783356 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.175329166 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071125825 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068693485 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091979746 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097571824 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069249319 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068464023 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101485577 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067452552 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07007781 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069204524 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069143281 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084394389 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071502435 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115152983 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070204427 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.082941484 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070009704 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096753706 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071238006 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103836671 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081018575 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070664385 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.406075188 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072263659 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070574707 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068005798 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070520959 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069168635 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079938289 seconds)
  done (took 21.953472224 seconds)
done (took 39.077736343 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245817063 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075339687 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075698646 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076393324 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075980136 seconds)
  done (took 1.789663135 seconds)
done (took 3.018869284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120531908 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098615142 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067179171 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096417621 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069369005 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10011095 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099938247 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078247701 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099111075 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067561923 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097245919 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067731785 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068160222 seconds)
  done (took 2.373825419 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085910446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086004249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072378815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085146985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066411583 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084851476 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083987414 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093447396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0846631 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075048834 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06670094 seconds)
  done (took 2.10726076 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084690783 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086270604 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072128073 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084813079 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066307529 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08438461 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084267205 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088125993 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084880714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076373349 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066690097 seconds)
  done (took 2.095782255 seconds)
done (took 7.796545772 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078855885 seconds)
  done (took 1.28599859 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524743832 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.669529095 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082418168 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106981153 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184462644 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1134546 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.246264849 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087428947 seconds)
  done (took 8.396862811 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104278339 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072380826 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070798231 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071098219 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071968965 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071316835 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.0751731 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071262777 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073494643 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074391095 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072498408 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073554095 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073917838 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073310586 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071971437 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074453274 seconds)
  done (took 2.480254464 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092811009 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092699062 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075597006 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076459374 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074547657 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073840331 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076659969 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075505966 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072816337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074636694 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077078791 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075246717 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073979767 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066977997 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075902301 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078104979 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073128677 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075784661 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076596372 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077742156 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077221456 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066606775 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073981852 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076107407 seconds)
  done (took 3.135577305 seconds)
done (took 16.518022041 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105675323 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070242116 seconds)
  done (took 1.384614101 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082079895 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083555555 seconds)
  done (took 1.385144905 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083253345 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067682488 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090610988 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079312469 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06821411 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067837956 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088359558 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06869737 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068104118 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068609208 seconds)
  done (took 1.973075117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070252683 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077446597 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071776419 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081757258 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074937682 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066662913 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073821558 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070124135 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078014461 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065575448 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072917648 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084354518 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072961382 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086623049 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073094907 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070675422 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072896304 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070018425 seconds)
  done (took 2.555873336 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06748638 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068540675 seconds)
  done (took 1.362539548 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068737643 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066067435 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06909912 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068902882 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065500967 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064805076 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06620267 seconds)
  done (took 1.691168773 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357815802 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117207829 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300108359 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074292831 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083420588 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251137009 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068793294 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073992416 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07415781 seconds)
  done (took 2.663953448 seconds)
done (took 14.246990641 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081149546 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088438143 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096626315 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36776056 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093445055 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06916654 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115965093 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180272492 seconds)
done (took 2.331557334 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222229147 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.655314209 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408749185 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203031335 seconds)
  done (took 2.500004337 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330763298 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089758857 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062685638 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069597679 seconds)
  done (took 1.791449528 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069342513 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071333771 seconds)
  done (took 1.379008047 seconds)
done (took 7.131668955 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069014824 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085500169 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068604076 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066589927 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068667699 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066019595 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066950489 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069005436 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066667849 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068865001 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068650127 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068560243 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068610327 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068741991 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066445719 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06689085 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069085426 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.179615257 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066276314 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068674049 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066277281 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068919273 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066136146 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066799778 seconds)
  done (took 3.023063769 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086055683 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068827512 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073495214 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073852987 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071842351 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074880067 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073312285 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068429708 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074359979 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0707525 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071348281 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071046252 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07066343 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071338761 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070914946 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07153302 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073523633 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068111467 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070579749 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071407028 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073949829 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068366262 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07120678 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074075143 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071777609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071226941 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071378818 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068572211 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073960562 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071363502 seconds)
  done (took 3.411309569 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07191344 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065485963 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066628891 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072229044 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066146342 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066389982 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065429715 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065778613 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067205742 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065967388 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067003274 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065566436 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066145147 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066611642 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066814967 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07014827 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081244924 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066281217 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065939313 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066914862 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069220737 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068318682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066288611 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065684766 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06620762 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065767448 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066743598 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066125078 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06659503 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065768662 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06906847 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069820671 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065890175 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0727936 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069929397 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066501871 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070716731 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066526436 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067400731 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065852828 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066061603 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066100774 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065961195 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072577328 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066496139 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067390367 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066713403 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067549627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066867529 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068186986 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066341254 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066272592 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067837445 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067819311 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070264769 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065746883 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06685005 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065999287 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066953187 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066288637 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066023903 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065971468 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068961823 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066819259 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080986196 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073296369 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066407877 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067513479 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067376321 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068925129 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067786545 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079918583 seconds)
  done (took 6.141814393 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089772014 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087801511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06835159 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068056569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064304014 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06684049 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072119736 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066529232 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068054922 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084232825 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067273073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068199186 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068035855 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070477044 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06705945 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06850676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074484352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064445713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066783213 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070713842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067116613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071892172 seconds)
  done (took 2.824259287 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148266676 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071895769 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105709682 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077195555 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072174738 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077709815 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071992679 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072505249 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07204744 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070086552 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070311546 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072466132 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072215187 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069874125 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070893754 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070311345 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072244946 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070439428 seconds)
  done (took 2.663185366 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078432722 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068851229 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088336443 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068806728 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068471025 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070623164 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072699165 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0764172 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071559196 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068982971 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076080523 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070654013 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070835597 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068759089 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071029294 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068663207 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071081998 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068621172 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075990163 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073387598 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0731926 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076060779 seconds)
  done (took 2.853628853 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081050488 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070610581 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081949173 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069727128 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064742923 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066658316 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072312092 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068224933 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073044084 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070431142 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069318848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066908996 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070885753 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068517656 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07120993 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068546138 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070407678 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068604439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070478175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064515054 seconds)
  done (took 2.665960549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086658802 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070875625 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069925911 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076601149 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070253214 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069895559 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076597015 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070777599 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070352339 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090764632 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070453675 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070821822 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076605017 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077708218 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070114217 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077145755 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077095216 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076608368 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069899326 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070286189 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090482255 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070767547 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07742996 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070972171 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070729011 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07076893 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07015272 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074169453 seconds)
  done (took 3.343402742 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069062324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069741942 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066328624 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066956794 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066131671 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066072517 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06608291 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066774674 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068652349 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066595264 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069112288 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069034852 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068628684 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068940549 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06903749 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068624486 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069645246 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06663274 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0666835 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066481927 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068807075 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068738834 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068840938 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066573412 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066402795 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068954023 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066812539 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066534897 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068485667 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066519267 seconds)
  done (took 3.29534567 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076369284 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07511032 seconds)
  done (took 1.41511805 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065049669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081614217 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065625702 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07320627 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072140711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069050167 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075456089 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07182738 seconds)
  done (took 1.832451258 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083590802 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078847042 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069269872 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078367237 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077896775 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084460068 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134132793 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068799947 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074641877 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067667821 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08179766 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.0681529 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075185474 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069611117 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074376579 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075599485 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066802665 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073242387 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070262392 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067124174 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069731742 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07720496 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071866084 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064218206 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070160062 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090253286 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078966212 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068024364 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071813312 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075772703 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074335683 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063089055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068299166 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068503471 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067444448 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077368683 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082530346 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072057963 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076971673 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069123334 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076874963 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064124406 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072846545 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075135379 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078932295 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068601906 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069339135 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064291987 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066864488 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071437528 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064069184 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068919828 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063867919 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075735023 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07223208 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078803109 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067359019 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070596353 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071778762 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071662679 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075222764 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070967407 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071412366 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06847141 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078521626 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073965652 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076637136 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064381351 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063793607 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067108431 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077730085 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091161966 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074714278 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068737739 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069409043 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066783098 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071867403 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069477916 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074034565 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07521195 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068301724 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073746677 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075896004 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069626661 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071595684 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074869221 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067145681 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070029751 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066190318 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083403349 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067673478 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069519225 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066413233 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078238382 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072071395 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067855756 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065962639 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074768332 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062453896 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067149729 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067915313 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069043829 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076950888 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07082691 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071011288 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075701007 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074185572 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06816524 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069501509 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.191096633 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069893449 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068973509 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077311461 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064025393 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0726585 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070515014 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068999795 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077309295 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066979407 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068695248 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075825826 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074080762 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067939356 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065609174 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072191502 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068100518 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070974977 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076427705 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067981703 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063788806 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063958357 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072059533 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069381173 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072121587 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073021175 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071767441 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063250352 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066453517 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072540263 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07709877 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069051011 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069961523 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074144899 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070577193 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068386071 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074970535 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070988545 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067809399 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074199216 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069417794 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064026336 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070799886 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071175903 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067256781 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071882583 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070820931 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070717261 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069018065 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067730763 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074292729 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069035047 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067905084 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069270862 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067457565 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078849332 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070901059 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064258241 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065874732 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075403167 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067204626 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067982909 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068209627 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070854717 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06868244 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066743138 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068052195 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070544149 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076630946 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071651201 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068763113 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073837958 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080178893 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068409291 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071090446 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0683061 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069180331 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069261243 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07717992 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074383184 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072739524 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071482596 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065885801 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07399161 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076327386 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06895535 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066860911 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06872843 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072029703 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074508556 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07204916 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069317405 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066480116 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068847821 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069928616 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071140544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06722867 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067822725 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072740759 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066268928 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073203215 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068185152 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077651304 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070829349 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062955864 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069258128 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065341979 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073823047 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062850736 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066508235 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066986066 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067788433 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066344377 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.19774932 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063917738 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075997056 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076228003 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069838021 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068891052 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068634761 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075865071 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070687596 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072110962 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072748611 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075486026 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07866623 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068302959 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07210777 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081660974 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069311557 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063066883 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074740251 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067450351 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067911358 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068077007 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066770308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072379675 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075634006 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075383077 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06335205 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070778431 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066919694 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068449684 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064251153 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073193888 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071729868 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070004641 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076102602 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068526267 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068619786 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072193419 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068096195 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068675896 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069020774 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07183236 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06812588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070814231 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068555295 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071300618 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067740782 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066570122 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070213647 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068709219 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069709497 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073779021 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068014578 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068986527 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071161941 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069207143 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069592192 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069160813 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068076105 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071914933 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070094808 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068955801 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071484075 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063924297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076233587 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06825397 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075982235 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069266414 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065742431 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074201444 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071730397 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073625848 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068726851 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069070131 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070499898 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068169941 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071703312 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075849273 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067573388 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079064892 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07639539 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069713904 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072019351 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069401212 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070370099 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068427662 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070573148 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06916345 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069626557 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068405095 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073211163 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071327444 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069565064 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07063802 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06897589 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069040927 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069214479 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063246982 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067988564 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06817307 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068152281 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077406099 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068818295 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068211745 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067486022 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068691782 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066836585 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064783625 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074235986 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074503155 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067990373 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074376412 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067517666 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069940535 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077623228 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.193841353 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067780526 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067517396 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068031015 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07624161 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069394688 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07871876 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069856491 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069707292 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066617664 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069613693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067570036 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064156033 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06663853 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072297241 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06840952 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068133635 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06864843 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071539228 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069070408 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077849922 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068609215 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069636796 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068867848 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065923782 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06835838 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068527273 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07179186 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068917466 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067252605 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06646609 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067750638 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069432695 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070734188 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068174682 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070515341 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075733756 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068569828 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071819922 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070882362 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063420311 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071624893 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068301941 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068208383 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068221867 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072392142 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075044436 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06916278 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077682802 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068068542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071124293 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068822524 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067438822 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067913671 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068588727 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068980502 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068396101 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06984632 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076712594 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066673041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072102732 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069079516 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069972524 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075448841 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069266199 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072033959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073465321 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070163704 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071303173 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076525399 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072576965 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071773025 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069340757 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070711158 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074682808 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06824849 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075227752 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069774904 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069382943 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070721526 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06729222 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068987683 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068077897 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068553688 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074906057 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06908238 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068786215 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068440824 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066709687 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070052115 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071736438 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076285071 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071290111 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071907479 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064284676 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066811504 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068771811 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067024798 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070188779 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070481596 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073766274 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070562638 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069159235 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067740305 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078001237 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074297926 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071809279 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066814597 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071426624 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067989203 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070048515 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068912069 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068149292 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067992982 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07134597 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069356774 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067277552 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.205049072 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073693215 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070151809 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071526028 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070218657 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06972647 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06480897 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069095031 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071493905 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074057941 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072001147 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069219941 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07978718 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066890567 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070096304 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071383529 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069090103 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073166317 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064552469 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070701524 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069342986 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069505865 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064117708 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068888396 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067606767 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071356515 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068394268 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06444523 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078673693 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078120363 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072058332 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068749206 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067491163 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064339477 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063930042 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068339082 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06980338 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071033518 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078857323 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068640166 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068566413 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064044683 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068564372 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072435375 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071751816 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066378879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0642003 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068260484 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072120325 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074494684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067765756 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068162535 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072363689 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071410387 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066873575 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072029754 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066208562 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072491354 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080978235 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06863436 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069799116 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074941732 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076002639 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069230031 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064673311 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069103876 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072045178 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069915345 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069065305 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069703133 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083900772 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072291177 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069050847 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067755351 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071572594 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071286995 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077410694 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069650278 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069674157 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073891075 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071051394 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076372246 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072367648 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076421899 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072784501 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072342643 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067907316 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069990498 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067491408 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068780208 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070179598 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06895738 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073517398 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075247314 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068117247 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078252306 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077173487 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070035794 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065578358 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067832911 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06773573 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063959876 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068329774 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066719171 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06670326 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066336466 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067286177 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069264296 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073134085 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069478502 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068442332 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066822378 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0620606 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070106438 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069838729 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068624048 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.197536202 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069581454 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070030784 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073645706 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071638106 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067340281 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071162285 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071326645 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069911894 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064762345 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075039259 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068084875 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071219628 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068552591 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06881507 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069545085 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072813949 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073121674 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070130366 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071068486 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073531217 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070821529 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066320549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066541535 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07368974 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067475435 seconds)
  done (took 44.033244551 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10009284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065729417 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0641994 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064878089 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074122528 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065783399 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064437676 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065387607 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065687767 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067443655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064410641 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064653855 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072293875 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079190145 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074747286 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06867875 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064857656 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065638862 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065237756 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065476558 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072266118 seconds)
  done (took 2.809928146 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074691473 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078777315 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076265811 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083540978 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072612607 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072800892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076397328 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072760096 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079662647 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07439249 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079875426 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07234386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074450366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074331413 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074231108 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072702621 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07964108 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073013273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07223386 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07701286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072556482 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076475842 seconds)
  done (took 3.007415379 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069197063 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067792368 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069269562 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063227237 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067459699 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063459125 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070891908 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066098663 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070753929 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067818742 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067766756 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068054694 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070504859 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064173805 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069438536 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066454609 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107597808 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070799655 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068203524 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069068074 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064085616 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070360719 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064235387 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064767905 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067593242 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070898676 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069441797 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066792738 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067846668 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067600795 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068146424 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066992433 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070026109 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068858595 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067745634 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067925058 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068263848 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070620435 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064292363 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066952897 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068729358 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064708214 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069436765 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070032475 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066219329 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066511758 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069735356 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068324585 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063827936 seconds)
  done (took 4.708668067 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079024038 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108896491 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069699 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089440197 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081111964 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074309619 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072036444 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090897907 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065808375 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066480331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083008924 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080313293 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067836709 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072206837 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074896473 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067704078 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068573292 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066798235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070957022 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067476786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071577483 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074594834 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081019436 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079574887 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071677843 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066987507 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067407109 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071881957 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078577357 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071572912 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072337307 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072945919 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082351718 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072788342 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067498999 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06969712 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083327052 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068172452 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070430134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066047192 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06979117 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072004786 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074982559 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083170842 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068453557 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073145323 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068424437 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065319826 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079482409 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07065141 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074741911 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08044909 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071640378 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068557983 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072756295 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081848377 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068058781 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066304102 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070929318 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079125563 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066161069 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071212285 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080007442 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06965013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07445971 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080464673 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073166458 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071320691 seconds)
  done (took 6.505905752 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077382565 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097271524 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083804409 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084728264 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077320423 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077542579 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077626226 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0775972 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077662209 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081185578 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077660239 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116492409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073558852 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080022065 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086129078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077729983 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077170911 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07729517 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077417587 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077372633 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077330733 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083692809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077802843 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084215565 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080602398 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072869839 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077077308 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077244917 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084297141 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0773173 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081130318 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077765159 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07746387 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083968342 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080601089 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077706749 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068465961 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077201777 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077488882 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077453153 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073679392 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084067325 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077205824 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073175196 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078017142 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077169666 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084164626 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080611161 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079544102 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080794682 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077344588 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084500265 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07745895 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077800577 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084098802 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08652138 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083705126 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084124291 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07778211 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084193568 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083996686 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086410896 seconds)
  done (took 6.358672567 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083472558 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07521386 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083351559 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06395989 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069130989 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074385554 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066869891 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067396236 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075388073 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075662098 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077563484 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074281929 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077015821 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077937333 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073924268 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077470068 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074368934 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074180137 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07571593 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074559278 seconds)
  done (took 2.870476243 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076466213 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083885295 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068839578 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0732203 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072214779 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073293308 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071238235 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071661012 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069416587 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071939447 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077645952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077802823 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069510847 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073293738 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077547291 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074034911 seconds)
  done (took 2.547154599 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083550538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074744201 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080839498 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068722358 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068842638 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064764578 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068569875 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064181887 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065248969 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079963289 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068592359 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078925383 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06859409 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067525044 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065472031 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074037522 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064963772 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06622096 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068347298 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080096727 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07228064 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067106504 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071452288 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068944388 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070843546 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0727448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068099166 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068905354 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066132866 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068913918 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070856279 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072073539 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065739241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066610833 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067571553 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065750539 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068448414 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069205195 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073985877 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069148322 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066940452 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070610004 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068911958 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069483123 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065309607 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069045245 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065346207 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071591749 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066433559 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070984425 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068825632 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071127803 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069759114 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075617299 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071697296 seconds)
  done (took 5.215994924 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081413791 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071744711 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064076986 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066976813 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071546077 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069387634 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0721251 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069749957 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070218093 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067464784 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069894411 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072108548 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070216855 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072301469 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070259124 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072184718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064792506 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069658476 seconds)
  done (took 2.646826531 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0735469 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069057068 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075359779 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068806381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06962848 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070487736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064709102 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067787769 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068032887 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069003833 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068858856 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070923636 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067651845 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088037574 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068805494 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069043407 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070745179 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066955332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068533903 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064531164 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071121611 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067276669 seconds)
  done (took 2.910436076 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094470577 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084208675 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137827056 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080213389 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086623194 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073429422 seconds)
  done (took 1.946827511 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092137741 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101459164 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069099741 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07148504 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077001314 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072637499 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072536613 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072307302 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080154446 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077424246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072254544 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081948644 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079519872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079132114 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077318443 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077455077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072509764 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072428077 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068601081 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084235892 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072198175 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080383837 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072212383 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072294406 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072277025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078903806 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079337474 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077456194 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072103087 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079405196 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077783876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072754676 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079607624 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077349682 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071520768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079481914 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072365309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084634823 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077174882 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078747294 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07123851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076768375 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079472826 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076475286 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0798125 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072648567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075998948 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072835396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072354815 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085940323 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077259924 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078939064 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077271254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080298832 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07965253 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086437183 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077372824 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078816253 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077570154 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077184012 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078569453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077135216 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078778168 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077507096 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07710432 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079288947 seconds)
  done (took 6.493050688 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104226148 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069188461 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071817527 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077626553 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078770186 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07220237 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07252416 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072155516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072576651 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069548682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108727532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072276613 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078933571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078792842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072572028 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072120798 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072233075 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07862285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069261737 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086351081 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071982347 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078678978 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079384175 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078672934 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07743754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077570977 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072427009 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072416593 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072145317 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072044413 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076385598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072098605 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078658638 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069217632 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078997258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072548484 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071959691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076062011 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072091909 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077907893 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078731898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084384965 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072417484 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072397941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077292758 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072419981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071948644 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068841465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07186755 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069059709 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077087804 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077597815 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077394801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078551279 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072454486 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073076614 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072596586 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072640874 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072344167 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077312607 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078901055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0725732 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086356136 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072606749 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072648741 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079901253 seconds)
  done (took 6.411207807 seconds)
done (took 133.175505193 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199342169 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177706224 seconds)
  done (took 1.754091043 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071178613 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098258736 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077577509 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130357615 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068483268 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102407351 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101187157 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079007727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06831259 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068101566 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068484263 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071302121 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134211795 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068503644 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06837946 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071179675 seconds)
  done (took 2.743866569 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098662294 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156280645 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102374451 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067098032 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098733261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074447365 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067308754 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079022032 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072941887 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068093874 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074293607 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073434227 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067616096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072455567 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072742548 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074070608 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067827716 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074365602 seconds)
  done (took 2.861235844 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097578412 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09215735 seconds)
  done (took 1.591956074 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.150878143 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134345974 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200596577 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331501082 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155760049 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145350551 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.141893858 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141163729 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113807496 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137026787 seconds)
  done (took 3.047981935 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09956433 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148344598 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264821725 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115273243 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075105333 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093010996 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117458781 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081128107 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081494735 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08127782 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08124065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078306098 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099828841 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075532379 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076459014 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077289091 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102944736 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075223392 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076816627 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077271096 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101142945 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068554622 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075099629 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07499696 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078464186 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07896676 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068732949 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068371762 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077846427 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077098647 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077844391 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092148317 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078781012 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104276769 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073124495 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105362343 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078026178 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074695133 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077017627 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074805034 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079417159 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079051818 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075279824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077957001 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068304286 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078298043 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068902693 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068278939 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078872617 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069566318 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078426363 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077876955 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103880935 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069324393 seconds)
  done (took 6.080610294 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108122527 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107887191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071940289 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112881581 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104724762 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071455176 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106021104 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098588154 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108618931 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07205201 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070555461 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071874078 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081243502 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082656766 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11675907 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108548946 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073973803 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071708414 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108727466 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108358946 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070728664 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101992102 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09843885 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107862576 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070039329 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07233387 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070441529 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071641716 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078379788 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078968561 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070895051 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080749363 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085304386 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078707698 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069893945 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070408495 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070827436 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080664802 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080091814 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080444559 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078067978 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069334698 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070439509 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071479609 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072039839 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069637381 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078863453 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080990894 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079039312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070785327 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072208946 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070906653 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071557019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080170329 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078088946 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081047116 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080189876 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070796945 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070729956 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073810482 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080568841 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080258943 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079730279 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071345087 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080547263 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073542907 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081053262 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084615735 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07057172 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072032109 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070082032 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070867577 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071834637 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078176285 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079124509 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071958693 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070596034 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070797132 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080122762 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079336644 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070449765 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077484333 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069174015 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070068862 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071572913 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071543195 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077171627 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079586253 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071249386 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069920991 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069651416 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069136402 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067969036 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076145103 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078374652 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078080641 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077210934 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070291943 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077185889 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.210842107 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073038171 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080560572 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071584107 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072775636 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07163709 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079198224 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078316789 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080662639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070531289 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070754379 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07831137 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081846149 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070687752 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078979877 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080513233 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079286702 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070472265 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0817589 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070701779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08030211 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070366688 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080770784 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071844579 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079767517 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070367712 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069429627 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070577594 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079546428 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071568178 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070102884 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071684367 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070459745 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078675979 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082829855 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072304726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078537939 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078727087 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072760422 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079247141 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070325622 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079435173 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07096058 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071376425 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06987293 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082250325 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071051455 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070522116 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070464052 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080422973 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070725919 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080773092 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078692371 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069938684 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082419587 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080745713 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078150534 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081153596 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072374263 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07078731 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070550246 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070485027 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077583506 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079251439 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071836774 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070232044 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078498271 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.08024026 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069570752 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078910985 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079279163 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0795732 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07073363 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070324584 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081330668 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080953617 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078856227 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079146581 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079221343 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07077933 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078801672 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079439917 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070494726 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084686597 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070346221 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.0820832 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078253321 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076682584 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079020432 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079755441 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080022705 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08057438 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082303944 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068771072 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069148265 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077913846 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069077196 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069438484 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076480018 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070798483 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070573038 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.217877837 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071448664 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082285114 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069983539 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080215436 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070715374 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072687806 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08377428 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070796433 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072077359 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079466336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072562267 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079542167 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082296556 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079354697 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071297501 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072029006 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080522465 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07997811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071220669 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071197749 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071803654 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078552668 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078658062 seconds)
  done (took 19.000315631 seconds)
done (took 38.495036999 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.192474796 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.142879993 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156515847 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111285197 seconds)
  done (took 2.094615371 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111593784 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097414287 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090407208 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067767303 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096855569 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067560388 seconds)
  done (took 1.969482352 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267727557 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185290433 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169574971 seconds)
  done (took 2.062434004 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.191462539 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.178432149 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421032332 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25688845 seconds)
  done (took 2.588314107 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136916003 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086093114 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068923211 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084911695 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126665039 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154810148 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097215998 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121519546 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080656461 seconds)
  done (took 2.44601615 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141746268 seconds)
done (took 12.740601355 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.257437161 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092697655 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081365368 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070262303 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149294768 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105306304 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098177476 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110229909 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195091521 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.221444958 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092904039 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176934519 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115557586 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077937509 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177518419 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16880124 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103836514 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091136373 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080904697 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098431162 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075447505 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.097693796 seconds)
    (23/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174106811 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194665825 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098730047 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076167285 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.216283891 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154145792 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078992902 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.224494213 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074454855 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068700186 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080770282 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072113541 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19695829 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.367136515 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075295428 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121266328 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075655888 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066958309 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074218031 seconds)
    (42/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.212876788 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12067645 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088512223 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065573422 seconds)
    (46/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110720894 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.144763129 seconds)
    (48/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130416833 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094947593 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092601741 seconds)
    (51/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112873042 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067835564 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090021807 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108851184 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089828942 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.069417633 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07597712 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141026305 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119233193 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074807202 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054330121 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.169640502 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165330574 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07000762 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075800152 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066796349 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092468662 seconds)
    (68/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.150033603 seconds)
    (69/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072553336 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075965839 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066090123 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158256554 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053453374 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067954578 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090457702 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.170950519 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080274121 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148940237 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075836638 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.151529147 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.327693959 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080911092 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141809544 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075238879 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142838937 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.15919238 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177716724 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153465567 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074415572 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054530593 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069283418 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088289348 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179505641 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097738932 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091710313 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075814328 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.14211141 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 0.128775764 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054126758 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076222681 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07948665 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080671676 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073669419 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158888277 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067672586 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.074250911 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092023777 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054106558 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065311678 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137916186 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.177987297 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074613124 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08907088 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110837404 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067811745 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058023079 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176086393 seconds)
    (118/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098210142 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131555355 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0745425 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075810855 seconds)
    (122/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099982694 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088271582 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087254961 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078669315 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.169420421 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187776077 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055989547 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076824878 seconds)
    (130/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090484131 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07387607 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074522291 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055774568 seconds)
    (134/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094270979 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146918102 seconds)
    (136/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054721323 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074180326 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079551324 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054060474 seconds)
    (140/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074743434 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081454672 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055307658 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166668335 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075248713 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074152242 seconds)
    (146/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075245071 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100065122 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191743108 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069500087 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15519736 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076530074 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055512745 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066862906 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168816734 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074623367 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076131279 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068189834 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144514878 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089053107 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078207431 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.199849226 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077413144 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092135385 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06922293 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067868535 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070744345 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067656807 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099616086 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.178119727 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141034063 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075468548 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075251072 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053940358 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067112297 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064459745 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066866145 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 0.127088121 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09151979 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134170922 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07852865 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077865992 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.222243541 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160980459 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.113797823 seconds)
    (185/309) benchmarking ("sort", Int8, false)...
    done (took 0.146031713 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092535871 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054538383 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056526432 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068833807 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05483849 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068574443 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083029501 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094440494 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071273543 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071438065 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076628851 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074463013 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156964257 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088272537 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188949541 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078008702 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103748948 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13681688 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074057271 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05428288 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067455043 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069060101 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07600791 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070971768 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068060739 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076551303 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075012489 seconds)
    (213/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056986177 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136053349 seconds)
    (215/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113482582 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055312725 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075403152 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070317553 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066250225 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09342592 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098465704 seconds)
    (222/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073746134 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075458702 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107296926 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055640764 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068172437 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067517682 seconds)
    (228/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.103199183 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055743967 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054893074 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076685231 seconds)
    (232/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055657094 seconds)
    (233/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070173295 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083302479 seconds)
    (235/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080429976 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056749193 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054915945 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05498526 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077830066 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055287684 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.189433606 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066864376 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066599259 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054539814 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055042895 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078674306 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072719837 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121857567 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055960656 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054475955 seconds)
    (251/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079638133 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066559155 seconds)
    (253/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05538372 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068481482 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094114398 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066328415 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068568552 seconds)
    (258/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055757675 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066748022 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068293649 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070365986 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069462956 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111693778 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054355553 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05453551 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056938794 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076027767 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073831201 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068963424 seconds)
    (270/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056011391 seconds)
    (271/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110144045 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069637106 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073447752 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068563629 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080281978 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06765002 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056557943 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054224596 seconds)
    (279/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064231019 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066800426 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06814864 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053846844 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074486185 seconds)
    (284/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05489451 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173815107 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075968368 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054353874 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05373745 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067455014 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074594516 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065942528 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056260225 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053905962 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053893942 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108144429 seconds)
    (296/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071590948 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08897094 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069471568 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053401447 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065150514 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073380453 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053890026 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068400443 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053841108 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064828279 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07242915 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.234078773 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09555085 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05695499 seconds)
  done (took 31.328093159 seconds)
done (took 32.782430086 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085292542 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095185655 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078502647 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095178725 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08355494 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078651329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076353462 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081648362 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083700365 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084701865 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081959324 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058772762 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077669806 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077868675 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077903764 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092846112 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082039856 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07626308 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07673802 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068512308 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076711336 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06940482 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070899094 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05791229 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08154356 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075039871 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077270894 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07705602 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068632796 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068753514 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072704899 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076672292 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068553365 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082236998 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076430538 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076126051 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077991921 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079438552 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070301456 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068664343 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077469285 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068866197 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076187468 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076743983 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075399048 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074336934 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076291976 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080459816 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092463286 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070249431 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077706091 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078145404 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079412735 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075842611 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072848397 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076076069 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073581134 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092326538 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076526832 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070384844 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077325428 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076941194 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074318012 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076400932 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075966655 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078211067 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079467319 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074184145 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077825366 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074991306 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068446164 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076725607 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07225424 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068324173 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079195416 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082914681 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067614394 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074738599 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075832136 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076952072 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067982926 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070903231 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070513069 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075660342 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070317872 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057767422 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073046474 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075913086 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067832178 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076590927 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075828058 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076047302 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069971336 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08029562 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067849011 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073885686 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068586398 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068658124 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070142612 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073253355 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068465292 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069946169 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078670458 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069597833 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074468951 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080432454 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067730049 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074636828 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066823063 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067379273 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080914626 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076831322 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06761605 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069666039 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067039633 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074616538 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066365137 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066749828 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066924829 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067111551 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073513575 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067144512 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069481366 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.215467517 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083509047 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069093595 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073033118 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07141252 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068828917 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074720416 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069041927 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06821085 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070496718 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065141362 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070640213 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068903741 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075431828 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070453638 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077492705 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070463528 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077294011 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074231192 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074295561 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073816977 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0672432 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062839742 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070383576 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071345671 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070194945 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068526729 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070194376 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067977241 seconds)
done (took 12.951008723 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069104938 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131073417 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094987206 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094601502 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085000245 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06911205 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076998325 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096598916 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070588796 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098425667 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088646659 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086675117 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110438593 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067849333 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069179769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072881791 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070326751 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082098682 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097764315 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08759187 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112135509 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068494275 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092486225 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089395537 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0877759 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095280577 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06976293 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072827567 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072205321 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101423092 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088999542 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072978417 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069729455 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097871491 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092368303 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083470205 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069648829 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083916572 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069556027 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06879173 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070231523 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096813054 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081202123 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081251481 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072661319 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078161671 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070069748 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083471522 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089644383 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080368946 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085759991 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099072191 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071286896 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084368374 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067833057 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085701472 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078422918 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071123898 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069524644 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076337138 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068923201 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072618098 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081682729 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081268398 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072739275 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085189447 seconds)
  done (took 6.942536822 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086031224 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093329499 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084216103 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086834977 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068365884 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069155547 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069241441 seconds)
  done (took 2.109689419 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069838628 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088455082 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088847645 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090081379 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082553747 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088542957 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077959773 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069774135 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089296221 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070790601 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089179785 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09870189 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072525791 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075858381 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09112487 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069779251 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091879255 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070109844 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072432388 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091189597 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071833906 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098021543 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073017664 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069718772 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082880271 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070026865 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11319295 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073603569 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071481266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072550766 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067576624 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106280489 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082136081 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076489795 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069709195 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083764581 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083099687 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067989411 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085802056 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077240869 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082461835 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070387599 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070752106 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06796646 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073391118 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078948708 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070543358 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070594854 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072071274 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088026719 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070978839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082205763 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072238533 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074564631 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070987938 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075899068 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078833299 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070534639 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087912316 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070853811 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084470087 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084169575 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082556045 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084431378 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071451543 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082337573 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082295451 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073208554 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07175105 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073198245 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08399817 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068049162 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07143013 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079542719 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07179828 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091287556 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09037597 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071251218 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082542769 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069924946 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069766992 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069780393 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091066741 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074821966 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06989292 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07339231 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0729779 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068391974 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06913537 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073448692 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068077081 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071850331 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072476431 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072851145 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072884545 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08408764 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072149769 seconds)
  done (took 9.087186069 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072168036 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07065264 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071831555 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070106764 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071417753 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070353088 seconds)
  done (took 2.003292939 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091944503 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071163601 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081106661 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073807942 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102369702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088025127 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087977041 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079304293 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084203042 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080121218 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087346868 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089095892 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092864754 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074637796 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088095591 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073995878 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088350117 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076420793 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079822244 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074899648 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08707574 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074741974 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074822799 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083712577 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077735327 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073799009 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080505702 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080458586 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079699189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079965787 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07444528 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077760605 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0733066 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079443361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088567333 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073629692 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074055437 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078731268 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074273839 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.08092842 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088981647 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074583362 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075941287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078984249 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079067499 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073024858 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078891711 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080926252 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087826261 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079120593 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078694336 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073978972 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077259966 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079089072 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072671117 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078881311 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079419264 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088069001 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074798084 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072591442 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070890134 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077604824 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078912529 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078163764 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079632747 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079602983 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072716003 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074676876 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074480159 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074010628 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079130227 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0713161 seconds)
  done (took 7.26274688 seconds)
done (took 28.943901306 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535940897 seconds)
  done (took 2.064245693 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597911282 seconds)
  done (took 2.153497643 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.876943224 seconds)
  done (took 8.431278965 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.363794603 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470741594 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.700848362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136194344 seconds)
  done (took 3.2608651 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.714812445 seconds)
  done (took 2.272100068 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232836518 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220847749 seconds)
  done (took 2.018243495 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375728068 seconds)
  done (took 1.918813758 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.085417411 seconds)
  done (took 2.632133937 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23245669 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175698812 seconds)
  done (took 1.965388757 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451534337 seconds)
  done (took 2.000666439 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.8072971 seconds)
  done (took 6.363920578 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216881141 seconds)
  done (took 1.808630741 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236782469 seconds)
  done (took 1.788760931 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.737715711 seconds)
  done (took 3.290036249 seconds)
done (took 43.539990833 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085427581 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086778029 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08670524 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083546703 seconds)
  done (took 1.872714249 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079033394 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074963893 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077953865 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074809384 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077829479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074806403 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075886248 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077153216 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074673118 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075480855 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074802541 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074566728 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078298824 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076529001 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073171259 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077090475 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077728711 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074933061 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077717281 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07496974 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073002862 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076834824 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077177988 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073865374 seconds)
  done (took 3.375847904 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079545845 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075368001 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076638957 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076417576 seconds)
  done (took 1.86919845 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080794566 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090953979 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089039015 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080286327 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091285113 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086688803 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07167222 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071614986 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07279069 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080092218 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070376299 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095490125 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089570431 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080223403 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082049152 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068331112 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07080587 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088439908 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080913142 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081099501 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072794359 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080431296 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070629455 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089708067 seconds)
  done (took 3.497439168 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087166287 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100586635 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081502115 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091368465 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092879768 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067707946 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087648769 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093362768 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124308434 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067928481 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073627039 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068389555 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076566676 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067983516 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082359204 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110728143 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111711436 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071420132 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099503002 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068627044 seconds)
  done (took 3.296623558 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075165089 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071382258 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07262654 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06821031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07905366 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07444534 seconds)
  done (took 2.015509793 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07171396 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06984372 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0694323 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068861939 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074010019 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069105968 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068214417 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070009594 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06985895 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069220763 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069487084 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069245924 seconds)
  done (took 2.405458372 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184140746 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071052288 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070672587 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06933128 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072735613 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068924424 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082381843 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071319721 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092981559 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069131028 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069010652 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071013811 seconds)
  done (took 2.560640172 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1958038 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077073679 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222328927 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148692346 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107748351 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111733387 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111752939 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110296207 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135189513 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098553958 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158864696 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161254693 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105406281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133570404 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089481902 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100658589 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149028252 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159195157 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10501808 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159531043 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139671847 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123765908 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142022191 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101016343 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104501703 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117749385 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073391566 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080933484 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163047062 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129579358 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13939582 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114735388 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091267214 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169479787 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161822246 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135999947 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143866596 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08530648 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103238572 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129020907 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186763478 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089152662 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298478749 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109536479 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081594721 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129846791 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115835712 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117212632 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102619821 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090162588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141606905 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174177186 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131779674 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087617897 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120668867 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110765824 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110951642 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110368423 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169647272 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152471464 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125819122 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07371154 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109153528 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145536352 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128620857 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105759273 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120391134 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094104351 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129068138 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148104911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119655827 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137783503 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114079597 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088819662 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117359176 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134354723 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124679545 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155069228 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122141752 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074778438 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11967266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099968725 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081957562 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143993579 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077089635 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166444007 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099036629 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105068416 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120323682 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105538482 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106020365 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148767049 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285186644 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103166397 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068248705 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104607625 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11671766 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140070383 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088311731 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105760595 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115620357 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078966642 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130829716 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077297867 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120329073 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077713783 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121229466 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126300898 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078943507 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119409906 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102355205 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099721727 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127789032 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151984653 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088726432 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08169599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159296084 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120269789 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101231297 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137537413 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149526878 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099871101 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098907905 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143036116 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164627998 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089312546 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156216036 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104365297 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083872949 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087316307 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120971476 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109323047 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121080147 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082900115 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115985025 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158391855 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075839837 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095131877 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130489461 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080177902 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081322855 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103823144 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103364383 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095859686 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097271573 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100186214 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131398007 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27145027 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107071165 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122541266 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098332929 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160024192 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088801091 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101313593 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103886296 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072767208 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128302261 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149259187 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080172117 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154050647 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118465108 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114003529 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116635078 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084950907 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13307351 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080292667 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072317445 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137402528 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108580461 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106666693 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14416009 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114049039 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120938571 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116174595 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127771428 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126556083 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126195348 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10524277 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088809232 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110438905 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124779425 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075548568 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090634639 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081310056 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104002636 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095131908 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084025246 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136483766 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120688571 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111028921 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109840652 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096260789 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140151379 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077053483 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12302437 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116861952 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095708819 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145503476 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144391773 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127559898 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09698821 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282073884 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073084272 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076093439 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.08844441 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119433696 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084225182 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083756404 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112272836 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140420049 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123989156 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132298784 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119927533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117560216 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147469353 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071883906 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118009591 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139071436 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11902163 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103789148 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090873205 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098040089 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136491556 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104585572 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17053511 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111651573 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121133667 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148896945 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100935931 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080369572 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101177662 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12857625 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102363615 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137947097 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098130923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088723226 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106811184 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078960523 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098401949 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123929184 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11588209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131217615 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111833891 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129749185 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079245734 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111882399 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118443885 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118829349 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065932665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114749035 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151771345 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094055376 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113871485 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14429922 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078739082 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.129449466 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158975473 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134289718 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083315889 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102428616 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114287782 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119396177 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112327021 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126139394 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097770104 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1253864 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103150556 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082579295 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083940101 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091059819 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097514726 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.089384518 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.095324481 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.105107668 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091554315 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119612624 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097475545 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103136641 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108944357 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095322085 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089310189 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091575832 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157116615 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109231557 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148904145 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09529577 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.127128352 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143370696 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073336185 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077738576 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076086712 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125797909 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082749205 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119718882 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.103351702 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109040356 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113632862 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126718187 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091940238 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068559341 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101760857 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122800674 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114974278 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093142787 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096321646 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143925487 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.093494273 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.339540814 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112844395 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116684639 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106576128 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164693309 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066326492 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107033696 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080269585 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082881082 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125144137 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146491122 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082952634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.098391953 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119021177 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112037357 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125349851 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100123272 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111296153 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123433971 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145091505 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126181999 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090997749 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109791883 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125744902 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149488895 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102470886 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097785172 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167425562 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14689864 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153618185 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087702431 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113361191 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112705672 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108110209 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135418421 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084672901 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156056724 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083849088 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132554961 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102536114 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090008538 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126350741 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110457972 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088855843 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139833358 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114927531 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083391639 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078816176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113783833 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116279388 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10309444 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076423817 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289699685 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076459325 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129684866 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154351196 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08230505 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103061678 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096721501 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081504548 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103672071 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101370854 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08805852 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096763261 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163148438 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087067547 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142097601 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12958758 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109983905 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130428834 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102227806 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63984272 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079187211 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145605159 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113389802 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164331993 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099345486 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115285738 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108124165 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118697696 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139356833 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102475921 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177215485 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128443433 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114262343 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080657005 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101993619 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103468869 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087751203 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106155078 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111819902 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113982735 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093509784 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114596775 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122028666 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083361537 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096157023 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148192288 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112474049 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138278697 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133412866 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085202353 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114631052 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287700807 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081690327 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116110148 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14574139 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104547083 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100123902 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082164624 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098296887 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152608499 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075483851 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151398208 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119659678 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108063702 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111882165 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108593675 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126656681 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104046034 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118904146 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091276413 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106542888 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112724835 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083039032 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079569526 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1038191 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109065212 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097653721 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096271627 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097214135 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146235539 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07444668 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098655857 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113420543 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138842483 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165317316 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08770318 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084388403 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117421648 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113658746 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11084991 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119291036 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080599398 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082840482 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081185137 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.0827581 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106435321 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111832653 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111905239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108689335 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155634771 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083546098 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224583545 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095623997 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102754299 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071194533 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079143576 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09598216 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24698028 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104582067 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111289445 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152516065 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095235344 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09058306 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090910924 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076364609 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084279452 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123185322 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10765752 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115709098 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099947999 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06501361 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104575384 seconds)
  done (took 57.627921722 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11130103 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084806941 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099330866 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144446592 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123172342 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20024626 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156677649 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192770191 seconds)
  done (took 2.833429142 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072824489 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095780798 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104932097 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085033664 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069720729 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071220861 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.220686383 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083680491 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069365951 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095354239 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081528598 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072395966 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41609359 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068985801 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070392282 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065552177 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070657943 seconds)
  done (took 3.514272115 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381149952 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62559331 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.335165127 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080240527 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.97521932 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093319868 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.177959221 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136946323 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08166695 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545901384 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409582422 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135346966 seconds)
  done (took 18.689521812 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086153132 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077666639 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091178445 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091529497 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080573676 seconds)
  done (took 2.135234282 seconds)
done (took 107.276042814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085668516 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.583231039 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056972165 seconds)
  done (took 2.38067209 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089954675 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086923133 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086990418 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085153718 seconds)
  done (took 2.069595862 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077159065 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078609039 seconds)
  done (took 1.866179096 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22460024 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167901203 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097050163 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086043383 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082392733 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082030983 seconds)
  done (took 1.965859117 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075399285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078421156 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075253263 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077989914 seconds)
  done (took 2.016137988 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080398956 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055425687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058727976 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060799311 seconds)
  done (took 1.965573973 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090429345 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084341994 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080958871 seconds)
  done (took 1.968073503 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101900721 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089455376 seconds)
  done (took 1.899332815 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084945419 seconds)
  done (took 1.799393459 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095206497 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099760485 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127613754 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109487961 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135298731 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107328342 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086179303 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086984283 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078572518 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087592914 seconds)
  done (took 2.725675078 seconds)
done (took 22.941741574 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081817855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366809583 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361688311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091499086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672447022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359624637 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970244771 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09482922 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140091725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070435075 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087043506 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651914124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961579126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323612489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948523196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328028489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.666563925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071473164 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070963687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070802283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957538064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070453996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070778502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071496051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.663963135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374080825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071524714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327682601 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071731634 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07289759 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358346958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072150486 seconds)
  done (took 16.266983463 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.091734916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120039911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075051328 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086630784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072993715 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072452359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073836801 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071498519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122328547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07090071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088001296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070661704 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074147584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071748908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090493436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071521791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072330463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071955228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073708672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071684845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089667992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071032008 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07129595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072235948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071428732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083448662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071763837 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071867482 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072323895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073244519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074149424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072114909 seconds)
  done (took 4.240179218 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118182106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125319524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075951435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105745337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113403011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073101459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142441756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095675424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128827227 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070844098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088134478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071057954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103507435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071807773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091258027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071456398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072132696 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071866879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071157233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071803583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090442648 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07210437 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072383266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07251121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071694848 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084497185 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072086084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071891666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0722422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073357097 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075489776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072595014 seconds)
  done (took 4.470798129 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076216243 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077520547 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08549212 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086258602 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072259842 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07489803 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075581343 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072367431 seconds)
  done (took 2.361817145 seconds)
done (took 29.065045197 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083131487 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071629255 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076090828 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090297596 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075896722 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080017819 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06953937 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077879908 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075445599 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075850224 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077516818 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070461095 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074441742 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069931353 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076578296 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071142483 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082010231 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075115967 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081245571 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082473099 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073249497 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076029567 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07805486 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081444713 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081436628 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082032847 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080278126 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076709451 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072492587 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07449521 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080276598 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086900196 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071958842 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081519112 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071556222 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071092782 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075397167 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071321074 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081451214 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079674868 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072927428 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079454569 seconds)
  done (took 4.937533892 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091708354 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092143267 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08612328 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064135002 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068268268 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067591886 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09018321 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062732736 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062485442 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089680426 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05966959 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062438851 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065594279 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057390457 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062790585 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060919978 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06443306 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059292829 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063088189 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062532108 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090221281 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057555559 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079889223 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065874766 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059952686 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065264802 seconds)
  done (took 3.553593084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078395003 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084290146 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090803954 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142479238 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112608716 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079919934 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080509588 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093997894 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096555882 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069819159 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074115806 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095765859 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089243743 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07704308 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070666867 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086584631 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087760766 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073251317 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075627782 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093321366 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088038653 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087773693 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09337753 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085489926 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069577621 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072695617 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07396355 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083893631 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07295134 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079629586 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073365063 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073653399 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072469681 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081535779 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073272776 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072809842 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095473935 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080149826 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080718718 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071636808 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077737023 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071964517 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093776564 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125208533 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069476244 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07595068 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074069088 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080126028 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070061955 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096289128 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081154137 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069801392 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073069679 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069912502 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069973466 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072915559 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072146231 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072378939 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078482444 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075530454 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093302095 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074834432 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085770753 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069634604 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07811711 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069588761 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07116129 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069717548 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094824031 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071966648 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109618523 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070785198 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071515914 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078965846 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077989215 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076330284 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070461938 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086202773 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081882831 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073632144 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07818151 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073542647 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072813502 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098179407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07305257 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072060037 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071306584 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075547642 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072773983 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07160942 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082823317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070332172 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073009607 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086473573 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070120076 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072310784 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075761368 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074895049 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069984221 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081028664 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074984241 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071317247 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079242322 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069976639 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072495691 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08115816 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075984551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069386486 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073953059 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075002186 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070706099 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071324786 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072499927 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071682175 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078275865 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076698217 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07428375 seconds)
  done (took 10.998532205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162742362 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150266289 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073836136 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144952226 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079430643 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080673659 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145614567 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094701047 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071021972 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072141091 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071125986 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109938916 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105730385 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116246723 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080743325 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07083898 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092799276 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114248875 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146729718 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142362114 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092724771 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078879263 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073208216 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072490801 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073215946 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080142133 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087174048 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079417156 seconds)
  done (took 4.542533808 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083788725 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102742032 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077120065 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092102211 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091266555 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070811281 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072487582 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072274419 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08680855 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080643846 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070558771 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075898032 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077478055 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073619702 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071442674 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077402631 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077050834 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071852582 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075281035 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075358813 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081018343 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094281029 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073943156 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071943937 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075550742 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070638337 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066599997 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086282531 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071366499 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.09413553 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06855169 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075532967 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084049756 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071803384 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071244858 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070804197 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070725275 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070731749 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072746587 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069385595 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069512782 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061000997 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070100094 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080849085 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083269005 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.06007654 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075576958 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075765927 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075912962 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068779929 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073734 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073386885 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073596439 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07749384 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074379985 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075766253 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07179181 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076543472 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078622726 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070617013 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068582366 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069397613 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075148165 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068016436 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085492253 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075569745 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069739351 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070751077 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072009133 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083766008 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070618811 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075417838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068531428 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07256293 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074952284 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072857965 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072132782 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069532742 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070818509 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073111978 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058906937 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070810121 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056905176 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073409463 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068840374 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069376173 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070812524 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075582489 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081733689 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071922113 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07660689 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071861759 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069808322 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074086241 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063645636 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072736634 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080447018 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084513597 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071016937 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068928709 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081969205 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075354068 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069928732 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059649226 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074816338 seconds)
  done (took 9.574984654 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094189755 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07306711 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084219563 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091670755 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088460725 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077064045 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080391884 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072122078 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085261033 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076796885 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079379804 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070960154 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080865486 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079518175 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072705361 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080403987 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074200651 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085005281 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08439902 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071104931 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078823106 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083024453 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092510133 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082834608 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081671124 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083002295 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092111415 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080102994 seconds)
  done (took 4.057821517 seconds)
done (took 39.394985433 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.835056746 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.997667392 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.823259361 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.141687192 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.12438781 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.841265843 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.898773956 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.811930897 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.053824894 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.854086371 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.143845771 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.89815854 seconds)
done (took 66.299333306 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.835357327 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.949411855 seconds)
    (2/2) benchmarking "String"...
    done (took 2.040635757 seconds)
  done (took 5.732294562 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.033251073 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.454090264 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.057560016 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.8097379 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.815898652 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.122027111 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.614272608 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.31882327 seconds)
  done (took 30.931324209 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.980496513 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.032091104 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.494276561 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.530926079 seconds)
  done (took 15.823890277 seconds)
done (took 64.303079053 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.830249335 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.821104877 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.82835984 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.777614803 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.859917145 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.810827403 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.325980253 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.905470877 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.792001362 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.789891789 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.796027238 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.212484973 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.79480956 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.27232252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.79070845 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.797368797 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.850941129 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.27662226 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.951244634 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.810356292 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.799487651 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.811067547 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.790985682 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.803053518 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.815662247 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.78954484 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.184349414 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.795260546 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.649591994 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.794723219 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.854893585 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.877368127 seconds)
  done (took 204.989655056 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.795701647 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.648553395 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.796791568 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.834342387 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.137766131 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.973783971 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.88059444 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.257806594 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.800128772 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.80433795 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.968961307 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.796244485 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.004588051 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.823260837 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.83511644 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.874582471 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.955633669 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.013574862 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.838604864 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.964612486 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.798320242 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.785551499 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.75321994 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.957764806 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.804286206 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.89085259 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.797159398 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.809676935 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.987085437 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.939536622 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.792278749 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.800026159 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.994850405 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.666204043 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.802933422 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.808591499 seconds)
  done (took 170.119711415 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.978775129 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.795779829 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.79242002 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793948692 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.797876432 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.792369999 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.916752786 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.915660757 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.415911096 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.46567088 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.84312417 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.793528869 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.588331277 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.791770705 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.864314598 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.806574137 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.793614761 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.793194674 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.809627008 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.819087313 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.794825275 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.79442576 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916439722 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.805766548 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.791830896 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.80022373 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.795621475 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800215847 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.165658084 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.791180557 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.975525749 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.792450281 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800414242 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.035852856 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.794043835 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.792684562 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.65523688 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.92231292 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.878195949 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.795228536 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799370786 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.796691515 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.01291213 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.792992245 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794977716 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.794500733 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.799265298 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945736996 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.794461697 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.915838847 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.798960302 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.277106454 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.794943844 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.793632998 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.618362113 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.391738015 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.794810578 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.799841238 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.795293729 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.794891312 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.803789052 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.529576756 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.86559113 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.794612338 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.796507047 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801157461 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.79505294 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.844079919 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.794402234 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.867685 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.795635 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.026091054 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.852653877 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.918706479 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.797363325 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862919915 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.888428584 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.794070465 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.795213213 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.796406946 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.793716813 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.879009839 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.7930024 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.922173642 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.802346362 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.799056452 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.84629569 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.867389351 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.796422872 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.660820799 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.79556889 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.796954021 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.07251943 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.797446276 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.863723958 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.794355895 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.798754328 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.922420702 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.915871472 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.513029008 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.800173917 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.398034612 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.803794381 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.934359723 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.799847341 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.954337867 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.798757753 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.880427288 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.802226535 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.799015465 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.82873681 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.799400665 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.857111245 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.798456073 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.173631341 seconds)
  done (took 404.813331584 seconds)
done (took 783.69451669 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.400386869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.376594139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.472247128 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.388710813 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.37314314 seconds)
  done (took 13.737547933 seconds)
done (took 15.465723937 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.886378058 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.890704586 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820209427 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.888050638 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.817759646 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.886024306 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.866736223 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.82054222 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.854582177 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.819198993 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.858205119 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.822045652 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.808651549 seconds)
  done (took 25.768831632 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.047292113 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.042595516 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.872104415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.042257728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.846042576 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.055324173 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.963750647 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.953683279 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.956866184 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818599231 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.812660775 seconds)
  done (took 23.138911406 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.041483786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.05289604 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.879054638 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.041895458 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.849364294 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.046921144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.968474098 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.953180486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.950151518 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.818628896 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.814361166 seconds)
  done (took 23.145959147 seconds)
done (took 73.783563456 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.808294378 seconds)
  done (took 3.536419403 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.839766161 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.99863591 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.812265477 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.811552007 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.807736418 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.808650764 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.811733747 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.808369873 seconds)
  done (took 16.428949289 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.80784647 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.805311795 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.80788645 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.80486889 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.805840817 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.805423658 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.807144599 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.805385308 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.810760816 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.806736633 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.804548507 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.808557867 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.808841673 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.810099467 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.806619062 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.810603573 seconds)
  done (took 30.646991161 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.808795051 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.805491365 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.807136555 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.806308142 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.804947116 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.804973093 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.806620059 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.806139014 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.807632338 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.807908033 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.808893558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.808346179 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.808964271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.808226262 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.807045308 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.806533559 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.806888405 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.805296036 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.81068783 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.808914894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.807753869 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.808530876 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.806796736 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.808875407 seconds)
  done (took 45.111843819 seconds)
done (took 97.455242917 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.605413054 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.444663258 seconds)
  done (took 9.781019863 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.813014952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.810863861 seconds)
  done (took 5.419204143 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.811838488 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.814245071 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.810166578 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.81175539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.811705591 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.809274836 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.813909044 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.806235445 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.808447694 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.808827488 seconds)
  done (took 19.837916103 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.810248988 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.811163485 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.807709897 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.810322775 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.81000224 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.807967814 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.811085186 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.812425809 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.810609014 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.807231781 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.809010116 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.807949256 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.813483946 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.80963295 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.81394155 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.810011886 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.811020935 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.810341269 seconds)
  done (took 34.315000339 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.810402032 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.81081922 seconds)
  done (took 5.355806979 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.807985991 seconds)
    (2/7) benchmarking "second"...
    done (took 1.812571774 seconds)
    (3/7) benchmarking "month"...
    done (took 1.810462066 seconds)
    (4/7) benchmarking "year"...
    done (took 1.809726627 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.811088468 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.810258659 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.812383546 seconds)
  done (took 14.408300956 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.813287506 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.953843631 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.015249837 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.456538997 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.814200074 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.813900377 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.78445401 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.815494423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.815995847 seconds)
  done (took 20.019226838 seconds)
done (took 110.873699596 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.67134842 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.812540827 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.049079276 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.908947318 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.831513129 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.112866318 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.810599339 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.070070121 seconds)
done (took 43.005750278 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.881120822 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.486094781 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.578475583 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.835926057 seconds)
  done (took 15.635740384 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.794182236 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.106007429 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.811954733 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.597215843 seconds)
  done (took 22.048186159 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.174308949 seconds)
    (2/2) benchmarking "read"...
    done (took 2.162514243 seconds)
  done (took 6.080342939 seconds)
done (took 52.383754868 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814788509 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.811061816 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.811646623 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.81141944 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.813200547 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.812437244 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.813164977 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.81484277 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.81376101 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.8147684 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.814810596 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.816645883 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813470409 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.814923189 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81205594 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810904822 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814068555 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.813700735 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812261557 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.814739118 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813331999 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816315341 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.814775286 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.812286119 seconds)
  done (took 45.259734662 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.815431244 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.812390504 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.81453677 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.818313203 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.81506476 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.816293184 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.81523647 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.813152229 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.819089163 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.816007963 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814682152 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.813462534 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.815400889 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.812622388 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817460302 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.813526732 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.814457031 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814052668 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815647627 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.8151712 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.814988205 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814757893 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.81639867 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816756248 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.814498227 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817997037 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.815394899 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.814917463 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81630311 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.812594119 seconds)
  done (took 56.193670753 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.820643284 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.824118732 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.817199997 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.817139567 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.817880922 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.820200728 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.817446146 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.8175337 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.814783871 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.816580981 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.816015638 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.818294892 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.817432899 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.817366679 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.81674185 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.817991998 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.819712627 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.816515694 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.817713727 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.81503715 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.816803872 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.81640368 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.818286955 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.817243723 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.819140236 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.818434033 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.819155882 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.820187566 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.817738724 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.818485155 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.818589484 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.817467689 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.817364544 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.818777707 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.81712955 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.817810605 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.822752799 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.825573321 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.820845362 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.821050495 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.818704565 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.819236821 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.81958937 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.819419972 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.819966043 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.818106533 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.819820982 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.817210193 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.819021572 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.821584626 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.819691583 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.818742267 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.820439712 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.819304448 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.822166159 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.82104381 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.820002841 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.821464633 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.818262144 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.819337692 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.819859198 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.819160616 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.820007289 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.821586564 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.81963446 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.822046425 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.822001016 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.819845641 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.821266257 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.820662173 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.820222784 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.821959947 seconds)
  done (took 132.717027975 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.81909597 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.817094765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.818632174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.819679371 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821528942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.821743243 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.81923876 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822043535 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819684446 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.821642538 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821653825 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819163484 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817775928 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821171017 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820737458 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.818987199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.822580454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820118571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.822231654 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823216599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824335049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.8201496 seconds)
  done (took 41.792156994 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820544583 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.821915373 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.818233647 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821491323 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.819520062 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.821159589 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.822753402 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824124979 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823359596 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820142011 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820471802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822607873 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820027037 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82032379 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820372864 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818218294 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820803131 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81843888 seconds)
  done (took 34.517764036 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.821612356 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.820919242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.824716554 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.821848522 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.821990957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.824319852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821774922 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.823263232 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.822539074 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.818234357 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.823409534 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822929317 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.825177751 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820159173 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823379547 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.822676096 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.82562906 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823490236 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823948597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820592872 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.819951369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823965484 seconds)
  done (took 41.840659975 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823449077 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823540934 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822333308 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.822672487 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.822299863 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824496162 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.825945309 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.822895487 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.823902512 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.823901179 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822304645 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822516562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.823360845 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822720575 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.822718454 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.822392842 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825904529 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824971793 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825897927 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.823876258 seconds)
  done (took 38.216653886 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827680941 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.824466937 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825159865 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823045563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822974457 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.823850127 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824692369 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.826448407 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82724833 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.827273087 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827478511 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826695818 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827988582 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825363744 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826771365 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.825495444 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824485203 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.825994134 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825274947 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827857957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82773729 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828417341 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.829403546 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827185626 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828837796 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.828905941 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827521908 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830062735 seconds)
  done (took 52.89041584 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825990045 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.824960798 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.823235886 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.824233598 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.828303197 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.823059379 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.826708106 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.825597316 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.82814558 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824858744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.826520517 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.828488391 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826420794 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.826920202 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.827101097 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.829861593 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829214245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.827236841 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828758201 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825783363 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.829836817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830202811 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.829275482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.825371294 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825038079 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.826870147 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826151235 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.825283404 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828169881 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.826015162 seconds)
  done (took 56.551236735 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.847442642 seconds)
    (2/2) benchmarking "in"...
    done (took 1.848350944 seconds)
  done (took 5.444019865 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.824995042 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829213321 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.82723376 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.824830743 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.823395712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.827850834 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.826223535 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826657268 seconds)
  done (took 16.358828718 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.827703994 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.82995931 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.829299788 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.829459282 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.830358624 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.828917566 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.834176776 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.826933084 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.826519888 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.827709186 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.833355722 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.835925517 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.832081014 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829267925 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.829544809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831176386 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.830301242 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.830127883 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.831145514 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.829989958 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829876058 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.832784745 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831701979 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.827079172 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.830007848 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.837440094 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.833426756 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.831147133 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829878242 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.83380824 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.829728485 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.82680276 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.833238374 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.83136327 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.831251878 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.832380067 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840552831 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831546066 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.837218414 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832534968 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.833187082 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.829498433 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.832579712 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.833666171 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.831606869 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.831719114 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.832155779 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.826629132 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.831086786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.834859628 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.83707538 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833907119 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.829808823 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837360299 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.833536558 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.838527552 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.834797214 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.833974913 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.838574885 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.840479401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.842148541 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.837808863 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834216393 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.834460096 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843115235 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.855818304 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.840785778 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.832432421 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.831375963 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.832844656 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.842477197 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843679865 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.843479587 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.834160961 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.834094071 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.834288704 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837914373 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.835607097 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843791128 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.839520681 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.83587476 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.837915211 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.843519981 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854486757 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.832306854 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.83372316 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.834814312 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.836479069 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.836180249 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.844092382 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.83643762 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.835693224 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.835626234 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.833953456 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.837092447 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.836135332 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.834710286 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.834176624 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.83099909 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.834775715 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.836636193 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837750963 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.843836152 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.83862399 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.836749636 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.842058684 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.835038188 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.835140057 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.84146269 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.834200868 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.837430014 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.835354271 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.841391495 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.833856369 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837640266 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.845653563 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.837150511 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.836078486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.836998323 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.838290038 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.844534268 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.85977506 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.836857922 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.836855306 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.839609528 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.849504773 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.839368202 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.841968684 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.837955876 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.837340676 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.835691741 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.839874755 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.839914868 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.837702862 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.837255873 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.838926208 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.834706885 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.836816039 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.840665102 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.839871499 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.839656416 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.839901644 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.840243274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.840266013 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.839512837 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.839083933 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.845157275 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.836335473 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.838066549 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.837146291 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.835336431 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.839547934 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.839837976 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.84024377 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.838278052 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.839203901 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.837573983 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.841601944 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83685596 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.837552429 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83747416 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.836931398 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.84193105 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.839227295 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.841478033 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.838222225 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.836874389 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.839733088 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.840046713 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.839151627 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.839147375 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.837737518 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.839672162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.846187041 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.839257363 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.838469119 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.842848301 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842793412 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840848784 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843129159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.843752697 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.847445104 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.843211923 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.845744219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.840865964 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.839961558 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.837347861 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.839026602 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.840777529 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.841667868 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.845884042 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.846826248 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852142445 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.849338482 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.84147384 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.845333131 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.840459492 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.843074726 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.84160832 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.840898634 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.839094184 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.842998601 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842356781 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.840692572 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.842642401 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.841708376 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.844593325 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.842187313 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.841505562 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.840375194 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.83939276 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.840392992 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.841289921 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.83893253 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842254909 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.841403217 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.84160827 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.839785764 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.840293952 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.841345999 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.840602772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.840460095 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.846953649 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.838250175 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841492385 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.840980316 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.842108397 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.841678205 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.845952592 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.845538258 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.841809503 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.849177223 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.843340127 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.843968081 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.848451302 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.841301476 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.840086493 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.84433844 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.843692883 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.840663734 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.845738132 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.850601143 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.84318242 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.847100257 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.847842036 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.844170698 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.843116496 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.848573802 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.839586687 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.842704202 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.842450242 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.845305398 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.841654828 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.8461743 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.845306538 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.846436207 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.846336797 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.844708025 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.843623045 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.844249967 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.849030773 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.843756448 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.842265564 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.847114973 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.85381441 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.850797952 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.846243176 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.846399716 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.84612188 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.849072205 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.845073269 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.844759173 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.841873268 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854237764 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.850472749 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849680501 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.847681311 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.846014595 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.849970761 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.847048128 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.849313851 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.845629587 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.845847903 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.844063165 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.844938838 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.841924163 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.844429613 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.84495439 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.84720607 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.848513733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.849348142 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.845723679 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.846468872 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.849690803 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.847107476 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.847417772 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.843655278 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.844392706 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.849004527 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.846717632 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.844526137 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.846566286 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.852928159 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84662578 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.84830743 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.848461386 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.847754158 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.846879184 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.84718336 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.851245654 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.849242626 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.853318179 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.847384218 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.855593991 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.847864515 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.855262832 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.846032219 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.851104419 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.856095668 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.843848674 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.848465921 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.845569237 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.848263683 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851025956 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.846411244 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.849446172 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.852837479 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.848925016 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.851016003 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.847383433 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.848919446 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.848950168 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.847751438 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.856281945 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.845644931 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.850142315 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.852446452 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.844237966 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.848367966 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.848463153 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.848709402 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.852082822 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.852968172 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.850097367 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.8510753 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.850319192 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.848616691 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.849942845 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.847593671 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.846424756 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.84727857 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85575189 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.849232812 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854378442 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.849698837 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.85714619 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.850405369 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.855647953 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.84937393 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.84709878 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.849437043 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.847591469 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.848125642 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.848895575 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.849974998 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.848848418 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.848790625 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.85285333 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.851138231 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.851455298 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.848675302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.850172662 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.84609451 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.857544812 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872394528 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.848460645 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.85387637 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.848302967 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.851583053 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.856157254 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.850111359 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.849000694 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.853064838 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.86167113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855773262 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.84974843 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.84942254 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.848638227 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.850248534 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.852012792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.851952049 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.849914017 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.849542208 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.851604797 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.852751969 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.855451462 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.850901146 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.849954265 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.850578897 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.850872169 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.85936064 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.852562029 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.852288451 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.852245947 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.851574451 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.854859566 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.852943239 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.8537765 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.851165972 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.851088929 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.850826415 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857013236 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.856581982 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.852369616 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.852267044 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.854321693 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.85334586 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.855054111 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.8528123 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.853006624 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.853604556 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.852028659 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.852858126 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.852211583 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.84876344 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.849916167 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.851666476 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.851955583 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857059769 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.856928009 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85438732 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.852681934 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.853577815 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.855604655 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.852457993 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.853473652 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.860315668 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.855631013 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.859768546 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.863082746 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.857497522 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.85437384 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.856912928 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.86065018 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.854320096 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.855283466 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.853798951 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.855612373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.853163981 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.853951931 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853664795 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.85805565 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.854615788 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.85199587 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.861402585 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.856529032 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.855438587 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.854941538 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.857113304 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.855094391 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.853529457 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.853650165 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.854303184 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.860620693 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.854676615 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.856943486 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.857884869 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.855133942 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.856198134 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.859283124 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.854817319 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.857498607 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.851386864 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.854344952 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.854096037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.854051209 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.850157821 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.854568499 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.855019342 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.858212424 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.860609328 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.85302368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.857127372 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.855595632 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.857272396 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857760035 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853643757 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.853524425 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.850816695 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.854990187 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.856725068 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.855984013 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.859469053 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.85683388 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.856760119 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.857212432 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857613222 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.858570218 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.865396644 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.86164121 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.852375664 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.855575553 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.855211599 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.859319004 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858088812 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.856870129 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.857435091 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.858168388 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.855976831 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.859608453 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.855078884 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.856306634 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.870258756 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.856591324 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85732474 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.857938558 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.862074225 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.857845145 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.854482939 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.860231617 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.85933111 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.863173904 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.866864886 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.856849557 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.862285449 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857527123 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.857097028 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.861166258 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.859548648 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.864020249 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.860931419 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.856724411 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.859059868 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.861925077 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.871667954 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.856406859 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.867269152 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.882987763 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.855750135 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.858914041 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.86079778 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.859216964 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.860010516 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.858168929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.86110448 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.859246518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.858378756 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.858556548 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.857901751 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.863577577 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.859474649 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.857874492 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.858227946 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.859503438 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.858349825 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.855548969 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.859015865 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.859916631 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.860308375 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.86074614 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.858427288 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.859345279 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870432588 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.86829037 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.858004844 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.860210253 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.858041493 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.862300525 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.862768016 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.869351323 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.867148324 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.86194661 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.859266899 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.860990959 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.861224963 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.85543851 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.859536905 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.861352824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.860315335 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.859741071 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.87154577 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.869767621 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.866109415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.860696625 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.861700957 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.859350291 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.86233471 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.860516712 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.861410113 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.861095193 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.861350814 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86532424 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.858989491 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.861688853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.865250985 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.868752485 seconds)
  done (took 1102.878403067 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86011269 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857269644 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858262188 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.858308275 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855858415 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856604241 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858299879 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.861346744 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.860380334 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85948781 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.860468012 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86102334 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.861366508 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.857518349 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85950267 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.858896505 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858046017 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.857894635 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.857515571 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86115114 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.859979501 seconds)
  done (took 40.818984973 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.864377846 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.861194907 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.8593199 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.864173837 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.858775332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.861387691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.857848503 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86116057 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861490056 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860239721 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.861482518 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860847017 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.86181592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.862414299 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860686145 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8642849 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.863437304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859417676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.861730894 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859720754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862169365 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.859499432 seconds)
  done (took 42.728688349 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.865399553 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.864842669 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.863966861 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.860799345 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.864276106 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.864184738 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.864773528 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.862697636 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.862385631 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.865129303 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.860809985 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.865830162 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.871001922 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.868442731 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.865894633 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.86376541 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.008787743 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.86597667 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.864711419 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.867622965 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.859145164 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.869612322 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.859814178 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.863244746 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.864523374 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.863620795 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.864624428 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.866628681 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.866175695 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.86777069 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.870091678 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.864595733 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.863701605 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.865601366 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.864423175 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.86434364 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.869537168 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.86794059 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.865304008 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.865224082 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.873451792 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.883340574 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.866639959 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.87052212 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.86616417 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.863805853 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.867635149 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.871466271 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.862103836 seconds)
  done (took 93.355501139 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.86586275 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.866702919 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.866700973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.866609046 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.868320402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.866495981 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.865029136 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.862503904 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.862585093 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.860267378 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.864081317 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.865873587 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860582983 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.864998592 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.865915302 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.863486234 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.863797423 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862314685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.863216093 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.862689364 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.862240922 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.86445109 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.865252194 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.863572078 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.867692992 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.865016292 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.864299656 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.865956195 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.866142727 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.864577527 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.866128947 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.868555746 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.867747193 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.865094067 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.862828653 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.863233069 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.867451343 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.865543001 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.867494727 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.866201386 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.867512651 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.868675291 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.868255435 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.865573252 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.865928128 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.862925087 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.862798803 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.864110322 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.865580566 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.868039946 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.869755832 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.868224127 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.867487607 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.867313255 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869560949 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.86985181 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.865649705 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.866322881 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.867076533 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.864189687 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.863914398 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.870331853 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.868077055 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.869391512 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.870141951 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.867009254 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.868394164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.868745586 seconds)
  done (took 128.663219719 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868901725 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.86945496 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.869460127 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.867922473 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.868592651 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.870490218 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870235901 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.870453943 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.871763713 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.870841996 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871650905 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.86689482 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.870794045 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.86687394 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.867975681 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.869227259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.868481274 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.868227307 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.870035758 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871114874 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.870641094 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.871993338 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.871908668 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.871254827 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.870233208 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.872173231 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871354005 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.869756801 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870381838 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.869205861 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.872397776 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.8722602 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.873468475 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.872616073 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.873965002 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.872620498 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.871697257 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868819072 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.872390736 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.871114312 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.871136267 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.870333515 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87424022 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.871047169 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.87336706 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.87322987 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.873901721 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.874671801 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.87150144 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.872482983 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.869917871 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870220966 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871345133 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871021884 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.872358297 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.872028023 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872908479 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871215101 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.872737312 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.871854354 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.872551342 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.87022332 seconds)
  done (took 117.793708461 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870491785 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.871739025 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.868249048 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.866337824 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.869728483 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.87192474 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.87149337 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.873530499 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.871871485 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.871433309 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873631651 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.87063062 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870893347 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871522901 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.869282067 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869030863 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868360535 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.872517966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871726053 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.869353563 seconds)
  done (took 39.201970789 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.871502771 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.873683974 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.870847922 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.869720343 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.870691404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.867075345 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.872286614 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871279148 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870332496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873387217 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.875444373 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.87412699 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870244302 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.871823247 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.875227852 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.86967729 seconds)
  done (took 31.739252744 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.869791236 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.87230978 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.873346502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.872164037 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.872041299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.87218129 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.874009938 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.873945185 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.872114061 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.875698404 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.875229024 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.873870505 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.871805671 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.872084519 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.870446404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.872290034 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.874375455 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.873359703 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.873658935 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.877844719 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.871872225 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.873410417 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.874873235 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.876540066 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.870227249 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.873933108 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.871897677 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.872455096 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.874775089 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.875242073 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.874075525 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.873045779 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.874059466 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.874166837 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.877875544 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.873234688 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.877998889 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.877578573 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.875895813 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.875862774 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.873341124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.875910749 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.878318282 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.874228897 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.876129198 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.877710064 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.873734356 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.873377647 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.873511181 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.875424135 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.875690036 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.877186836 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.874578477 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.876960848 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.88035634 seconds)
  done (took 104.879266736 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875814382 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.878693023 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.875155586 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.875808624 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.877402122 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.87213187 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.873922497 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.871711216 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.874365157 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.878364644 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.87525406 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.878371929 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.874005248 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.879127609 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.873798088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877398449 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.873136565 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.873690601 seconds)
  done (took 35.552385026 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.874627455 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873318695 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.876195364 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.876293038 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.877797508 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.878378145 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877884234 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.876430251 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880022905 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.8763253 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.874213004 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.879721457 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876575461 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.87711273 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.873737558 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875273661 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.877440582 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.879986146 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.874946799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.878036257 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.88021839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.88121554 seconds)
  done (took 43.090023347 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.877383586 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.876631698 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.890967513 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.895141634 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.897626171 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.912710516 seconds)
  done (took 13.148011043 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875838886 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882044305 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.878778208 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879712788 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878925351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877394601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87557509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877268589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879304166 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874965238 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876906529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882699466 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880473885 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877368314 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878356413 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882785915 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879925556 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877887681 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.876212504 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880604976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874472932 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881350388 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87691178 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879238283 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878592295 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877622266 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879404022 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880165884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880501199 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880855081 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879253833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876961095 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880168338 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878922902 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880487955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882262574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878649544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883547265 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880388498 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879203706 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.880100588 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882279589 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878315745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877505069 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880749398 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879096353 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877947637 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878873933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879549314 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8851398 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882980685 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881873568 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882125434 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883069806 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88160761 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879630736 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876446564 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876890377 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883326292 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880111425 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879536231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.886409946 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880906249 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880723634 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882382892 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881339036 seconds)
  done (took 125.862356804 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878541842 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.876677991 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880383491 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879542643 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880988859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882538494 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882856752 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880944202 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882002019 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882262149 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886048154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880593777 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880576964 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88367838 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881206245 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880949422 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.880863328 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.879356838 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881954504 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885453209 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882205783 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881228716 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883109881 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882916884 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883422286 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883168466 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881725082 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.882051745 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880279426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882987889 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.882619706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.88277654 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884338752 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.881533359 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.883359082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880736259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881943581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881185527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88086014 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.884006476 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880243333 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883938944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881478988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883289706 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883085597 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881940541 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884265475 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88496534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883201004 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881154832 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881883479 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881862593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880005448 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.880789613 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883969997 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883222932 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885166176 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880932279 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88279942 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.886709462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.882380276 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88311476 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883220026 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881088321 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880422464 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882700116 seconds)
  done (took 126.023551847 seconds)
done (took 2569.258892324 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.881086113 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.127569333 seconds)
  done (took 15.811421135 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.06266023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.011027761 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.896491998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.897576444 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.896156013 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.912547151 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.918252241 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.897777252 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.895532894 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.894935778 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.895692672 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.081762245 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.894304582 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.895739985 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.898240916 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.989198681 seconds)
  done (took 52.759185792 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.898332367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.90087649 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.909851826 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.903142099 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.900300053 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.916227337 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.935370598 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.905078506 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.960745076 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.914632642 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.022946417 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.912035553 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.900679149 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.960896832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.914458787 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.914933956 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.989432082 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.977963636 seconds)
  done (took 36.556703949 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.977451675 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.904141641 seconds)
  done (took 10.70653663 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.913238835 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.927157761 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.952896318 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.922493807 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.915658987 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.912716595 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.907659678 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.911935086 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.906920106 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.902657096 seconds)
  done (took 70.99738314 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.904022677 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.901127278 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.90187913 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.900477192 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.893930226 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.897387804 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.899754114 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.900001014 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.566491087 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.937865167 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.909993254 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.90444183 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.90083231 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.901437642 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.898404681 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.923204236 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.011475203 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.898661379 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.896727717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.905867803 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.902260453 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.959283058 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.917374875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.90617678 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.931641933 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.566542048 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.912600004 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.907604586 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.003312133 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.899128629 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.901628903 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.902360271 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.905753566 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.313069908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.173169177 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.903973442 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.91733607 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.910407475 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.90045174 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.038214582 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.905964304 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.908546259 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.617109348 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.147571312 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.0122249 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.949689994 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.217507807 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.921889493 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.90464731 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.934078199 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.90717327 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.905538476 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.916182448 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.395694311 seconds)
  done (took 134.095600518 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.901783563 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.25031383 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.072321176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.90214371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188553691 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110474531 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.901082369 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950225776 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.901858918 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.133785171 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.160255647 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.008785023 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.900898374 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.899036978 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.89711119 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.897403309 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.059035036 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.974837001 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.902658472 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.898021564 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.929918359 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.146202145 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.024443087 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.903890437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.931487079 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115694764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.026185491 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.010247038 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.694527754 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.897586207 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.96489682 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.900285183 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.902192102 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899479759 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.059232102 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.99735578 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990620832 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.902170847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.899475303 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.900241094 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.58805885 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10345051 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.999349671 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.042686199 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.101584567 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.110387518 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.684280926 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.899298153 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.643960053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.064932996 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.133139561 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.136585434 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.028418006 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.904411435 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.434050995 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.899299908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.901214649 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.153512454 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.046960499 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.003964921 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.905117678 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.899240099 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.900737584 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.148200512 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.904305075 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.999925752 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.904265799 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.902635836 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.999852784 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.004187546 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04399546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117328807 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.934582219 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.846112442 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.442949176 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.151061231 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.97074667 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.15562353 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.905182366 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.901253772 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981672305 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.745719874 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.159272473 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.153586871 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.1588875 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.941529841 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.62735673 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.902285161 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.135309342 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.125734259 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.166471285 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113565845 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.146153751 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.222189184 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.902503171 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.902728977 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.120833002 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.041021605 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.906757371 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.252200356 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139967192 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.454335034 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.923979579 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.213546828 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039163665 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.907424984 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.546377644 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.906288537 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.13762262 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.946440982 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.906153474 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.904372989 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.126580132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.899940742 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.904421965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.54035984 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.969721365 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.909195834 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.140969739 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.905813442 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.176002915 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.909696807 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.144854099 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.908862907 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.938061345 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.13778109 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.112550829 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.908020202 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.15308626 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.154720505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023592329 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13084627 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.602070015 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.906336149 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.197927312 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.906183139 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.904462284 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.079498135 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.90490628 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.053074185 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.907875441 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2028761 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931418713 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.144614423 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905699763 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.1686418 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.942577772 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95846935 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.909911342 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.041377646 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907123169 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.838184963 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.067700449 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.910507466 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.905416843 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.708508925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.908355502 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.059109248 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.144648396 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931265137 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.983060162 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.576891109 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.906205418 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.988644732 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.933611705 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.299299126 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.908458551 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.160927266 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.909455829 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.9071001 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.905204813 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.151229933 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.095416351 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.911195389 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.906464929 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.817037227 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.906911059 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.907804227 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.095128941 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.341208125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.907820381 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115415362 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.909434566 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038632484 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.912519364 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.983706953 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.25276289 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.909145318 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.908808551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.907492523 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.909310924 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.908734111 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.175114929 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.937772088 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.430746191 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.050967575 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.188100042 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.225122989 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.160832723 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.955830486 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.912486281 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.16951175 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.908416928 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.974201954 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.911013771 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932986255 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143598763 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.912703588 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122942708 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.191463334 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.771747251 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960337736 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.91346763 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.910078517 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.908556079 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.055895794 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.001883575 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.91244025 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.907343342 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.02892624 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034447612 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.123530031 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.912201727 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.97992283 seconds)
  done (took 911.633189475 seconds)
done (took 1234.366553235 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.908901133 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.910261273 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.898455221 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.912695123 seconds)
  done (took 29.466485354 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.921029474 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.917763159 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.918825235 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.917375667 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.918731166 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 2.359924616 seconds)
  done (took 13.790611923 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.946164644 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.911963765 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.914606199 seconds)
  done (took 21.608988143 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.987611893 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.304953865 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.020672779 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.349599653 seconds)
  done (took 10.500306736 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.918369477 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.917753231 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.91765789 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.920430043 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.921982765 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.924553094 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.918478582 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.921382481 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.921764903 seconds)
  done (took 19.121333158 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.906960519 seconds)
done (took 100.231814661 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.909784016 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.062458255 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.913438162 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.155478784 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.929445449 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.536407556 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.315158857 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.834376797 seconds)
    (9/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.991142216 seconds)
    (10/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.47368339 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.248453493 seconds)
    (12/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.538284479 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.987298585 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.929889861 seconds)
    (15/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.981941986 seconds)
    (16/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.008384004 seconds)
    (17/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.918988529 seconds)
    (18/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.999553137 seconds)
    (19/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.924972971 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.175028968 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.08239908 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.880317678 seconds)
    (23/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.023066907 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.919793023 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.27349707 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.945580021 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.207238351 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.467647231 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.16046626 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.431938798 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.014793363 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.275132056 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.941825499 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.982178222 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.21548804 seconds)
    (36/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.997740308 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.161681574 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.904716287 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.199642523 seconds)
    (40/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.028187871 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.015315014 seconds)
    (42/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.385315278 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.91326452 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.487141462 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.345979549 seconds)
    (46/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.431201749 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.158431444 seconds)
    (48/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.924746562 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.969807047 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.813988593 seconds)
    (51/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.958689396 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.262304462 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.939526827 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.062362021 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.891431893 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.644608876 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.952399673 seconds)
    (58/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192965903 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.949616854 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.177143988 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.149658685 seconds)
    (62/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.37298269 seconds)
    (63/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.930303736 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.088250457 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.942708456 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.911708976 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.13808706 seconds)
    (68/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.01444034 seconds)
    (69/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.061714926 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.041380654 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.022064404 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.080227247 seconds)
    (73/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.131962883 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.236120572 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.577275683 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.881461349 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.434842129 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.076574823 seconds)
    (79/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.956845803 seconds)
    (80/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.904450579 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.130920704 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.028954386 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.918617876 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.266753517 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.05464551 seconds)
    (86/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.348038363 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.933979943 seconds)
    (88/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.106605034 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.031748791 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.230749412 seconds)
    (91/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.931862805 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.702902351 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.292486226 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.918766961 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.355660013 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.041307099 seconds)
    (97/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.218533665 seconds)
    (98/309) benchmarking ("sort", Float32, false)...
    done (took 5.623663353 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.017472427 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.938027734 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.058801346 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.925595395 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.02331388 seconds)
    (104/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.120311287 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.174074653 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.339145126 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.591883229 seconds)
    (108/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.117615886 seconds)
    (109/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.110161412 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.925579468 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.245080639 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.20479162 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.325712829 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.054475203 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.227547876 seconds)
    (116/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.322571575 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.019943691 seconds)
    (118/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.996241342 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.018250069 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.116666484 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.95270319 seconds)
    (122/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.004647381 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.966482651 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.860784247 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.089293918 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.164404836 seconds)
    (127/309) benchmarking ("sort", BigInt, false)...
    done (took 6.92316887 seconds)
    (128/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.426902059 seconds)
    (129/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.959949786 seconds)
    (130/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.93860632 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.115027535 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.185275054 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.245577238 seconds)
    (134/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.965345693 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.997525593 seconds)
    (136/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.998191878 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.182622827 seconds)
    (138/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.063418771 seconds)
    (139/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.027128926 seconds)
    (140/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.028494184 seconds)
    (141/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.057697322 seconds)
    (142/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.100656606 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.087185549 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.143357078 seconds)
    (145/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.010477104 seconds)
    (146/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.950619078 seconds)
    (147/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.214057039 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.912058834 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.927208896 seconds)
    (150/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.2322784 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.034607927 seconds)
    (152/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.325853419 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.950807897 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.922894415 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.311432808 seconds)
    (156/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.943234989 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.219557766 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.935416156 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.080732402 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.073926092 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.912925628 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.768381765 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.86781763 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.017092528 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.308595052 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.99309756 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.270705382 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.000844725 seconds)
    (169/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.297561526 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.930079555 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.068393307 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.953362416 seconds)
    (173/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.0654969 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.072119248 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.382185604 seconds)
    (176/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.093110863 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 5.67059322 seconds)
    (178/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.933150332 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.029426136 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.937625994 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.925871581 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.441512293 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.031304684 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.182299387 seconds)
    (185/309) benchmarking ("sort", Int8, false)...
    done (took 4.841030144 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.65134775 seconds)
    (187/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.052676208 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.207939745 seconds)
    (189/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.932377538 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.20053074 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.245452576 seconds)
    (192/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.770789637 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.057410279 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.931174554 seconds)
    (195/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.387615622 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.973571829 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.995384065 seconds)
    (198/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.022960202 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.832985518 seconds)
    (200/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.918689027 seconds)
    (201/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.274488865 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.007817837 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.931873593 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.174576773 seconds)
    (205/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.1701573 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.276582182 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.930483284 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.01196797 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.989512335 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.616539057 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.790139876 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.127553556 seconds)
    (213/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.914060624 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.016531222 seconds)
    (215/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.177896311 seconds)
    (216/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.922931297 seconds)
    (217/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.047693022 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.06389795 seconds)
    (219/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.051550058 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.763475348 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.151048403 seconds)
    (222/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.983866938 seconds)
    (223/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.986079881 seconds)
    (224/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.860899375 seconds)
    (225/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.895515912 seconds)
    (226/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.929372156 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.235855541 seconds)
    (228/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.2102933 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.338879763 seconds)
    (230/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.921095187 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.198616004 seconds)
    (232/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.240563466 seconds)
    (233/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.110634922 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.769087153 seconds)
    (235/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.539052222 seconds)
    (236/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.933263471 seconds)
    (237/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.813522189 seconds)
    (238/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.033278535 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.963174958 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.905936318 seconds)
    (241/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.506943666 seconds)
    (242/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.04261474 seconds)
    (243/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.102788886 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.098867184 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.035744522 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.937663441 seconds)
    (247/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.059258949 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.02394508 seconds)
    (249/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.351318375 seconds)
    (250/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.123750808 seconds)
    (251/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.655412382 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.133808377 seconds)
    (253/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.329336672 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.34508896 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.960979362 seconds)
    (256/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.92233643 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.134081047 seconds)
    (258/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.465556531 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.928154472 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.95103851 seconds)
    (261/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.112706131 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.943826017 seconds)
    (263/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.167104712 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.100801542 seconds)
    (265/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.306823729 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.922552596 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.351632916 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.951864862 seconds)
    (269/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.937486094 seconds)
    (270/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.80726161 seconds)
    (271/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.198788209 seconds)
    (272/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.03424176 seconds)
    (273/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.957637002 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.932920783 seconds)
    (275/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.006414296 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.625703168 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.923142237 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.399169142 seconds)
    (279/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.436277928 seconds)
    (280/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.023377025 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.935661842 seconds)
    (282/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.096857614 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.963465029 seconds)
    (284/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.0348282 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.939087601 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.746643378 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.051688595 seconds)
    (288/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.225869187 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.241920358 seconds)
    (290/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.968857117 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.016987948 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.398728347 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.471479326 seconds)
    (294/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.284500843 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.011478567 seconds)
    (296/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.016097939 seconds)
    (297/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.142098444 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.219281459 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.215273224 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.107374829 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.980378528 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.2591104 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.033564712 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.850105421 seconds)
    (305/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.065038716 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.957964687 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.152718467 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.764318605 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.401248315 seconds)
  done (took 1027.036003398 seconds)
done (took 1028.935731889 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.014233202 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.958511879 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.950591218 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.97563321 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.059911417 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.972380514 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.963434096 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.955404935 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.999270628 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.000518791 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.941194613 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.972769682 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.947021358 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.942625295 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.952499208 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.962978759 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265835673 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.979312003 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.960953767 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.963602976 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.966026776 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.945412821 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.006435481 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.974036611 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.95895981 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.955332376 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.951197289 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.965929565 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.058708875 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.948783149 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.957805389 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.96088514 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.259529717 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.988202203 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.952140237 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.972073929 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.95895484 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.963367667 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.960057792 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.974284535 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.348871898 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.98841207 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.950057363 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.953593581 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.958476938 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.962409224 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.948725945 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.961430628 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.958650637 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.961056423 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.341726607 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.001806702 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.950202322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.955472869 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.968901434 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.950400863 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.960247539 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964654141 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.968777348 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.962373101 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.246820956 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.99116485 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.958256555 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.962126158 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.952585463 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.378877749 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.990518214 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.959360401 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.349144774 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.005194466 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.376907217 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.996879316 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.95758556 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.963745812 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.982564591 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.261489633 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.982004866 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.957656282 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.953203498 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.945778821 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.970213969 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.963188767 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.963502041 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.954176453 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.960558813 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.97902786 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.965182638 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.951053044 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.964283086 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.972036969 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.958181058 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.961508473 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.963533378 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.956700014 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.96673327 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.961993312 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.953026663 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.951509309 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.963247386 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.970884538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.350381433 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.00522292 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.954228144 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.957209784 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.960478286 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.963621017 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.348858434 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.991170271 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.979800561 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.002231969 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.959852784 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.249296934 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.9860435 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.966602347 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.966278615 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.963800687 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.950720976 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.248290526 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.377146964 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.005474916 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.958946048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.945335618 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.966095646 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.960952557 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.9548031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.263895086 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.991564708 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.963161591 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.070737568 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.969398385 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.981716687 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.947922802 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.96293438 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.984254765 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.971076378 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.986201457 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.962275581 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.972502571 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.9692266 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.958830537 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.964869183 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.97506162 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.963385734 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.968166198 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.958686747 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.985222122 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.965706398 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.96710122 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.981764445 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.075162952 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.95165005 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.255021841 seconds)
done (took 306.75357285 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.028948089 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.94158312 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.049136913 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.948718018 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.028861195 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.034599028 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.947279236 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.947957093 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.946022018 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.343581561 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.944148988 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.944898893 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.942608532 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.942903021 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.027108055 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.94816587 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.93928975 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.281035903 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.946958405 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.017817038 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.947047656 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.941037796 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.94481757 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.388923305 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.940995285 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.938765893 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.017040923 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.944216316 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.279507665 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.9345638 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.94379783 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.278783026 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.035515727 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.959470905 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.950906473 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.947707088 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.024053794 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.946447641 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.023179927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.022721832 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.042806196 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.98093208 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.939621707 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.940871538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.942678714 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.940542367 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.937145429 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.968640234 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.940080115 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.93752578 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.276175004 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.948041631 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.947588935 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.93788458 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.939679453 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.9644699 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.937272286 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.942340377 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.031497534 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.941844831 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.002829465 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.382781452 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.311168553 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.93970479 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.932442879 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.937521261 seconds)
  done (took 189.372048577 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.005970118 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.017261953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.004409118 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.944100257 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.987730072 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.007292509 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.945316519 seconds)
  done (took 15.76731111 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.947856075 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.93751346 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.990836921 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.990574598 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.938668475 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.088557213 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.937701283 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.949334143 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.936473192 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.990899851 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.938705977 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.939352547 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.944700114 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.934416596 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.990194222 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.950802804 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.05376052 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.937532128 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.939318575 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.090552785 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937789894 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.946082088 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.994107549 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.952026686 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.939266907 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.944404246 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.531794795 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.937560716 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.933342203 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.937528399 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.936321504 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.981424323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.939039935 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.937743011 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.937116899 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.056031198 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.937963187 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.933879586 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.938971842 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.934434126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.939036962 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.939397798 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.938380832 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.934904156 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.936800015 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.962681057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.937669291 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.938628837 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.93713626 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936720274 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.992570114 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.939543184 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.934809384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.936677544 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.994973103 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.947022649 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.941679944 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.936269027 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.939789411 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.935304737 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.089518663 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.992065077 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.939259104 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.990927408 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.938665668 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939542101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.941185911 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.939584574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.03558324 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.936904474 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.987880233 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.935691369 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.098546342 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.964789766 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940990325 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.941690727 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.941367158 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.939560816 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.935205891 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.947710941 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.93525449 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.941986624 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.946424729 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937244202 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.937127999 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.054555178 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.048465236 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.937750903 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.953344784 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.947759928 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.936392266 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.993221994 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.938252981 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.93614752 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.996685144 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.05683371 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.997533967 seconds)
  done (took 212.6445801 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.943101321 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.947686955 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.941298515 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.954019499 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.94016319 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.940255524 seconds)
  done (took 13.522683381 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.943219653 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.943162905 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.938727291 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.939048725 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.939868537 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.940858163 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.940954478 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.940668212 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.944882161 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.938553622 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.943789783 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.941712823 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.940343805 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.942005226 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.942940496 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.943412088 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.942918946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.939416002 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.941076295 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941415811 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.086315945 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.93929578 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.941886706 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.94065565 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.948806248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.943314174 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.951935063 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.944019185 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.941707155 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.949028284 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.946605796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.940776794 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.94008973 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.946569206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.944258409 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.943157768 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.943980192 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.94173838 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.93840562 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.941939585 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.945674998 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.941876034 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.941104174 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.940135961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.941521922 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.945631197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.946902381 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.9481974 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.942243446 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.944381682 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.943771999 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.945424406 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.950875339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.946593472 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.943601077 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.94655158 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.945575153 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.944232374 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.941998001 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.939369731 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.942568387 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.947480408 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.945171127 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.952099998 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.9511982 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.947670058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.946637181 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.94686995 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.942621844 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.944042819 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.945357724 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.943848689 seconds)
  done (took 142.942275302 seconds)
done (took 576.141095054 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.964374653 seconds)
  done (took 8.82544829 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.985400314 seconds)
  done (took 8.89866716 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.409706532 seconds)
  done (took 10.28995826 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.980959731 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.972090816 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.967733765 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.953848896 seconds)
  done (took 29.77610583 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.99808424 seconds)
  done (took 8.875266728 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.982457412 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.95317137 seconds)
  done (took 15.841778902 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.139147404 seconds)
  done (took 9.011897517 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.052458 seconds)
  done (took 8.955408215 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.96611721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.988233315 seconds)
  done (took 15.841338089 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.937403724 seconds)
  done (took 8.813213672 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.57898355 seconds)
  done (took 11.540917693 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.96957886 seconds)
  done (took 8.940523573 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.020811555 seconds)
  done (took 8.891166797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.985420065 seconds)
  done (took 8.851347613 seconds)
done (took 165.218598422 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.953561625 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.941751389 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.937527445 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.938189957 seconds)
  done (took 29.634492724 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.978633424 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.976499664 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.977133991 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.986475528 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.979676396 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.978633864 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.965627183 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.965233493 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.986876123 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.977306494 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.974175415 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.974282782 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.970058635 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.963186897 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.972976304 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.974613467 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.980540863 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.972486148 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.965734476 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.974988139 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.941674382 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.980825296 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.974298257 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.937816047 seconds)
  done (took 49.190941374 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12913384 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.004946741 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.090980977 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.994450594 seconds)
  done (took 10.070497651 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.992506659 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.993821154 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.00699621 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.043096916 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.07079286 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.004926269 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.967657976 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.963502173 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.947381151 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.994532599 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.068579183 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.990348723 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.078105459 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.943288682 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.144788503 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.942885791 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.940581568 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.993516015 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.045704444 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.058931216 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.94403205 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.993064969 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.999405854 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.992748509 seconds)
  done (took 49.975992623 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.942454618 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.951116181 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.948540909 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.942906284 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.942904031 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.943391286 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.94839959 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.942139002 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.96267844 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.944132813 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.943985049 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.943253674 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.942260172 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.942968225 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.943040015 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.956707989 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.955218915 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.943005387 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.947379112 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.947266052 seconds)
  done (took 40.791942421 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.937031554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.790091574 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.288325068 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.19189944 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.937300953 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.938809059 seconds)
  done (took 31.940931104 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.960676983 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.949874587 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.94474401 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.002475398 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.085129587 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.949735514 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.94491827 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.954987667 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.992489649 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.008056095 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.966126093 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.975593413 seconds)
  done (took 25.595665114 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.944513977 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.952410686 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.940160196 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.967912317 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.957840138 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.953465407 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.95050927 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.93870847 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.955667194 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.964939655 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.95329832 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.959889008 seconds)
  done (took 45.304493572 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029014326 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.828034459 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.596315606 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65723588 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47509329 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14988775 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.472057887 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115239981 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.941857884 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215156284 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.496924123 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207427904 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218726915 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967388336 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.039396944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.441147249 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260834504 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206033009 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994137455 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701214295 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085500723 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.540119168 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.685236869 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091151157 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177484173 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.100255759 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.23063788 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925077652 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100448268 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000076128 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977887822 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.969350092 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243688321 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187465237 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09623535 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977903407 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621632873 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.684402429 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.961388967 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.658331144 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.653153601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.094646602 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978851204 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971599197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.902320458 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.529739803 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141772015 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.972656069 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.671753564 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.968799082 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980954085 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05859391 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.969457364 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.783777433 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921017366 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.245509688 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.962015282 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965823855 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.531290141 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.049633184 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631996832 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.902087706 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.060745799 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660462941 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.446649762 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.127523674 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.972121193 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971182973 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901607036 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706638046 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085868642 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.109275328 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.980870765 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.616905648 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273450338 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.616340982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.0450543 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260730651 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.797705679 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.894224687 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192811907 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920859907 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897276307 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.820079832 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.898194315 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239412265 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999188019 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.635725533 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005784332 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131781337 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.973214954 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984251099 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967691094 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.18213489 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.842885344 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963171859 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.495381051 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252520566 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991243039 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142997779 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901242536 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.972457441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224086086 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.181629071 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.252848983 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.440096866 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129226409 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.961634143 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.048478919 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.931168894 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966877688 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.246433313 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024695839 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.054707764 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096912402 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.92598145 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282398581 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994504725 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.138608121 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.577058531 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229969306 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.301690561 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.217360557 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049363368 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.966409026 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.963241085 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.724654233 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.59916858 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.191019213 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.963725345 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370198722 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101042216 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.964384661 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895179811 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.646325957 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.584820472 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.074359987 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189366882 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.842584648 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34684449 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898341792 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.103968469 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069468989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.182241137 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.618612059 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.039237025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22267078 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365966799 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221843597 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072138115 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970435501 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071076537 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980079251 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.298456721 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.313193431 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.954618028 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.952505039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.719329335 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.037537409 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972585924 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.969032515 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757156559 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257391914 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.995363875 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.963174544 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.89597311 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.974339229 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040798644 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963310386 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968766257 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.483441216 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712066232 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.968199011 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.687792238 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208910769 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968707635 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.715574463 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167106476 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.049584855 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256005436 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038462146 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.900880017 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.667061498 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.670125273 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960562482 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.898758834 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.961078408 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969403914 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967806444 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.176501976 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.246101627 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008556794 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.665770242 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.094509641 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975988739 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.971632158 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966541422 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.462624654 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.087379035 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.509635319 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.084588923 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103728003 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.981429322 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.899286141 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.969079225 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.970209688 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.969551573 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.924524425 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020389315 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.683058132 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307151292 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225281925 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614240286 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984228941 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.766615573 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.101685961 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.991683792 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.548111222 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981976527 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.072386172 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034893472 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.981881647 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.735842368 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.737319876 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.542822343 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287073891 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331404134 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430188752 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.393189689 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298565705 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143447538 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203025458 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.49927625 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030715815 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146954269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914172376 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054226766 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.625641698 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.328461873 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986636732 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198301658 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369088776 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.639068156 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138561329 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180867174 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006901732 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.825214563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004135252 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.492261799 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128982042 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.600935393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199696562 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139719078 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.551971345 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.087453985 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.972737531 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.461601692 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054798761 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.681087042 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.333236172 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.552211845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.616817457 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347973874 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.970962121 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.420899718 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351853944 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34770495 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.060337653 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903058442 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.98414356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.983801998 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.974155801 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.950000013 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.931866529 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.261908623 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982855621 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206081166 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.283185524 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.257477373 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.885905174 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.9794921 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975153291 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288399504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69342557 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221442994 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.356078463 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.573670086 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.987072765 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.906277271 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90849496 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.676913889 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.977237209 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.947995596 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235557496 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.086701851 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930642103 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388320935 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29142623 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225389241 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.986230829 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265020242 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260989576 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.711198928 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003450829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.075317154 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.552530684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.734802669 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.197292028 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210493393 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773173209 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204873719 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.649493793 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.951222081 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.972868351 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189607627 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198015485 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.61516445 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228781473 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.698169697 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.987648186 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343100645 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044062843 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.625823433 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.191965008 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.067757743 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988782316 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057450055 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985401387 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.987490966 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989670643 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023722923 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625159877 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.112404393 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.994438679 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064205101 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112736979 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.585865671 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.98709431 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264435084 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342630822 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321648869 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042608612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.970116557 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977616599 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89772135 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106359796 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.405168652 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235165853 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.095700077 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.101846951 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98725007 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.548722277 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281995897 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279881379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235855378 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.855714563 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970335375 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046170355 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.184303819 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967668439 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.171273492 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221212487 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292101004 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4255033 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.130019275 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.228268731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221841497 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322267768 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.950854392 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537598098 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.962308529 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511119342 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.018743944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.6257827 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265394678 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985193299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196071562 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.995125487 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.173318148 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.429554067 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702563274 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342372091 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.975095133 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037982409 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269459312 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39578878 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299123049 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059460033 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990630066 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.683290547 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116303952 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.968273911 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.249793749 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.981052442 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188286299 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.689890915 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989248933 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267932595 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295072625 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.971247927 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.983109785 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029009056 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.984859152 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200128377 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251811662 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22127836 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979956111 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976370536 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.786050509 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253210393 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035572237 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902262693 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.971308543 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066893814 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.21387789 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986893081 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.485678077 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.670773953 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277517593 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.889980994 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990054972 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413571827 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422360119 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311781997 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.504075811 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212790928 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.531541456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.855198411 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.34542229 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.971683467 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404676021 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.350967837 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.971539552 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.506419614 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078731848 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.250902013 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294485417 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.981598421 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784828618 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.023429089 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197202164 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565732569 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.91939959 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975158901 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.035411144 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.968698105 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.098372823 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978821722 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.964118232 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880130828 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.810545218 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.458930298 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.968728036 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.965487686 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.509932608 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.561081849 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078713435 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125510677 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971659668 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.692470739 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.26006619 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224113743 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.505257213 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.039781649 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.975737425 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973320243 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.898078777 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.166693301 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.164399108 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282260322 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.361257523 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.08819507 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97543638 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.186972679 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18164905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.576703249 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127841204 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379830637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086103978 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.900468308 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.684560646 seconds)
  done (took 1727.541354549 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.97033136 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.000164419 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.023699829 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.993344789 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009192198 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.045825822 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.066966695 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009404661 seconds)
  done (took 58.009708116 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.969211688 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.180085569 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.978867267 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.967002911 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.027903056 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.971845687 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.136079648 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.977289887 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.40915191 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.983154471 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.973611145 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.971217866 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.325316097 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.997902236 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.973423962 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.983800944 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.97903696 seconds)
  done (took 76.747598772 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.971877783 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.308014322 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.995833558 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.992786856 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.991192446 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.978239121 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.083832154 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.012322667 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.972541142 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.14633765 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.306801138 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.981688139 seconds)
  done (took 91.630265412 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.990313389 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.979749926 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.981011278 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.980490682 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.983378301 seconds)
  done (took 11.813467246 seconds)
done (took 2250.133712748 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.216653182 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.162829577 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.207004757 seconds)
  done (took 6.262094281 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.122803049 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.171387956 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.290987776 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.295694201 seconds)
  done (took 10.777862992 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.275564929 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.349271243 seconds)
  done (took 6.517365766 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.315626806 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.997960008 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.353920165 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.974858722 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.97657039 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.979031687 seconds)
  done (took 22.825551967 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.979094728 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.982396462 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.98122887 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.983555226 seconds)
  done (took 9.81864638 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.967489479 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.688866801 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.961416419 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.977483908 seconds)
  done (took 21.487224756 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.730229802 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.104321384 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.727711452 seconds)
  done (took 9.455379103 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.592491897 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.211510609 seconds)
  done (took 9.697578085 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.140966461 seconds)
  done (took 4.03338526 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.011383555 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.25355504 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.500875252 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.507785586 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.621383436 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.825867011 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.308380693 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.210172316 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.422308115 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.444762631 seconds)
  done (took 25.999260382 seconds)
done (took 142.650357796 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.327204879 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.007951452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.18207693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.339785753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.218938006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.183911315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.199080482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.338549629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.028607476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.018681318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.353572841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.212958409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.140423988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.998705061 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.150532424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.993566197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.334696466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.356443145 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.025488521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.269395385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.209792017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.992952181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.185353419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.003260284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.314740591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.1617175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.5375509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.000396829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.16583017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.549387495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.198618717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.414410301 seconds)
  done (took 172.308196113 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.98161884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.9789695 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.983260763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.980073387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.440984057 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.980819182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.98311988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.978327333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.416975977 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.405630142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.982108634 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.42786932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983239334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.982327537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.981681998 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.981477451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.572758662 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.982946401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.978499801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.980228455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.981259424 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.267265328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.979409138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.271303637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.560709812 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.98382669 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.980604142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.980879513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.980045355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.979359546 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.982717578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.981733045 seconds)
  done (took 212.814320245 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.981954736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.98428012 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.980951096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.981096049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.983853021 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.983812924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.981183072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.98005541 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.750114731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.741713424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.981861531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.983757545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.985675407 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.982950529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.987850888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.981807203 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.982966995 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.983442813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.984200897 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.983693428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.980742662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.718296972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.985897349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.717149807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985835339 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.983175978 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.980796078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.98264119 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.987076813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.986575581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9906118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.985707647 seconds)
  done (took 224.369156295 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.246458769 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.988339564 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.990575442 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.900600868 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.989887417 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.990723569 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.997102204 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.243413039 seconds)
  done (took 20.260191795 seconds)
done (took 631.657510558 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.441759217 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.289901531 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.165842136 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.016029242 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.267284994 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.048259479 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.011570278 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.077696767 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.637172076 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.080085879 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.658307827 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.030803454 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.741839659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.039284911 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.138257289 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.071874726 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.559820744 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.645186466 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.19021946 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.079118148 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.181737724 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.929132993 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.091537459 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.661194787 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.758565107 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.995782883 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.09693265 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.562777726 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.020596322 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.175084701 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.779314675 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.318612362 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.025995608 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.009458194 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.064879734 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.04668139 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289657231 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.022554239 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.138824542 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.738422255 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.084230853 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.543775214 seconds)
  done (took 107.626107945 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.981416107 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.982671793 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.980617976 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.981621827 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.980240812 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.980429751 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.980416136 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.977343418 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.978701096 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.977963724 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.980281181 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.981285572 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.980557948 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.980235322 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.980924558 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.980213928 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.979883839 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.980866407 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.978103707 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.979850958 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.981283959 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.980672667 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.997834039 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.980784055 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.982221835 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.983057148 seconds)
  done (took 53.424248105 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.996159497 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.161215817 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.236168538 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014035717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.995590308 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.997849226 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.011215324 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.002450303 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.998881707 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.995951917 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.102988602 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.003176611 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.018558719 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.233575835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.01108069 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.995148308 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.996491281 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.994996216 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.17087955 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.011567461 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.013758172 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.001267467 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.01404695 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.010273963 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.997733794 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994939403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.997856748 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.465647153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.004336525 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.100480651 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.043015573 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.021012036 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.439258316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.24711225 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.052949999 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.007086287 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.997018849 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.101987851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.001767917 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.994195868 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.015332106 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.002676764 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.238532853 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.48995098 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.011658464 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.996128021 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.477931563 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.111436381 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.036993833 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007513576 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.239064527 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.016942821 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.99859689 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.000370475 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.034710194 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.004529364 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.997103849 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.351750559 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.009102348 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.012787422 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.000008609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.998420877 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.173125538 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.007578429 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.163526831 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.008925751 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.007412578 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.000381542 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.239104651 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.016247254 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.492837177 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.0143931 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.998888602 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.105142456 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.171572751 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.510120598 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.01334747 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.175734185 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.457266784 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.024527784 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.007360667 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.460321156 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.024864528 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.008382942 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.001273504 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.001135335 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.001388684 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.045644111 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.015846162 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.430688816 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.496228082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.37041482 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.024962609 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.012873609 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.000753144 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.352500677 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.00693836 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.000591826 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.234395731 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.504195601 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.015836354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.005053406 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.479606333 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.016939466 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.018356549 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.007713211 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.243909776 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.017898518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.043807687 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.001514179 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.007710189 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.003996205 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.017365297 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.007360978 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.000064209 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.46886825 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.1272516 seconds)
  done (took 247.476880949 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.997019891 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.000947088 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.994138089 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.997478989 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.998437471 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.000219012 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.995093605 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.996076395 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.000952286 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.996726114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.996735926 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.998004031 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.999736801 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.002273708 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.004503837 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.001443137 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.602721501 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.000838309 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.997298303 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.992132507 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.656539168 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.0037722 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.997184442 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.991172543 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.996012334 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.000394677 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.999639209 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.997738758 seconds)
  done (took 171.129132044 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.002417149 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.117465073 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.019046055 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.031207781 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.010395507 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.999823695 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.026486479 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.018792607 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.008945385 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.001742305 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.003148128 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.064932432 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.014108611 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.097851004 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.029370798 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.032541794 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.105185966 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.009677084 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.001321189 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.000495634 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.032542344 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.000180901 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.064736965 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.132990353 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.020210406 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.121549906 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.006042702 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.003457939 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.999699336 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.119989101 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.018027843 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.066478275 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.036238355 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.021388071 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.124609006 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.118158368 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.103485416 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.028307451 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.007016155 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.000479956 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.002143559 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.992794413 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.120379419 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.024392933 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.005473041 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.108554541 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.019969454 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.005017018 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.014391922 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.001624454 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.018555659 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.024427035 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.072030311 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.135728623 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.038335 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.027969439 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.028827077 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.280950861 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.013052843 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.102459647 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.994663412 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11986085 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.026224703 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.992878518 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.003966339 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.007994653 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.032885513 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.034434436 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.111919342 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.010505424 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.100295209 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.036687134 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.010212406 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.006661488 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.008161146 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.122513242 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.125005937 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.038649407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.043011277 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.035912139 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.000908551 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.003088353 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.994277836 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.019966555 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.008030174 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.122530573 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.122986963 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.010579872 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.00777677 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.007067789 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.006606166 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.031125792 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.130236881 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.039043967 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.096811212 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.071280667 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.081228749 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.022850804 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.017069495 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.010067905 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.071531552 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.021935988 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.018888265 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.329738647 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.075099985 seconds)
  done (took 216.756379363 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.491382916 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.059973761 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.062833032 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.320308529 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.36201353 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.962858571 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.053295015 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.056252324 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.079641369 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.248707722 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.128540955 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.075557206 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.041100522 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.031144503 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.055364536 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.081536858 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.066222302 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.392105461 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.156663729 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.215611214 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.03539432 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.335792568 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.325734752 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.451007204 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.090854623 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.41020712 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.727949743 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.199177877 seconds)
  done (took 65.441147252 seconds)
done (took 863.756679853 seconds)
SAVING RESULT...
DONE!
