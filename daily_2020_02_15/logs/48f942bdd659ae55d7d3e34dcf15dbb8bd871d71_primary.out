cset: moving following pidspec: 9573
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.323590167 seconds)
loading group "string"... done (took 0.608830901 seconds)
loading group "linalg"... done (took 8.225974316 seconds)
loading group "parallel"... done (took 0.172855152 seconds)
loading group "find"... done (took 1.217622127 seconds)
loading group "tuple"... done (took 1.971285935 seconds)
loading group "dates"... done (took 1.333806661 seconds)
loading group "micro"... done (took 0.255543925 seconds)
loading group "io"... done (took 0.990463036 seconds)
loading group "scalar"... done (took 40.730953671 seconds)
loading group "sparse"... done (took 12.641216043 seconds)
loading group "broadcast"... done (took 0.992032881 seconds)
loading group "union"... done (took 13.49661135 seconds)
loading group "simd"... done (took 4.93538767 seconds)
loading group "random"... done (took 9.419663221 seconds)
loading group "problem"... done (took 1.880975778 seconds)
loading group "array"... done (took 21.768248432 seconds)
loading group "misc"... done (took 1.868562406 seconds)
loading group "sort"... done (took 3.464126043 seconds)
loading group "collection"... done (took 17.956844304 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.525319482 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129250942 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131389997 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124522746 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151916686 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118676911 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132026415 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090223669 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.818381122 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15484505 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.124010789 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.44311598 seconds)
done (took 5.242162378 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180174427 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086216946 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087828695 seconds)
  done (took 1.290971758 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069082967 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129212221 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070256073 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071364165 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070491718 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070629016 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070816551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072495502 seconds)
  done (took 1.67264205 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077091123 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072438501 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069877345 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071860453 seconds)
  done (took 1.409993811 seconds)
done (took 5.748671016 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.814703623 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.222270501 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193227387 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.430410734 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141217078 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168466213 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649377918 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325795608 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193928054 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084122811 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114252686 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35398401 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116438647 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639146468 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078954748 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095239133 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14239837 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416398112 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071535088 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085922244 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092817366 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132927926 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091006263 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079237598 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15136748 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071589052 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141871588 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084718765 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070512825 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226675072 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178392433 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656916427 seconds)
  done (took 10.473316304 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105722932 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105894567 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075814137 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13350515 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107798464 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076219424 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081534106 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07354516 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098339547 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139904026 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.101224684 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111781159 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072192495 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.075247851 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.092103605 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214290924 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08798874 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088175902 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077711923 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086677923 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116905542 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0850088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088191432 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087964605 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136374517 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186800049 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102622226 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104285534 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072475243 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.089025328 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118728728 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136562472 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072173014 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07277431 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.135756703 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100613762 seconds)
  done (took 4.861674916 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.056874184 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09309928 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1544282 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097967355 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145634934 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.071211891 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.117663623 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07144485 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088464473 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.223613577 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.355366028 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.642388806 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115518637 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111044312 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071946538 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073296515 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071726009 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.590949667 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102640479 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112882907 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08604215 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074034091 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073506893 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069107447 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072099846 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067730476 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072732414 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115679279 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.303171261 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130833203 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072318371 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.982379136 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168526161 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070906607 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104861203 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.295000185 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09530543 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15050918 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073400261 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070235882 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162122976 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076042941 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09664685 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070359565 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089673263 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107381805 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122861122 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069620977 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071773843 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172697482 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069305783 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085745866 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.110089061 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158325857 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.084431709 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071208949 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.268945931 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096457026 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076674205 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071032949 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19260918 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135544792 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07216961 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071718074 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073619106 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076637214 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367112365 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070557756 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.920946375 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075237559 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083077048 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076014805 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073925314 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076977743 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076814356 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09451274 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070952438 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079737841 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070473 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070303265 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070109543 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086958246 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.403255752 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070602525 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072399808 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068690775 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09377274 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099897961 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070424865 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.172634996 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103730747 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073464062 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071096523 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11311442 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071595388 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087559134 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073711141 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116853548 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071617708 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.105562108 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072229467 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069667843 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100507651 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07472831 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102629697 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084873186 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07204906 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449448542 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070614048 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068717759 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072916678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069842889 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072338132 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070845318 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083456068 seconds)
  done (took 22.354226374 seconds)
done (took 39.862294884 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271110793 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077748946 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077891336 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077480688 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077692244 seconds)
  done (took 1.793978187 seconds)
done (took 2.984324952 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129674007 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105442979 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068895413 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10223984 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069318122 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106762341 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106824787 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082036085 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106991662 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069074693 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104681819 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068655165 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068600423 seconds)
  done (took 2.399005271 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088030935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088901033 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074838633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088707948 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067469466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088242596 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086937723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094045664 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08690791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0786168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068082422 seconds)
  done (took 2.092711168 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087571135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089293815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073857342 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086981839 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06986056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086981762 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086787219 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091224745 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086741429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078494313 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068422365 seconds)
  done (took 2.08696346 seconds)
done (took 7.754251188 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082135936 seconds)
  done (took 1.254759423 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.609642772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.146384958 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085947167 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116579966 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198346601 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122817903 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276313188 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091120036 seconds)
  done (took 9.008765664 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09488453 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072701382 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074332318 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072415577 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086503411 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073173192 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073257759 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076469891 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076660842 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071836963 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073070003 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075174483 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076108833 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076777519 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075809448 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075384268 seconds)
  done (took 2.471948379 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096749021 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096854768 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077974371 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078942282 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076393703 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075706624 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078393658 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077825393 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074804227 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076175041 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078173743 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077320059 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076070834 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069035647 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078107939 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078852585 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074592636 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078224698 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078620363 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079177568 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078636776 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06772613 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07556278 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077974601 seconds)
  done (took 3.161893843 seconds)
done (took 17.077419155 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109897491 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071666475 seconds)
  done (took 1.361487132 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085379981 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087196776 seconds)
  done (took 1.359305762 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086788721 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069939026 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09406561 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081540539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070747302 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069427928 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09192632 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070446212 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069359924 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069230453 seconds)
  done (took 1.960335482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071849671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081588502 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074853264 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.086599296 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077529672 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068101923 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075667355 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071229 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080994306 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067210843 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075208863 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087184554 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075480698 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089424689 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075404968 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072897992 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.075146955 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07096144 seconds)
  done (took 2.567992465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069740631 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071276147 seconds)
  done (took 1.333254175 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07077543 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067572629 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069956194 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071813337 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067756233 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065756434 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067563399 seconds)
  done (took 1.669720721 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400944572 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12119003 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335823863 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077667519 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088327931 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.273724645 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070340368 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075973885 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075253545 seconds)
  done (took 2.756496109 seconds)
done (took 14.202265611 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084290051 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091155443 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101989614 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.395101021 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09553541 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070956178 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117034102 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193444268 seconds)
done (took 2.35230696 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217604538 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.72369744 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.44739308 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.22081048 seconds)
  done (took 2.589035093 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359716852 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095994852 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064866825 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073670984 seconds)
  done (took 1.800436181 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070679391 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073611398 seconds)
  done (took 1.348827516 seconds)
done (took 7.158518975 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07069525 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069655267 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068491981 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071064877 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09085307 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067207509 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068255754 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067661101 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069851583 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06967974 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071421185 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071958374 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071646357 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068122581 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069318531 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072280863 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069442348 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071812754 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069295299 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067881024 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070224972 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067568695 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06816549 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067502477 seconds)
  done (took 2.928813325 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088404052 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070187914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075517046 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075034516 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072846773 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074842896 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075652361 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069459891 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075415895 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072250543 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074121559 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073761187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071868272 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073543141 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072212526 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073106067 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074218525 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06944649 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07170322 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073349621 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.187806957 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06930823 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072530786 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074573899 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07238491 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072563504 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071898367 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070785818 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075097416 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074202189 seconds)
  done (took 3.527758958 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074912985 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06716455 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069002776 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075118238 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068191398 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069057248 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068427469 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.07007024 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070485531 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06939751 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070763788 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069837527 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068225495 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069386828 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070324369 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072654692 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086093202 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069545586 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069219756 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070069268 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072884558 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068987809 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068235892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066632945 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066480394 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066841069 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067503907 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066761164 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068253975 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066672946 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070529146 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070758061 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066466792 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074813201 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07042771 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066820173 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071330302 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066855625 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068086123 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066842722 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066515912 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067104519 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067142901 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074022611 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067391273 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068484197 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067698001 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068499247 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067833411 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070846796 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066766427 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067771555 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069215238 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068470981 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071453313 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066755395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068143549 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066831702 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067671909 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067227867 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067208786 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066972405 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070308835 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068289729 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082780402 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074517355 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068054663 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069559286 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069006116 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070873461 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068983277 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082696725 seconds)
  done (took 6.229859182 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09406398 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091558291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069584558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069515321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066529794 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067651002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073412677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067896159 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068864912 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086010799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068376559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069386683 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069092717 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07218357 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069901498 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071303057 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079564418 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066059506 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06813686 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072174576 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068205108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073327844 seconds)
  done (took 2.827438113 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162075926 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074815169 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110477154 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07960961 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074156435 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079523317 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073591978 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07328729 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073575679 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071211766 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07108366 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073691942 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07361807 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07181526 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071097334 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071440366 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07328347 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071031054 seconds)
  done (took 2.668628349 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081522802 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069856557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092629383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069720933 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06935468 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072387626 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074336106 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078451764 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071958044 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069697395 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078284402 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071912614 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072245407 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069158264 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073408579 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071563353 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074717841 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07184948 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078560266 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074559812 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073496839 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077688803 seconds)
  done (took 2.858529459 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083771508 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0728885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084964545 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071929502 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065517222 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067617176 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074373746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069313061 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074104961 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07368022 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071183543 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070746347 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074771402 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071491522 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075167739 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071533363 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074178198 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072598252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073906714 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067407897 seconds)
  done (took 2.683788967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090242849 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07162673 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071716107 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080191903 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071535704 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071629023 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078563783 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071835215 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07235643 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093550356 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0738532 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074131812 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081593577 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078505926 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074072625 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081007565 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081816164 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081080366 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073443023 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073826568 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095887208 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074260442 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081223745 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074736287 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07422495 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074028753 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073678095 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078713451 seconds)
  done (took 3.397709698 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071485749 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071432345 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069206497 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069914367 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069599418 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069912355 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069225476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069522877 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072004742 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070081214 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.072168144 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072148143 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072194513 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071784802 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071884933 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072847864 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072797733 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070190823 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069563276 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07029441 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072044592 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072870635 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072829787 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069334439 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069570944 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072568076 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069629082 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069216065 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07169994 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069550303 seconds)
  done (took 3.355098013 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079493098 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077441542 seconds)
  done (took 1.387205545 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066803607 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084428083 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067480207 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074897981 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07347206 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070895616 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077410927 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073475225 seconds)
  done (took 1.814376727 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085793328 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.082300999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072347085 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.0839639 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081757945 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087828839 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141801352 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071155695 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076998613 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069348056 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087156895 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069880732 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077324453 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071318255 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077293933 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077057596 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067929629 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076506679 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072361845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068434244 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071944127 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079270997 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073097355 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065662924 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072239194 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093489368 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082063209 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070202961 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074179964 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077669728 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076792034 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06453935 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070601204 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070762537 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067910026 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080602925 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085069278 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073339455 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079205132 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071157168 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08045513 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064835262 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074957255 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077381259 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080789673 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071234059 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071637338 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065391865 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068242242 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.075506067 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065483294 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07048269 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064565115 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077372751 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074145984 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082310706 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069295775 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072436323 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073182409 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073398399 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077713002 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072156942 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07343705 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070203789 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080762978 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075902661 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078917216 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065532114 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064450938 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068577111 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080449123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094818759 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077054557 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071254096 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07141301 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067986094 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073926893 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071157453 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076559506 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07768636 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07006802 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075339483 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07809793 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070791509 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073053761 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077604012 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068666578 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072707078 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068565966 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086967096 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069159537 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06799453 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068033987 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080827054 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07323345 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069630134 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067821083 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077682222 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063385291 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069900366 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069839598 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070032584 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079321472 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073910586 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073410837 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07785488 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076652306 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070302508 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072597254 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066517518 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070180145 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068170782 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0766212 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0630154 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072114301 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196121845 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072534623 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080414447 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070277765 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071810617 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079788116 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076604174 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.071293611 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.069314746 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075148268 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071221336 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075200073 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080021322 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069756692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066172488 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066496783 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.076724923 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07184244 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.076041503 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076653577 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074568496 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065132359 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068690613 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076405613 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079929005 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07234581 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072195593 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077083408 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072745707 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070425318 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077957558 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07340993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06983284 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078117614 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074201848 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067514313 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075310248 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076186455 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071950605 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076969535 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075862542 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074947976 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073947041 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070821432 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080175631 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074176327 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071780258 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072713849 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.07170941 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084917876 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074639287 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.067680244 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069201043 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080211184 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070633558 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073046411 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071102929 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075931457 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07322467 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070789705 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072393055 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075139842 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083851837 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077113791 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074251003 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078573181 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083925725 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069760461 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073296695 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070540786 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071125158 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070454111 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080062555 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076690008 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075200662 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072988765 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067237083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076172519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078943686 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069874915 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067871734 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069788951 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074285677 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076053987 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074958134 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07030704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068581706 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071359324 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072760805 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073111116 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070036498 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069805588 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075757027 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067848924 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076602447 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070464878 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080578116 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074252925 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065476635 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072463912 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06822982 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076342463 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065099234 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067207095 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068695897 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070363089 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067955236 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071933785 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063372621 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075628218 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076697468 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070298671 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068834993 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068850093 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076535756 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070909027 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072708511 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073051353 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.201860353 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082375985 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070770148 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075454552 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082343064 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071006632 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065735653 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077435913 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070069794 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069721537 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070954777 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068879162 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074454929 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079546374 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07783192 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064426477 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073832957 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069305681 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070492431 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065145808 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075335982 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073908359 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07262786 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077320238 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07105167 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071584011 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075265407 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070122732 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070882905 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072529755 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073291545 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071304075 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073549902 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071117188 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074363056 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070113946 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070363286 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074769245 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073330271 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074151055 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078546639 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073133214 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07244591 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075342931 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073238456 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074109267 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.073192281 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071596094 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075475372 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072248466 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070482671 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073597606 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065373632 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078240357 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069266485 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078708594 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071802899 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068069438 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076867386 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073732801 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075075797 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07176729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071592131 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072282658 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07028984 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073668151 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078373316 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069565475 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082091658 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078596874 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071316455 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073531041 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070602291 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072625807 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069183242 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072294547 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071596337 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071739576 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070516909 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075009898 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073675586 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071498786 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072682524 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071891133 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070716133 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.072119405 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064883894 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07010604 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069826221 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.07291939 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080894791 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071128088 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069871691 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06934799 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07135833 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.07017208 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066963856 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077495337 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078208404 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071474123 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077475769 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069752576 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071955593 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080810307 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064708228 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068135673 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068120665 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068162109 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077414539 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07003302 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079173404 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069777916 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069495729 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066572581 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069786495 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067630566 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063356695 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067455733 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073643165 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068503175 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06833467 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069341214 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.20453453 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072932606 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081976455 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071747419 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072919372 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072282961 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068134686 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070963042 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071128768 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074716951 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072268214 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068704365 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068648513 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070774683 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072911151 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072561265 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.071295281 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073059306 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078300236 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071722809 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073801099 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073791962 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064905377 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074098738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.071540792 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071521483 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069948479 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075488911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074579674 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072327322 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08113711 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07039879 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072351327 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071220211 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069065934 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070299261 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070602771 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070311533 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070986805 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072179339 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078400815 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068176059 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073969402 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07096854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071377103 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077171013 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072756937 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074220003 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076058532 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071609331 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072608089 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079201853 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075250594 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073424821 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072049392 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072533023 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076329513 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07044266 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077221737 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071325088 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071690463 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072673908 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06859522 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07059892 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070834763 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069899174 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077641572 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071905193 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070811275 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069865313 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068755588 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072029575 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0745512 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078338981 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07341566 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073565676 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065057631 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067575002 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07153394 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068011947 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072175148 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072864906 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076741194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073400009 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071590664 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069267561 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079902026 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076929828 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0743153 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068655683 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074942805 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070542239 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072602363 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071166417 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070880702 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071670025 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074845559 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072625043 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070449224 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07766442 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074093155 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071090821 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071725691 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071148751 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071088773 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064673741 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070594282 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072529238 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075209027 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071908029 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070194304 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07986716 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067502838 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070378181 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072213387 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06920528 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074217178 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064130722 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070773127 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070902126 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070008914 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064561119 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.199493228 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070407579 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.075140359 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07055703 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068676826 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08540631 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084627842 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076625878 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072803599 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069861957 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066385605 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.067231136 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072284584 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071772664 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073030971 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081259167 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070543676 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070114955 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065801887 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071633291 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073881063 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073621181 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068184579 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065956236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070577016 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075071583 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076924196 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069343314 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070195735 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074323721 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073161942 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068416384 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073635926 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068305505 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075894965 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083177546 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071339364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072850135 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0770827 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078260489 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071320593 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066450808 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070976941 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074010006 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071904692 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071763588 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072091956 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086557543 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073695912 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.07040762 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069453798 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073827518 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069959183 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079015299 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072127756 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071218879 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07517551 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07256969 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078971672 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074094051 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078708606 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073509176 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074378699 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069684677 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071607637 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069153905 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069897148 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071284485 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071805919 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07478038 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077911208 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070091188 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081296216 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079438437 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072311989 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066835925 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069993318 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070185802 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065041135 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070950842 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068735227 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069071727 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069464271 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070102896 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071248614 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075921468 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071964691 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071123276 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070683082 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064338438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073274638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073141852 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071336029 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067919065 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069941196 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070546948 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074566884 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073447172 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067934162 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071691527 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072002322 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071578782 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065211686 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07721199 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069850251 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072151482 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069321811 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070923691 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070728998 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073549903 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074338489 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070678962 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.0720858 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073058436 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070856932 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066789595 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066983861 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074242381 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066786545 seconds)
  done (took 45.197674379 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10670936 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06777571 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066301871 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066429515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078552659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068402852 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068165954 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068864289 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069220478 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070672401 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068057732 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067798479 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076825801 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084042118 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079557623 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072129893 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066442307 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068077973 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066701104 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068127214 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074926873 seconds)
  done (took 2.864088814 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077570712 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081715415 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079871614 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086029713 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074737827 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074216134 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078444465 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074531765 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082255364 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076192901 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081855837 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074140598 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076666838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076225565 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076167347 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074574669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084313575 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074574792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07443249 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079023084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07405267 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078433228 seconds)
  done (took 3.016409062 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071507345 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070587548 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071904543 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065294159 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069649849 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065151087 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073151518 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067410083 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073227265 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069136562 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068673783 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06888871 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071971466 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065490194 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069831394 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067768669 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111311284 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073213089 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070119322 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07064133 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065031663 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071933966 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065167869 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065822422 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069197179 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073565261 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070034716 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068170065 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069519333 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069980641 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069552247 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067356043 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071321837 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070004117 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068676338 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068862823 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069892869 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069909202 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065008347 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068354302 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070733908 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065705961 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069815633 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070618694 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067654378 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068050858 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072009285 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069669818 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064818076 seconds)
  done (took 4.740189488 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083077655 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1147324 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071583086 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092833019 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083982212 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076370107 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072737654 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094429951 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06658424 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067741017 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085288878 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082730181 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070301352 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074595317 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076609352 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068992954 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070030661 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06795631 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.07283402 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06877288 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072888813 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07571766 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083743838 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081263792 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073427682 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067832599 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068654564 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073780264 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081243324 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07346799 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074193688 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074180273 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08433776 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074765556 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069113116 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070980626 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085132927 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070346084 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072393737 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068384235 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073104139 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073306161 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076370992 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084970781 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0698634 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074063333 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069276961 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066779753 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081206032 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072551551 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077979775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084258777 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073567215 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069568658 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074305925 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083649265 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068487956 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06789795 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072496387 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082868023 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068800428 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073334416 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081864141 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071375028 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076271852 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082238584 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074013893 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073325901 seconds)
  done (took 6.609519899 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080597446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099700977 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087114159 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087767024 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07945194 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079505208 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079830407 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08170942 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082372181 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086416429 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082288572 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12479059 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.077520712 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083771082 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081711815 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08178105 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0825109 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081496807 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081211947 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080311312 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079249344 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086023525 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079275015 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086855036 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092082584 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075350914 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079580173 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079270724 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086303667 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079008603 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083325116 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079882738 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079540054 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087355556 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083486995 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.081875583 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071672213 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081662861 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080749555 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07956559 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074783004 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086892864 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079367541 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074375111 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079228235 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079030851 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086673319 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083586216 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081336416 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083703456 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079084761 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087028753 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079752933 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080145739 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087362143 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089448983 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086978024 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087220897 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080160437 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.087295783 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086587911 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089541914 seconds)
  done (took 6.490177194 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087180851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078449744 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085716635 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065164998 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070376308 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078105681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070589395 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070893655 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080023776 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080295797 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082660989 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076837332 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080936831 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082945015 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078866625 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081635205 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078260227 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078139113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079980712 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077758314 seconds)
  done (took 2.89197653 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07849123 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087979973 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070328531 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075661966 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075020662 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076644508 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07511168 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075609472 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073122059 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075769997 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082315192 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082088381 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07341525 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078369941 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082189066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077234054 seconds)
  done (took 2.559734789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088543674 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077250871 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083616025 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070467132 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.072155326 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067061879 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071917425 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067358958 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067909444 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085211853 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071786753 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.083745219 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072613079 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070750583 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068804977 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07701278 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068099186 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069644964 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.07203861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085449491 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075867969 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070419646 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075647673 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072121415 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.074492842 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077054524 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070815927 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071732468 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069351095 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071889023 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074698097 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075078223 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068822559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069796369 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.071288257 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068360598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.071379775 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.07240771 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076891188 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.0714553 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069404144 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072821339 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070043893 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071648607 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067066121 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07254578 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068115054 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07379133 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069210844 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073179586 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069417479 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.0720527 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070151065 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07663099 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072306944 seconds)
  done (took 5.331442479 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084355327 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073628622 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065387341 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068047573 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073456647 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072488297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075583539 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072861279 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07220277 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068969416 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073110764 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075025875 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073337596 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07600124 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073920388 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075632198 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067571348 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072966161 seconds)
  done (took 2.646383715 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074419179 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069886033 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078280965 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069714672 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070333931 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072227132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066023103 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068307872 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068805809 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069800485 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069251994 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07176371 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071106568 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072005144 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069506368 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070817712 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072846595 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068906031 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07173359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068402466 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074589206 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071459657 seconds)
  done (took 2.890498519 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099035103 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086120702 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144965869 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082554122 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09045268 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075593482 seconds)
  done (took 1.910895985 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095848173 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104604406 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07073049 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073355332 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081806767 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076128405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076623569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076850646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084767095 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082099321 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076035313 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084856225 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084543874 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084169022 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080713325 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079762615 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073898016 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073807177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070053808 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087412115 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074026981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082244766 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073846191 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073586649 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073799253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08174232 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082236678 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079654064 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073926471 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081754301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079726606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073977829 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082910286 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078877667 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073713414 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082358467 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074030939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087323779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079212893 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081093871 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073257321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079384324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082133744 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078842484 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081971299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073682979 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078256989 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074131039 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07347648 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089181897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080181178 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081040927 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080062069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082558453 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082122322 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089947042 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079682718 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081067679 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079795016 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079613765 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081262839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07943312 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081395608 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07976546 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079729527 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081585651 seconds)
  done (took 6.608166816 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10869959 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071255473 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074756463 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080066904 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081366878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073516509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073958229 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074165161 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073542561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070769404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112919104 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074162198 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081046225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081779074 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074333139 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074105751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074370582 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081929916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070664856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089936838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074032727 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081271275 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081346084 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08109226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079485302 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079744222 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074601236 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074216731 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073580962 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073652215 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078477164 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073855638 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081280197 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071011808 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081126121 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074326564 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073958247 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079000378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074277077 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079917984 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082111549 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087245538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074397277 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073796801 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079231744 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073825412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073701731 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070830613 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07386732 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071175849 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079760006 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079397947 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079623494 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081458084 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073990071 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07399019 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07417103 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073615583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074289629 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080157329 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081885199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074418999 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088925208 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074431232 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07430821 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081428147 seconds)
  done (took 6.492394706 seconds)
done (took 135.128292789 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192469366 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172293413 seconds)
  done (took 1.692942188 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072474894 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104201021 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081483608 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133602358 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070724758 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104149733 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10453125 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082854992 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070628072 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070632831 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070135729 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072958134 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135974843 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07094184 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070171039 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073246608 seconds)
  done (took 2.729914368 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10343969 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169868508 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107366342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069915615 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104063737 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076563799 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069058989 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079606292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074654091 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069410514 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07638077 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074718368 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06893388 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07404147 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07582387 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077083521 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06939148 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076739353 seconds)
  done (took 2.8606503 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10329952 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096117215 seconds)
  done (took 1.543923011 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158669031 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138124306 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.2131292 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.361152689 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166311239 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153016702 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148624462 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.149249096 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117754635 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1432805 seconds)
  done (took 3.089135895 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105761102 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159516403 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280177176 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123781818 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077688257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098475446 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125023532 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083145573 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084635382 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084079938 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084018452 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080735099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104386227 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077973968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07887729 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080051509 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108686429 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077078983 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078972542 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079989081 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105443014 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070543834 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077662581 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077994056 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08149366 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.08181991 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069910002 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071164753 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080096759 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079457821 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080559602 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096966801 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081958754 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111349098 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075574918 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112813347 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081275916 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077409063 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079166454 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077000655 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082651374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082116954 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077488085 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080973951 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070620658 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08113576 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070204593 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069395391 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081820719 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070790621 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081670499 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080808422 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110972734 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071267316 seconds)
  done (took 6.22215046 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110478267 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112738651 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075794185 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118878816 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109631035 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076606211 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109615645 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102019518 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110654572 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075077388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072730756 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074742717 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086348553 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087197557 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122822626 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114510226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078089195 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074861747 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113021266 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111826703 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072801609 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104259938 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098034207 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110875213 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072268871 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074542952 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072139048 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074626469 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081203862 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082312857 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073764535 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084828133 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088865698 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083268267 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071519654 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072936651 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072111997 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083825553 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083654741 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083043026 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081583306 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071933201 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071917002 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075385561 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074377289 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072565901 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083014195 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084516325 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.083042729 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073989785 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074757083 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075615547 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073873901 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084163127 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082406186 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085107287 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084185034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072940273 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073057186 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076487522 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085308665 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083212133 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083506503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073478982 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084185032 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073149755 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084187437 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088110147 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072541293 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074499476 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072393791 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074513227 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07419449 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082280826 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081812733 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073172135 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073182276 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072501144 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083909943 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081663459 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072511774 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080298935 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071504376 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072922992 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073373966 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074045736 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081419457 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084129235 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073812608 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072000065 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073020047 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072735033 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071220387 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079842509 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083132868 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0820857 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081382301 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073036681 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081052951 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08089403 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073058938 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081757343 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072116487 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.204341776 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076165262 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084254103 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082932213 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085394098 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074819261 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073186523 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.083125777 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08618116 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073191772 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082822011 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085821595 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084141031 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073265466 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085945039 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073089444 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084359988 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074046224 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084162775 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073449542 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084461094 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072871978 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072196431 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073534968 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.084211657 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07488228 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073576727 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075476656 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074540869 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083275081 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087570307 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074843559 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08291855 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084214802 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075313326 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082100574 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074064577 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083303618 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074407465 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074262467 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072762606 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086062013 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07330482 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073863287 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074199008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085183667 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072666223 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084348527 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082546141 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073274199 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085896401 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08499787 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082225576 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084374004 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075524754 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073761706 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072940991 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073358674 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082469405 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082739697 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074207006 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072610988 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082553015 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084084916 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071198075 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082407252 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08189664 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082675396 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072722562 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074169243 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084090261 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084217902 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082268118 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082165134 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082048061 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072682075 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081464704 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082680794 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072310539 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088002967 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072153558 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086882646 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082534906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080366917 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08220076 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08375627 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083474853 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084374934 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086543083 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071597737 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071953354 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082523777 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071917678 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073542229 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080219168 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072709043 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072937299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08512918 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071735 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082022379 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070563548 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08085496 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070114583 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072938245 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217620603 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07389344 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075386763 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085045043 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074070148 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082788409 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084857972 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083240021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073434814 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075142197 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084734083 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08366336 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072512941 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072516562 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075459954 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082364883 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082817422 seconds)
  done (took 19.642848563 seconds)
done (took 39.131383015 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216639129 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159032158 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180087546 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123396119 seconds)
  done (took 2.131072266 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12208511 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106833811 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097235902 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069300751 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103189581 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069367306 seconds)
  done (took 1.950754476 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317193482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216304899 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.194041318 seconds)
  done (took 2.107700126 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.217696984 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200573638 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459849044 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282075664 seconds)
  done (took 2.656038269 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150304528 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093773682 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071606179 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089372223 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138014912 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165525111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105265081 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130042401 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083586183 seconds)
  done (took 2.46567975 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154538076 seconds)
done (took 12.848912729 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.214308237 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101800213 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.260639536 seconds)
    (4/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074600764 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105830335 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087227434 seconds)
    (7/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094814299 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088386854 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13174239 seconds)
    (10/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.208543702 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088890546 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116239882 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094617218 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.170767863 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085968417 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083089444 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095425261 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07889733 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.226253861 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080543187 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.084445811 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.231906059 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115700601 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.179901561 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.215753368 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082359688 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118498459 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.226286628 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054505276 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.225865412 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079361996 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108131384 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079046601 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.17700242 seconds)
    (35/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.226458278 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080336523 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.171790932 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074376741 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172527693 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075886657 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151655015 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09586507 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.182631206 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076387472 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160708607 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192677228 seconds)
    (47/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.121000506 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.10979045 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.225803244 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084150914 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078374999 seconds)
    (52/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078074005 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080170416 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199937262 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.184891975 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077022937 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076809428 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.176402083 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197672533 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054307138 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.087235301 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.405825272 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078396087 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0787473 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078372022 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161273915 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07130119 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076354974 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149265736 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069684245 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193433758 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190236564 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054136929 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.213629692 seconds)
    (75/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107944592 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.117450177 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081258296 seconds)
    (78/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.16296622 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070054095 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055065395 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.096125658 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053747165 seconds)
    (83/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.239387037 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 0.146440658 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.122188477 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.069492148 seconds)
    (87/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098318231 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074330186 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.074083765 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059967774 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.199340754 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080052565 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12050541 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206197065 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129011789 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055879796 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168546698 seconds)
    (98/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074600603 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110178734 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094974023 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086044977 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094744096 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099853983 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080445027 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070601235 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150187882 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145241402 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073458487 seconds)
    (109/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203587823 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.202540133 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054886153 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.195783229 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.078928135 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.18688705 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097198478 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0700469 seconds)
    (117/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081191956 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094020886 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090093403 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069358514 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.189614569 seconds)
    (122/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076932192 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054876492 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.124298127 seconds)
    (125/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086019756 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080986569 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152870285 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054812887 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055658257 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08192439 seconds)
    (131/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055334886 seconds)
    (132/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054265653 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071233176 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076216308 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.143390373 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078042802 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.163642707 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114715101 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097453302 seconds)
    (140/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07874992 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078389607 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070118841 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069435642 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054010004 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078595096 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076018402 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089312651 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056609616 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075427119 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104400097 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076010868 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055686712 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161744553 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096975716 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077506816 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.162078438 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05475466 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056030315 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068941795 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077260406 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055425271 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05485482 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070131212 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.147120269 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055582579 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078405952 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056119785 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069574661 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 0.149033517 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069988781 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092784421 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074790389 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154962195 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071631074 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085030773 seconds)
    (176/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05438379 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072730522 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055346517 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070847853 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05589637 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054410869 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054556924 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053816616 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.105993719 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069121036 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092614133 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066743925 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070278494 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119028079 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093313528 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.057639675 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082861723 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078375965 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.20939535 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073641213 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148593685 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.16601617 seconds)
    (198/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.107772389 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079625377 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108389946 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071565865 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082953169 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155966738 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196417735 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136119102 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072437965 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06018411 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.10351341 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103260338 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071750003 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08995654 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07309274 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100725984 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.166577945 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.083659576 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09741563 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056658481 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081336017 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.107059993 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079129696 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078506481 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08158194 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072635566 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070722418 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078364213 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054658769 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096785829 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079136759 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075099141 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07094998 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055235408 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 0.137551934 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068498477 seconds)
    (234/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067709817 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074351013 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066423781 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118067992 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05749397 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.071635304 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083641967 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094574318 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146541285 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054999071 seconds)
    (244/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06857532 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149464512 seconds)
    (246/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055889508 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162427394 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.07112658 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.079933192 seconds)
    (250/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057197984 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119593046 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.056053802 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079088235 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087904185 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121489519 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094991022 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054003137 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054907919 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06921766 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055659995 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095356391 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067930758 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068738589 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054551535 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054716972 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054855714 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077256014 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070746044 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054202678 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075521663 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07859472 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054361397 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069764619 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077100146 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072512544 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0689881 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.0787288 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092930854 seconds)
    (279/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093725139 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054402086 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069825152 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094613267 seconds)
    (283/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055859163 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056540518 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18398083 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071905176 seconds)
    (287/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067409482 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092438787 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077743456 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055836489 seconds)
    (291/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066039926 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067491171 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067615901 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068883401 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070031258 seconds)
    (296/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075525245 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07738353 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05579183 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117653083 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075860914 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07082416 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053927081 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076424161 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069059911 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.105377218 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074118191 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075466206 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069450225 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069172429 seconds)
  done (took 32.710625003 seconds)
done (took 34.104402182 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089068616 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097344206 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079851607 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097829494 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085135117 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07980415 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077281603 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082840725 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083662242 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085528049 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082310818 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057726935 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079304349 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079229396 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079458305 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095533909 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083201078 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077569689 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07727901 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068691647 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077750487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070100968 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071283406 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05774842 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082499734 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075655242 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076151253 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077859752 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069395597 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070002248 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073302705 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078019208 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069295598 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082097398 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076492452 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077106187 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078989364 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080887471 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071365732 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069381418 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07891563 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070285269 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076886491 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077764505 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077205149 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075672684 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078219895 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081810052 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095625228 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07127566 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078832455 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080448996 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079785436 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076970458 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073903693 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077776691 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075062864 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098187569 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080055045 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073242021 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078650558 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079361248 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074740248 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076978682 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076986177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080034467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080062185 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075122458 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079269767 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075824008 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069471997 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076933539 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073550742 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070239277 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080431591 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082193324 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068334431 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075864404 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076849844 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075114012 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068424997 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071572541 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073505728 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076288744 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072623054 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057808772 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073924623 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076418703 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068828038 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078173881 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076234677 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076428245 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071205492 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07968404 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068406112 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074863085 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069445981 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068820976 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071062273 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073408665 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068845792 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071430327 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078553637 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0706657 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075815479 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08288162 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069137358 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07641813 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067998142 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067990967 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08356944 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079345759 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068984234 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072481512 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068920963 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07664911 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068048199 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06885304 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068251463 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068558519 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074647278 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068392715 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070673216 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076316635 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082135694 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067591563 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072649974 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070027349 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06883533 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074566429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203027929 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071317221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072345767 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066525623 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073109827 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070757374 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077053285 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072450169 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077983022 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070947446 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078281965 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075106031 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075705811 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075085483 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068154019 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063695302 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071673677 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072043392 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071943238 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069878967 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071033531 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069168185 seconds)
done (took 13.09365594 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070595031 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145544081 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102701823 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100486045 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090192854 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071143932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080167909 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104163885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072282278 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106193029 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093378546 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091075989 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119464799 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069427219 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070790498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074220993 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07262794 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086343125 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.105263723 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091716633 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121312403 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069846988 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097200029 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094235107 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093313063 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.108095962 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071562575 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074705006 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073648903 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098014415 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093600887 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074199438 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07207889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103541635 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098591475 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087997058 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071309617 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088261391 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070989501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070536818 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073035836 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10627161 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087672347 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085862725 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075459926 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081625943 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072941711 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089572984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095320126 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083746056 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090682023 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106887642 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073560713 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.089392295 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069996772 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091126758 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.085019529 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075844003 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.073387945 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.081962688 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.073504983 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.076945509 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.088838528 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088854448 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078259322 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.092938901 seconds)
  done (took 7.197147019 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088732134 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097492285 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088393196 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089507698 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070044639 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070452463 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071789961 seconds)
  done (took 2.069866337 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071450746 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093683487 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094487088 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094660498 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087495875 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09590724 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083177985 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.073984317 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097132001 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.074840989 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094141339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106325617 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074956273 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078324929 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096214571 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071963136 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096349276 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071009231 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074176875 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095424386 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072942628 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10263688 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07467117 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071939767 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085962373 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071681796 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120105015 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07627858 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073236171 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074262535 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068702716 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112728796 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085141039 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079265611 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072686245 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089599248 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089407514 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072006898 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.092017239 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083287267 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088676075 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.074775122 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075090802 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070946693 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078305162 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0851048 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.074656269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075329342 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076236424 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094781777 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07416527 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08840926 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077509884 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079747464 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072831499 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077504986 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083182525 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07198187 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093287436 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072884242 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088256045 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08795492 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085169366 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088230004 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073773997 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08555384 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087295208 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074018289 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072762094 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.077506659 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092104075 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070532425 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072868373 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082106395 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073810506 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095695625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094906006 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073292712 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085390726 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072108525 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071672123 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071406415 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095074783 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076862596 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071302005 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075727245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074096422 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069092118 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069944955 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075051551 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06901407 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073206595 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073628957 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073707116 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073906642 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088002813 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073833916 seconds)
  done (took 9.369304014 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073658809 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072631405 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073462703 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071181169 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071471547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072686346 seconds)
  done (took 1.952430389 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098199693 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072920907 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084727261 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076011927 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110790849 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091503882 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092491232 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082851245 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088343684 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083166353 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.09164234 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092951612 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096960554 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076731597 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091916052 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07667336 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092074614 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079051773 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08231946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077486289 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090894823 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07707251 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077241089 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086810322 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080231112 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075617471 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082911684 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083848797 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082961307 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082609315 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076509645 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079701547 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075180534 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082612595 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091669526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074835262 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076121861 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081117841 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076130762 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080443785 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095189621 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078247978 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080826889 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.083999958 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083702742 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076541254 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081460665 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.085496558 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.095245091 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083590591 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081270459 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.0751411 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079918045 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08112083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074883377 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082693073 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.08182322 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091493586 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076234569 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074847276 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07381366 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079905513 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08253042 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080758546 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085145894 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.082106404 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075131087 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077246522 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077066434 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076055854 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081917767 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072714685 seconds)
  done (took 7.434666277 seconds)
done (took 29.506644009 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538478142 seconds)
  done (took 2.020004247 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.638582513 seconds)
  done (took 2.144660151 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.064509128 seconds)
  done (took 8.56808089 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405072273 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.512917238 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.760922652 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139816682 seconds)
  done (took 3.364291893 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.735159392 seconds)
  done (took 2.249501106 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23478756 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221850882 seconds)
  done (took 1.981207024 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384946036 seconds)
  done (took 1.890806835 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.171852749 seconds)
  done (took 2.679745302 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268074942 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184562003 seconds)
  done (took 1.965328112 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.507622619 seconds)
  done (took 2.016814776 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.94265616 seconds)
  done (took 6.455572724 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229647238 seconds)
  done (took 1.783979218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245370958 seconds)
  done (took 1.75646619 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.75174335 seconds)
  done (took 3.26314085 seconds)
done (took 43.648807123 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089212601 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090013293 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090307912 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087085219 seconds)
  done (took 1.854860196 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081533878 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077932237 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081370978 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077789178 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081912978 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077737025 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078905346 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080370191 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077791404 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07782417 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077419974 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077691911 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080440376 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07903851 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076052376 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079768003 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080734545 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.0773511 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080488422 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077499293 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075569775 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080370729 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080062318 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076752194 seconds)
  done (took 3.407124597 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083466704 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078001257 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079904379 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076166286 seconds)
  done (took 1.838467999 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082930188 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097317424 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094575731 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.08300629 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09823648 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091926892 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073976971 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07480132 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.076079023 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082730672 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072972026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101772274 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093829352 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082419131 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085063558 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07090962 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073075971 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092539354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082867278 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08319829 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074949266 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083353191 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072754067 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094660111 seconds)
  done (took 3.536688413 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09154029 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110188665 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086727041 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093359833 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095901375 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069558478 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093972399 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096225265 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132827781 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070225599 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075281002 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069737226 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07893344 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070296281 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085804221 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113505319 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118211301 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073784508 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102699121 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070757213 seconds)
  done (took 3.326035126 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076622961 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075020921 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072308692 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070167028 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082104771 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078528426 seconds)
  done (took 1.982937095 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07341029 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072081818 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.073366606 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072051823 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077243892 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071841893 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070673209 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072076649 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072924287 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071888075 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071118182 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071108279 seconds)
  done (took 2.393848711 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209193672 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072606286 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074732336 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070170535 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075188056 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.07178933 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086332287 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07280713 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097351828 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071067637 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071268015 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073259158 seconds)
  done (took 2.572089126 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21500335 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081444157 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246464778 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159046441 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117316744 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122201787 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118800873 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119486263 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1485653 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106065522 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174412489 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17430236 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113673902 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143437723 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094518298 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104193435 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160910283 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171292789 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111819727 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171870478 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157708037 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132760121 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153645861 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108651907 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111951829 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12906696 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076614873 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085751103 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177789495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14054051 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149721661 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117225439 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097365035 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181969917 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17719974 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145827476 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153785597 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090147025 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107858396 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138941113 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2098152 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095157086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166101987 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254896178 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087731867 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140265673 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125453046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124674886 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111183654 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096110356 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152831703 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191971984 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.144716887 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094244622 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131834816 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120288797 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120078386 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119890915 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190294373 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169265959 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134667463 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076408011 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114468036 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159294253 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139963795 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114711687 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129623886 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097024107 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141620517 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160806211 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128821584 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15024662 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.123441846 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094494948 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124431167 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145637175 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133608527 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167971235 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129452743 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077010222 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129201523 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105616877 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08518154 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153763302 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079044074 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179859006 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104357233 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110942712 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131266738 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114374257 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114204299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165772562 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146307914 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.250718342 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071302103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111874987 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12676237 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153361375 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093582829 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114399724 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123869923 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083244432 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142629649 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080843715 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129398089 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080501384 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130283602 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135331798 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083363001 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128009591 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111003161 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106349894 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13989651 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166392201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093817176 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08721578 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175773295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127720736 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10889389 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149002977 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16200803 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103773377 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107679028 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156681321 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185648969 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094608267 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168959874 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112249119 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088551282 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093537098 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12892388 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117130948 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.130008451 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086582801 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123221838 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172854928 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079666991 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100194933 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138477661 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083117457 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085055226 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110037343 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10972876 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100803244 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.105075783 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106942626 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141258237 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128447718 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109743296 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126271923 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250180252 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178227028 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09367797 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108097442 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110393809 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075630525 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140981627 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163328167 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085532356 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170164435 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129099255 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12275887 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1247741 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089195748 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146029762 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084021485 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075390037 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15313368 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114743793 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116702184 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156741347 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121916453 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130663649 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127233569 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138645839 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137453608 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134852295 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111773007 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092936167 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11634178 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132996554 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078110321 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095571837 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08458641 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110147109 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100956694 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088447531 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147230643 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129494402 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115759852 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116505373 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101864899 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151687161 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080811677 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133013485 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123473313 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100605655 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156320615 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156643718 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136895223 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10450424 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142654898 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07430433 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078028733 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091676282 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270883482 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08938815 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090312674 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121718319 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153378816 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136218157 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142340126 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130016399 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127319107 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162193816 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075309418 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126828655 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153122632 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127813955 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109951145 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096402782 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105552181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148107825 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11331944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18956722 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118306185 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129204755 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158879218 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106756175 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085208861 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108407157 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141325744 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109671524 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148873712 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104450688 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093165453 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115252651 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079202019 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104028697 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132655121 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123706197 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140230618 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120370758 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138406324 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082636402 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120471665 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125967321 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126446447 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067992352 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124241011 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164508456 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099202463 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122243773 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156869852 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083605758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140505936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179061341 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.297298633 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092445412 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114967667 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126280544 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134789561 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125986561 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147499786 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112876664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143737711 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116145385 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091364159 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093645164 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103229192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110592295 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101524183 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110459017 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120297521 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101304259 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138128159 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110503835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114786125 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122512988 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10596756 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097542086 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102866417 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182539958 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125144787 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178262341 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105873271 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.15091851 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170410797 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079768933 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083474538 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082419917 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145896865 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089406303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135360578 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113566478 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123463323 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129079133 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147712996 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100498045 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073395285 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115964808 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137773636 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130724553 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102964805 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108086802 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167127966 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10426163 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083585024 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118308223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120787831 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107665397 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174772862 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064778831 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10871393 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226118662 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087445536 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13538754 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159693614 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08640322 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109206797 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125515283 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117591001 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132899372 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109203869 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115467859 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13427907 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158084083 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133630441 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094844234 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117374487 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133879826 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161722548 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110816719 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10177089 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180166563 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158198949 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165603581 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092744226 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11870083 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118117224 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114070859 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142802919 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088302846 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168874675 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087653507 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142397531 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108549406 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093571294 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134524433 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114722169 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093855256 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153216473 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122695566 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087238249 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082003242 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123072172 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124202746 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110219324 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080509613 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143369306 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078398653 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136378938 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16491419 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085273474 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109411102 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099969859 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083300963 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258592599 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109318748 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094852522 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104038623 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179017314 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092212709 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15539002 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139484642 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11852127 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141001366 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108385381 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645104889 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084181772 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15738033 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121488138 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181432897 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106233673 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122701388 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11543139 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127807353 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152837019 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109470605 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.194242745 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139118874 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120376561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084844402 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107842802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110214511 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092191119 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112871578 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118376687 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120626749 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097502769 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120969329 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129053189 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087064894 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10114134 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160539848 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123035304 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14952488 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145326423 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090706649 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121607264 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141040361 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084271718 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124814942 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157482476 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110332472 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10487043 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085237529 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104639265 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311192689 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080097273 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167356329 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125677285 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115846548 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119223124 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117587736 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137039463 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113040423 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128189866 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098405811 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113984379 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118902864 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087795794 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083158146 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11328935 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117913228 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103364034 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10272757 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104456205 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157653439 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077163847 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105524105 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120985811 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149219245 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181301627 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09345952 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088408684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124224438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120684055 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11848239 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126573903 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083842687 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08737829 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084741885 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083021961 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113475721 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118040224 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120156069 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115498969 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168936828 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08856002 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.243574391 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1004391 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110008712 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074848767 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083292207 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10158867 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103441001 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112254015 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114804785 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163924019 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099699118 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094003256 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095228517 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078421126 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087025045 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131331418 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113287504 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270322901 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108223216 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.0673182 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114605693 seconds)
  done (took 61.743648822 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112649526 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089683781 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100974918 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148852397 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128263631 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206916895 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158480176 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194829984 seconds)
  done (took 2.785035322 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072917909 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101314075 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.110646749 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089432562 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072045799 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074090035 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238797618 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086737278 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07130802 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101630767 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083806901 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074718079 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.454538923 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073016774 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075865272 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066502157 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07199977 seconds)
  done (took 3.556097496 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.413113652 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62265256 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365645653 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081262565 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.972094992 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09884345 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.17423405 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.143918395 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083481328 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545301006 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41509199 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133242267 seconds)
  done (took 18.695175781 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087158288 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080144569 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095197374 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094747812 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083173104 seconds)
  done (took 2.080168773 seconds)
done (took 111.338484461 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087075914 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.630134129 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057411313 seconds)
  done (took 2.358724669 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089179118 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091852746 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090346805 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08971604 seconds)
  done (took 2.012317273 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079641152 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080794435 seconds)
  done (took 1.805694937 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243436605 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175760823 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105383773 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088671866 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084029936 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085428793 seconds)
  done (took 1.905230819 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077523934 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080328277 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077976579 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081716178 seconds)
  done (took 1.959466429 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081505215 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057978887 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060169766 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061927163 seconds)
  done (took 1.905366521 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092473151 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083954878 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084208929 seconds)
  done (took 1.905252587 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107928666 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090757876 seconds)
  done (took 1.84270354 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086751827 seconds)
  done (took 1.735415259 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102904263 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.108075953 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139820406 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.119279506 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147245359 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115738853 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090059703 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090906834 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081029226 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091609051 seconds)
  done (took 2.734846865 seconds)
done (took 22.415405377 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08421049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380465227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366696719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09591047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673420498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360913815 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006507548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098824116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12089074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072907767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090042792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6553785 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.997373147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.333405991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984911482 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333471267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654413336 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072701171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071940313 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072139016 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.991009409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07281276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073007926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072787034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654248238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377919054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073004605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329665107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072342265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075130461 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360352413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073124573 seconds)
  done (took 16.387328107 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074907247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127241892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078062053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088990971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076263902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074036231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075881711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091285457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127148434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072859677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090206054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072442296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075853193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072773206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092654843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073118701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073121822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073140891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072949229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072991031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092050181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072546163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072996003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073746255 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072651635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086198104 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073409262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073589495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07398929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074621531 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076056145 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074116958 seconds)
  done (took 4.232690134 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121812721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131368893 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078154327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109004949 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117019308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075244832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150714944 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098474006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133526966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072956206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090606121 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073479034 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108862311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073920023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093419483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07294568 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074557515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073812132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072962432 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073360467 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093853265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072608499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073353612 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073888699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072932194 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087792032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074475692 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073446119 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073379817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075771831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076764195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0738482 seconds)
  done (took 4.482110891 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077419503 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079429577 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088761184 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089345152 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074080849 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076178006 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078002386 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07473862 seconds)
  done (took 2.304540703 seconds)
done (took 29.06017447 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084081851 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073757811 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078214055 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087090959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078861943 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083004714 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072430943 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081569678 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078268146 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078441211 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080651998 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071820994 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.0758239 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071905653 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078569679 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072555926 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084634568 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076617765 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084619993 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084639832 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075498079 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078771379 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08064329 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084379476 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084854997 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084044143 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082885264 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077981976 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073176937 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075296627 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081995784 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089397779 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072950982 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084808158 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072316908 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073164244 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076836012 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072296862 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084205008 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082352824 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074216143 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081369373 seconds)
  done (took 4.961187473 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093541454 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098633079 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090589472 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065941874 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071408073 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069971696 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094532573 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065381904 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064655067 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094136901 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061723761 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064668234 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067654425 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057807642 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064810688 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061260663 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066176229 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059455442 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064918958 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063747307 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094634005 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057931117 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082952451 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068062926 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060741433 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06641575 seconds)
  done (took 3.544462084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079484811 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090235481 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095553373 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138472914 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111724077 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084503642 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084621198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101140683 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093872644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071602266 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076372662 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098798464 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095990721 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079061022 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07209696 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091482786 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089517055 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073544056 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077957088 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100557965 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092136711 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091249567 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101452338 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088707692 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071311851 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074858558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076635619 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086896666 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075339224 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081753142 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076300403 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076313093 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075027081 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084610737 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07509315 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073799877 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100341214 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083010461 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084581032 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072875246 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080957031 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073880969 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098298537 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13363829 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074514443 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081117549 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075986422 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082712784 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071857391 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093497245 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084149037 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072306526 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075287614 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071187788 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07135413 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075137768 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073817039 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074431512 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082016508 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078814204 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.0974328 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077017591 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08901645 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072491025 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080610271 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071624724 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072922487 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071024288 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10178114 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075059082 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117141496 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.075560087 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073181153 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08183366 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08045507 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.080265871 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071783221 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088806647 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082977732 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076744131 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08084386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075619237 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075623341 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096482775 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074685714 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074608988 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073450074 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078477716 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075419164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073666628 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086148421 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07180748 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075618167 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089470425 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07223577 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.085017506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077738397 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076516073 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071730528 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08337844 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076574958 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072884296 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082946378 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071845258 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07532198 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085010272 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078096294 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070970681 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076850684 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077930675 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072929488 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073883615 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074877337 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074595707 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081366756 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078880523 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076529861 seconds)
  done (took 11.256909819 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175320594 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165583124 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075078843 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157667247 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081638695 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08475608 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158906063 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100657935 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073316861 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073053436 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073017647 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116723655 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112936164 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.1226438 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083741114 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072098041 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090095832 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121398939 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161398123 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154855832 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090114815 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082635024 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074932065 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073861241 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075033706 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083448496 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090929583 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084454032 seconds)
  done (took 4.617141972 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087939423 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111108173 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080834528 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096819444 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095802813 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073143046 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075477885 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074494424 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087720777 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.0833599 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072180704 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07819805 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079756749 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076033764 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073448724 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079980779 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079773416 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073836961 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07605195 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078757745 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084477596 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098595909 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07730812 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072208126 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078469519 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072408175 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068043017 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089305631 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073266558 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101615826 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070550655 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078266447 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088333855 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073989012 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072845515 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072608839 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072657638 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072553251 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.0750363 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070915161 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070765092 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061672049 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071715587 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083969359 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07991322 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060385328 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077788265 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078522365 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078459579 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070304939 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07708571 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075794594 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075549793 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080884335 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076877673 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078791822 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07463777 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079062113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082409565 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073039867 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069508294 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.071043545 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077206932 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070166298 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082234091 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077404905 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071105521 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072782629 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074693582 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07968904 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07278423 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077372316 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070594971 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074258628 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077689268 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074771395 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073903776 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07126766 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073145988 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07295584 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059482863 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073289162 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057135296 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075787071 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070785595 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.0708586 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073131043 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077394069 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084276694 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073643918 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07848534 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073636972 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072098429 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075484051 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064366581 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075949692 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084534236 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087728515 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072188989 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069977753 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086434226 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077917826 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071302345 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060005491 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076521621 seconds)
  done (took 9.731262892 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096422805 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075284957 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.090553009 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096925815 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093167573 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080038373 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08314303 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074509404 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089941726 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079055465 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082449231 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072682924 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083705064 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082475049 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075101722 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082844565 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07745502 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090309519 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088323883 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07261929 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082053579 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08655374 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096978301 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087336858 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085735102 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087258746 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096546933 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082431986 seconds)
  done (took 4.079087679 seconds)
done (took 39.844905575 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.761275882 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.916951847 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.741253631 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.155986636 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.815690186 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.934819949 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.936070432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.737350317 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.871945043 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.778192471 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.021464925 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.944931922 seconds)
done (took 65.295198889 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.75596284 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885230578 seconds)
    (2/2) benchmarking "String"...
    done (took 1.968956623 seconds)
  done (took 5.530166252 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.990171263 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.313573272 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.988020518 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.738424297 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.744585603 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.057599711 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.5461818 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.246556627 seconds)
  done (took 30.311686166 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.868817005 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.963832954 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.451461621 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.493226833 seconds)
  done (took 15.502905294 seconds)
done (took 62.854606116 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.746555352 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.747539558 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.77997323 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.722752458 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.799983097 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.747085704 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.229174778 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.775296043 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.73765007 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.72968598 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74206457 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.221886814 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.751016533 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.244988039 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744145011 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.740857222 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.761739387 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.264143998 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.896646816 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.748783082 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.747682716 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.779948804 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.744101391 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.749785578 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.752648896 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.739928575 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.142605392 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.753159431 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.564670536 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.745405887 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.799370461 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.774678997 seconds)
  done (took 203.102096978 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.741228688 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.83641839 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.915864754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.759079729 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.293897847 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.960932688 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.867122138 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.32651006 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.74630976 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.751009858 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.991250375 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744648903 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.015062654 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.744730918 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.770456888 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.826588652 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.989662889 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.037447822 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.77802993 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.900519404 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.76247546 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.888458095 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.833313075 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.979097021 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.769832457 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.783468919 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.752598574 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.769699386 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.944736413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.953779378 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.746026038 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.776832697 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.95136767 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.615481032 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.753773983 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.760686809 seconds)
  done (took 169.717615553 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.909741385 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.742909797 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740608292 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.741269529 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740760309 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.747593772 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.741697481 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865672496 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867353106 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349377649 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.121074594 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.797539199 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.514969554 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.741991052 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808922411 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.753401793 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.742198164 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757810483 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.769693516 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742152719 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.742547706 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866257745 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.754946267 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.741989234 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.749460456 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.742874583 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750728662 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.112316943 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.789392401 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742040286 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747404861 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.983540208 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.743297703 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743002556 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.575489567 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.264930101 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831467716 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.744309648 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748091424 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.742930155 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.959237276 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745206373 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.742658334 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.74269039 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.748046013 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.877031721 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.744064593 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.869260856 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.744592762 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.22181158 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.744083575 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742837157 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.464450571 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.318730886 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.747316202 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.743128685 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.748694961 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.743160747 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743140362 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.751836942 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.439233633 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.823717305 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.745664312 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.747314878 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75092308 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.745826392 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.826067238 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748595081 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.468547227 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.80656486 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.866054742 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866128238 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74776353 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810612508 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837956946 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.745430251 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.746021318 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.745032978 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.743823729 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.827488301 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.74559649 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.867274166 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754108989 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.745739304 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.796558988 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.814867001 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.747837094 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583122274 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.750015047 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.745624302 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.018879844 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814377971 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.746254152 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745171145 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744477505 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.868278699 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869243867 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.460261888 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.749681607 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.358796157 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755448305 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.746912258 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.879246559 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.747360418 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.874647148 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.752257667 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827967921 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751748429 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.747874954 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.745052456 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.778321975 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.747414763 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.795886255 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.747502203 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.117414253 seconds)
  done (took 398.219498764 seconds)
done (took 774.677893887 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.403572426 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.367620282 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.468952883 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.389713608 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.363257007 seconds)
  done (took 13.676837159 seconds)
done (took 15.360703353 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.837672016 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.844172078 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.772097933 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.841626265 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769551243 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.841981626 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82420606 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.773525874 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.807867268 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.773139718 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.81006744 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772576464 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.761088553 seconds)
  done (took 25.113394925 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.979630295 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.976928505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.81988251 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.983097335 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796843201 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.003137282 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91340492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.901155636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.90178605 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767986261 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76500327 seconds)
  done (took 22.495077623 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.974575935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990955017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.826308179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.978260919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.799411154 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982617497 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.913170433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.903667236 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.902813918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767344649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.763884951 seconds)
  done (took 22.488916738 seconds)
done (took 71.782410183 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.7589545 seconds)
  done (took 3.445047713 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.787230076 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956574822 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767780243 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.76418463 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.760070062 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.759583033 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.762987812 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.758760349 seconds)
  done (took 16.004784606 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.756396617 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.754570616 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.756023902 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.754717778 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.759363074 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.755942043 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.75717193 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.758919533 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.758243906 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.75670939 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.755955292 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.759614472 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.758903614 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.758126284 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.759232533 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.760412231 seconds)
  done (took 29.80797987 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.758559424 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.755725824 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.755798376 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.756852964 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.756512164 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.758730834 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.757405781 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.759263556 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.757325048 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.756698263 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.758650806 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.757406596 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.758485749 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.758487493 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756933781 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.757363686 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757720751 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.757496443 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.761504107 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.75757119 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.758142267 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.757681313 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.7573978 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.758522114 seconds)
  done (took 43.876667532 seconds)
done (took 94.819630495 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.469003481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.379689296 seconds)
  done (took 9.537216897 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.763189028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.763077643 seconds)
  done (took 5.266681162 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.760119129 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.761339208 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.759962326 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760797072 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.760896098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.762078513 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.76134286 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.760956642 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.762083717 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.760314888 seconds)
  done (took 19.298591244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.760448864 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.761379529 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.758159581 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.763118317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.762591827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.759456756 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.761760674 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.762192107 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.761853861 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.760446635 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.762379289 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.758674937 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.761959483 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759893523 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.763419818 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.758593172 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.758986315 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.758881137 seconds)
  done (took 33.38391654 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.761969968 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.761716162 seconds)
  done (took 5.213890881 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.758696763 seconds)
    (2/7) benchmarking "second"...
    done (took 1.759189996 seconds)
    (3/7) benchmarking "month"...
    done (took 1.758933008 seconds)
    (4/7) benchmarking "year"...
    done (took 1.759254556 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.758864823 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.759618281 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.760145665 seconds)
  done (took 14.00644588 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.76239929 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.917082056 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.983999736 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.425435577 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.764867824 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.766404942 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.721467232 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.766656436 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.768085594 seconds)
  done (took 19.568162082 seconds)
done (took 107.96286754 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.5589018 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.760139758 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.009270781 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.871143834 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.773656936 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.097623346 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.781443378 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.059187752 seconds)
done (took 42.601872129 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.809781078 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.049156898 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.068104177 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.783361209 seconds)
  done (took 16.592277201 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.743202576 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.287719735 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.787353426 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.341361757 seconds)
  done (took 19.883458018 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.126791382 seconds)
    (2/2) benchmarking "read"...
    done (took 2.100284277 seconds)
  done (took 5.925283981 seconds)
done (took 50.903992394 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763916893 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765193144 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.762329441 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.766210883 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.764648711 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.762302878 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.761765138 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.762794097 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.764950925 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.765542456 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.764780683 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.766678775 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765233642 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762987838 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763159971 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765508084 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.762400189 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.766249226 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7628617 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762060485 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767689204 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.763788342 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.762747622 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.764025364 seconds)
  done (took 44.032751202 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.765976618 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.765767718 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.767888048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.766977743 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.763970035 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.767099447 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.768705563 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.764360478 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.766463497 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.766592717 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765082004 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.766136753 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.769421633 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.764550974 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767967133 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.764831009 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.768830639 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764590254 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768220035 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.766350646 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.767889664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764460716 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.764861033 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768372292 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.766385084 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763653508 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.768166277 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.766275485 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767713899 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.76519972 seconds)
  done (took 54.687822597 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.773255893 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.77561148 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76776268 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.76864633 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.768227151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.76858769 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.767357177 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.770156302 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.767956723 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.769395401 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.768107934 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.768578851 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.767855558 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.769914122 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.768175504 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.768940571 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.768990214 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.768696231 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.767839116 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.768658258 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.76896538 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.769251613 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.768402721 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.768193877 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.771392538 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.768538348 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.768296003 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.769331849 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.770848072 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.771607523 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.769602005 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.770924266 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.770404609 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.770424919 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.770027879 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.769159838 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.77403758 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.778549999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.769366665 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.769115629 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.769993929 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.771718757 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.770075774 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.770393279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.771324398 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.770564281 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.770680262 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.769318857 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.770999925 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.771548505 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.770038407 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.772037299 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.769083267 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.77184515 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.772733971 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.770154854 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.770412295 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.770867431 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.771668614 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.770105062 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.770690045 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.77153569 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.771401363 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.771024108 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.771284489 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.771568394 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.770260802 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.771284395 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.771951267 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.771414838 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.770137446 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.771624245 seconds)
  done (took 129.156581614 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.770434929 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.768436324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.76926384 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.769175296 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.768002958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.771349158 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.76854754 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772509876 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769227618 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.773347654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771630618 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771497876 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769038891 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772237316 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772833053 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.769474746 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.772567535 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769938466 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.771340286 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.77274142 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772610835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.769959926 seconds)
  done (took 40.655265233 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77370896 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.77233279 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.771163898 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772919122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.772638197 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772747352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.773042455 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.774083358 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774019345 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769552692 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770916853 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773253945 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.770328721 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770083715 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770464263 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771626691 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773392493 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77173291 seconds)
  done (took 33.598661407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.770607375 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.772155508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.773134504 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.770375667 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.770646794 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.773473688 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771752411 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774089948 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.774693916 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.770678593 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.774401368 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773502256 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.774158056 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77172194 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77428066 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771417517 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.775362512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771942552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77363269 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771621982 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772659217 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773480718 seconds)
  done (took 40.701762286 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774555672 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774650898 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772066958 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.772205967 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.7726292 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.775330752 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.774856414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.772921972 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.776131652 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.774942864 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772890227 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.776103829 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.773207963 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.774180221 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.772873384 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77532045 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777108867 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.773374372 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776159751 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.773379342 seconds)
  done (took 37.187144556 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.776860712 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778302037 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7775606 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776327101 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779505942 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.778317855 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777496131 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.7787866 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.776824865 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.777077977 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.77851559 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.778238925 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777437878 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.776798084 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778919908 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776963769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776509735 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776632071 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.77978601 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779651902 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.778784063 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779367409 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777809536 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.778623091 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779972319 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77856608 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780109643 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778509077 seconds)
  done (took 51.491798282 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778079785 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776654469 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.77407222 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.775091169 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.774444637 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.774716735 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.776225722 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.77580046 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778422275 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774824422 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.777806587 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.777830466 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.778733581 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.777888429 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77954658 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.780347719 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777297949 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.77878437 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775433294 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77862122 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.781079375 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778625064 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.778965166 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.776644876 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776399256 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.780750645 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776571035 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776000177 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778278349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776141895 seconds)
  done (took 55.025503704 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.797344757 seconds)
    (2/2) benchmarking "in"...
    done (took 1.797872665 seconds)
  done (took 5.301717363 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.776594139 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779640313 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.780082109 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.778918264 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.77650021 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.781629467 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.779052584 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778667189 seconds)
  done (took 15.936455325 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.779609454 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.781162129 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.779275124 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.779420348 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.78066972 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.77843053 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784136352 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.781232354 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.779280703 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.779999201 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.786144052 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.786302601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.78124655 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777865724 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.778763225 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779293676 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.78058209 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.781431686 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.781887057 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.781716105 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78181484 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781536715 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781302529 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.779309388 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.782394528 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.790084007 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.785147271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.780637517 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780680488 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.784444961 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.779923464 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.778359532 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.781129392 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.782535179 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.781985447 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786764504 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789169558 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.780716675 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.784632488 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784334818 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783306971 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.779513215 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.782989899 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.781811056 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781549269 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.783877441 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.782356632 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.778595041 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.780751739 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.786405018 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.787884544 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779546191 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.779674357 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784111058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.781920084 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.787885507 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.782775335 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.786021938 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.791585583 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.789978855 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.793297384 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.789768723 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783336943 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.783066966 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.790797526 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.806586229 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787871871 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.780952729 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.780238781 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.784145358 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787661922 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.794489772 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.791811432 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.78361431 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.784487476 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.783355217 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782447858 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784373192 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787457406 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.784422093 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.783875651 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.785311251 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792884818 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805670051 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.782675449 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.784724104 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.78486446 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.785473976 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.783997999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791799205 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.785321407 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.78670482 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.784308088 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.784090853 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.783631563 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.785009109 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.784732935 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784981098 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.784371226 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.785716132 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785852435 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787941637 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.793083021 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787536154 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786181963 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.790162109 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.784208333 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786053543 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.79062938 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.78590438 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786069388 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.786378356 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.789680157 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.783332379 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789093262 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.796186135 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.787082688 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.785807189 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.788959733 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.787730192 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796749389 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.811406592 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.788716665 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.789051634 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.792147814 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.800136802 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786638754 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.79101473 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.790082093 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.783826763 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.783176155 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.786473691 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.787142952 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.786093885 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78714368 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.788677031 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.783499671 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.787410523 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.787241266 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.78657323 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.788469859 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.786637605 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.787020113 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.788495492 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.788703813 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.788498855 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.791755298 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.787179173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.78733609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.78674139 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.785154103 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789777849 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.788655652 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.791738295 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.787054916 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78913134 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.785819583 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.789373436 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790243498 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.788317168 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788009682 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.789854261 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791670013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.789991582 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.792148344 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.786740724 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.785599642 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.789441956 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.788833975 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.788840715 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.790492533 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.787401485 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.790550384 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.798497592 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.788295859 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.792615814 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78958763 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791050585 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.789964454 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790268109 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.791844286 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.796986122 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.788896567 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.79443789 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.791271552 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792501672 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.788730084 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.788710372 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.789432598 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790542744 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.79146129 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.797585828 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802914491 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.797796489 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.790579387 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.794965905 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.789715946 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.795705288 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.79196029 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.790883865 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.790364659 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.790176677 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788571043 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790808012 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.790588461 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.791653209 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.787534165 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.790528566 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.790047343 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.791204635 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791502037 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.791720553 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.790466447 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.788058714 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791573653 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791379632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788481155 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.787885198 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.789788726 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.789790826 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.794286937 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.793124592 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.796815023 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.788652262 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790937356 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791701186 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.790315127 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.789223192 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.792350701 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.793158518 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.791521853 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795752654 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.790764353 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.790887515 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.796860393 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.789836064 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.790358559 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.794295131 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.792322976 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.790696211 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.794904955 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.802345554 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.792660743 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.793817657 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.792348458 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.791452413 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79280395 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.795707215 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.790489061 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.792182031 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.793966272 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.792494391 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.790317764 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.793243375 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.792469638 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.79252096 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793586194 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793038397 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.793551565 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794799164 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.79440547 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.793629765 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.794340949 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.796075055 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.803043435 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.796356261 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.792635974 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.795879223 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.794912423 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.798324868 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.793954959 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.794769475 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.792102154 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805586316 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.804130017 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798605135 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.79447082 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.794986184 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797716667 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.794607865 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.796693316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79263837 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793166488 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.793448286 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.791793108 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.792097729 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.793514397 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.793473311 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794151948 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.7956948 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.799196329 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.794131021 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.793923895 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.796341588 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.795424516 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.797880856 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.794033904 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.795657505 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.795692758 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.795450791 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.793469035 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.794483762 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799756224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795246449 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.79432249 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.793677556 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.795470885 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.794877831 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.794896906 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.795789258 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.79918373 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.805479158 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.799913736 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.804933075 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.796900334 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80463581 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.79650181 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.798770594 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.806860852 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.794079649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.79512197 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.795413962 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.797608608 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.799732368 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.796612421 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.796712234 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.803286501 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797121298 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.797163208 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.797304302 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.797810764 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798299102 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.797072156 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802124685 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.797852569 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.80003342 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796596438 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.794063359 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.797861632 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.798183276 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.794930531 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798532447 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.79801401 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.800125307 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.796421986 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.796431106 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.798620166 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.798556369 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.796728597 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.795947723 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.797617499 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802119874 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.797900074 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805136807 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.799447063 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803168839 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.798176204 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803655187 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.799743488 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.797639838 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.799827843 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.798595141 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.798045655 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.798279913 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.800525811 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.799526926 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.798202169 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.804124127 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.799736894 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.800651613 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.799835701 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.800190432 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.799596119 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806616407 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824179455 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.80110004 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.809604113 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.796392008 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.801008386 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.80456562 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.800036105 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.798138132 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.801445993 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809710241 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.808040968 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.798467605 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.800008366 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800118994 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800546968 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.800634858 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.80050098 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.802042827 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.800461233 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.801052303 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.800447107 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802247056 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.799895697 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.799706569 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798937779 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.799237652 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.809615803 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.801303677 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.801045841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801015891 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.801799512 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.800087412 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.800393276 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.801509239 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799742374 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801377336 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801963944 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807395565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.809299521 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.803475609 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.79914025 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.801839484 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.801593975 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.800375074 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802491754 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.801533722 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801325198 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.802303553 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.802571509 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.801696294 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.799465004 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.802254825 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.801572956 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803784881 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804747598 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.809355208 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801303542 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.799596351 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.803008332 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803273354 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.800331408 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.802499063 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.808228067 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.805304158 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.812429617 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.810966877 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.807956397 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.801570827 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806642938 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.810909651 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.800295133 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.804862379 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.803513173 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.805021344 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.801954259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.805354278 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804303802 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.808139323 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.802945873 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.802499187 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809305109 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.804552686 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.805006455 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.804633385 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.806501004 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.802156685 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.80437426 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.803975274 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.802791443 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809012379 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80354451 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80485093 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804515043 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.800435111 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.804715829 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809943598 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80470597 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.805210042 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.801935978 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.803437025 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80527665 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804360203 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.803604274 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.802758472 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80385369 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.808288355 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.811780128 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.802836987 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805633206 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.803068121 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.805009614 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806290605 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.806081364 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.801999982 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.802669777 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.805068377 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805138346 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.80505622 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.805872578 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803986217 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.805509327 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.806555512 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807034191 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80823749 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.816506818 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.814589631 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.803915928 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.804532499 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.805099069 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.806612282 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.806229772 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.807294429 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804980613 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.806325562 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.807204164 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.80686391 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.807606216 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.807760284 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820225846 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.806524254 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805649033 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.805744495 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808382332 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.806890585 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.804189747 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.805873954 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.808054606 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.809682084 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.816081026 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.807794035 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81098428 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805034687 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.807675358 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.812115396 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.809090471 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.815243218 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.808963813 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.807772312 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.809251224 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.81140552 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.823150459 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80875458 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.817100208 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.837683772 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.80852389 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.807188709 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.808113986 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.806864321 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.809152071 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.811777638 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.809121772 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.808785054 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808659096 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.808294162 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.808226134 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813012827 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.80789979 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.80904722 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.8081836 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.807033907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.808810302 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.806134825 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.80855562 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.809990584 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.810314701 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.81057088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.810618459 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.809163652 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819725252 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.819431682 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.808346354 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.80868223 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.806588513 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.811270825 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.81081238 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819469213 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.817391767 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.809773691 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.810042403 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.809822367 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811037726 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80697522 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.811225331 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.808929925 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808303077 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.807741339 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.821650302 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.818895575 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.813796784 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.811425515 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811817589 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.810974825 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.810192455 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812786644 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811355827 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.811619495 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.810322147 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81683902 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.810463854 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.81227196 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.813586708 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.819695987 seconds)
  done (took 1072.66334575 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808044233 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.809471556 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808431569 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808072632 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808506304 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808094042 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80776536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.807042994 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.809299702 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808901489 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808521886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807696759 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808392279 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.810588592 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808843834 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.809129859 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807994417 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808450305 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808855783 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80975569 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.808521769 seconds)
  done (took 39.717975402 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.811302335 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.808883423 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.810669892 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.813161792 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809331183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.811996057 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.809626965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812938606 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.814094748 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810979798 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.814154372 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811284714 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.809845398 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.809916474 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80913847 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813511812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.812503276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.810259289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.812696376 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811796727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812990777 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.810854736 seconds)
  done (took 41.590507022 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.814563502 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.814709393 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.811550872 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.811454655 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.814315463 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.810804185 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.814332667 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.814467616 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.815424003 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.813229396 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.813612237 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.813661933 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.820332559 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.820303958 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.814643649 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.814960654 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.957741834 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.815607484 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.814973095 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.814482941 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.811593739 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.817545686 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.810849535 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.811952832 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.811374576 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.815160655 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.815070083 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.814083781 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.81552105 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.814825972 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.818656298 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.816063895 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.813477627 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.815642231 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.814774978 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.813828043 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.819737105 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.817590755 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.813566947 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.814727396 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.824295843 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.83699294 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.816549132 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.819370203 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.815391852 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.815758396 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.817717276 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.824021978 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.812922774 seconds)
  done (took 90.855471958 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.816686618 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.817056503 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.813805318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815213073 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.815931602 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.817245189 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.816178614 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816822449 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.81287488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.813458722 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.815700318 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.81608643 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813807357 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.815010193 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.816132707 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816007584 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813489313 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.813989471 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.814372093 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813750269 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.813021917 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.815569557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.81737559 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.813679965 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.815842202 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814814252 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.812784629 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.815812329 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.815950457 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.813494132 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.817201284 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819604006 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.818184494 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.814308046 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.815089617 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.821094158 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.817920272 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.8175747 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.817063544 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.814492816 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.816962868 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81918295 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.818027593 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.819497935 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.819609172 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.815118559 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816857414 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.816243952 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.817421749 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821977926 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.820301684 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.81616494 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822039561 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.821529748 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.816758177 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.820288056 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.816139502 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.817781469 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.818297259 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.817031147 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.815059033 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822950934 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.817281535 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.825893833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.819151978 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.818433541 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.821307279 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820336818 seconds)
  done (took 125.296237717 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82569279 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824687795 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823346006 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823168247 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82059641 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.824118234 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.821311466 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824508259 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823041974 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.822162428 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823111728 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821336435 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.82506474 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.820509715 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.822120516 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822258794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.821504877 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823169731 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821541116 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824268722 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.822066342 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820825804 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.822853402 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.821849473 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.824082924 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.822930262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823648775 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.822976216 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819854678 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.821295137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823883253 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.822412359 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821733708 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.820548592 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.820466977 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.821469375 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820965632 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821630687 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.829366516 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.823234525 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.823237344 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821457297 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824290493 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.823912163 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825749043 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.82729503 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824696205 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.824706099 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826447889 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824106489 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.822991897 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82516066 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829024034 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825290397 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.821980267 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.825604773 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823639752 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.827883804 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825038806 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827920395 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824334383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.82473216 seconds)
  done (took 114.806926703 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828893632 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827165428 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.823035734 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.824765314 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.823990649 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.823482713 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.824710604 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.824374279 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.824701456 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.824921807 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823405857 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821768115 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824473022 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825308496 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.821384985 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822197382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826388254 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.822664291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82526038 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.824512794 seconds)
  done (took 38.23811217 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.821273735 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.824694408 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.821218734 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820838881 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.824176739 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.822019721 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.825187249 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825840112 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823465021 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82590694 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825297994 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.826343238 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82850996 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.823325678 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.8257712 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824311806 seconds)
  done (took 30.9409957 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.824415599 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.823186362 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.82603103 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.824255412 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.82464196 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.825244235 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.826631619 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.823565643 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.823207551 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.824582629 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828336825 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.828733715 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.823737125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.821669117 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.819931071 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.82349425 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.820619234 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.823940776 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.823206165 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.823316711 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.822057954 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.821439345 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823836116 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.825289576 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.819687331 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.822154139 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.821604271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.819927386 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.823445084 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.82603248 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.81718303 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.820725198 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.820824149 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.818406028 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.821853473 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.825285211 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.823024659 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82158642 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.824180878 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.821865919 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.82045708 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.814951959 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.819253754 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.816204333 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.81930065 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.817369716 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.815447058 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.81385266 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.816539039 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.815013569 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.820570226 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.818401001 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.815263414 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.814552808 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.815696312 seconds)
  done (took 101.928851109 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819252062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.815673681 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.812581388 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.817116672 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.817749685 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.811688206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.815259969 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.812385018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813885148 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.815450338 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.816446164 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.816297965 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812701628 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.816166193 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814126436 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816524402 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811003557 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.813147553 seconds)
  done (took 34.411983874 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.81646932 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815924592 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.817896915 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.815602754 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.816792994 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816003814 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81642176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.816746251 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816296953 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.814855157 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813281927 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.820385754 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816843656 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.816368467 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812998539 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813954027 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.816071664 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818664286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.815287047 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81657852 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82010223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821668096 seconds)
  done (took 41.708192041 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.817542845 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.817273754 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.832566721 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.843262308 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.840330069 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.856187858 seconds)
  done (took 12.752699303 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816125876 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81873254 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81377529 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81740337 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816015533 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816121905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816363431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81789104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820271563 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815957534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816300126 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821257449 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819831368 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814742609 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819748547 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820145143 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817990546 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812801272 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812546347 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816072491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811708967 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815604789 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81469308 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811523682 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811976102 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812686678 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814639597 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815576823 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812599116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816989054 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818777429 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811524813 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818252562 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815575641 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815796653 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814617556 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814484086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815069065 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820829731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809535264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813819613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812650516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812712227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80989258 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813200343 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809815065 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810096407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808740983 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809785082 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81244766 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811782641 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809656083 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811039068 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811463671 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8112628 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813230008 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806597574 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806748754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810072837 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80654004 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806753425 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811029138 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806738127 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806022383 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809725975 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806063684 seconds)
  done (took 121.432828949 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807119794 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.806822917 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807905933 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807198733 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80807772 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807633627 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807200576 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807841339 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807361974 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807368178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810416762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807092893 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807811658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80691201 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80674479 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807655459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806645875 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807421163 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808740904 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810007536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807556106 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807232696 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808908919 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808000767 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807656861 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810055401 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807555106 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807777061 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807151986 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80703365 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807893174 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807518945 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808922399 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807170197 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807854203 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807630671 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808008209 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80721104 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8076562 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810038596 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808383386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809874001 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807306082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807494713 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80739291 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806237824 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806682007 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805589893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806019617 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807744842 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809043703 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806178997 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806337281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805624814 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806098747 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806435475 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807266779 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805626711 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806853503 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809079778 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805853027 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805388442 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810094427 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803239663 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806089379 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805233339 seconds)
  done (took 121.029466929 seconds)
done (took 2496.841664657 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.832414907 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.968162533 seconds)
  done (took 15.53328363 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.968128812 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.918155716 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.803648774 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.831393175 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.800323394 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.818542112 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.797476959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.800183107 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.802984004 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.801716765 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.803274478 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.991937167 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.801241125 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.800449786 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.800264124 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.897598803 seconds)
  done (took 51.17518712 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.802688647 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.803652187 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.817781944 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.807531213 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.80313622 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.821622976 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.836874945 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.807119912 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.866840573 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.81756817 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.925137987 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.814166594 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.803562464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.869073624 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.816634406 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.819383022 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.897233156 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.879631173 seconds)
  done (took 34.742050644 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.884366729 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.806263752 seconds)
  done (took 10.427044696 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.812847992 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.809255294 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.797998197 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.817353409 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.812751798 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.825273368 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.827125934 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.825963337 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.809888323 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.82671599 seconds)
  done (took 69.899575331 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.805189059 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.801036785 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.801962162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.797513026 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.788805639 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.792458556 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.796329204 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.793668721 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.468132801 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.834513603 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.802340778 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.800352247 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.797835292 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.799855174 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.794532404 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.81873826 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.896875741 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.79567441 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.795984738 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.802879176 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.795337733 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.850619456 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.807791714 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.803355726 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.829594225 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.467396225 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.803935171 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.80310653 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.884510964 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.796701484 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.798900703 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.800194784 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.800222792 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.14177015 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.113380285 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.792864687 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.810170771 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.80320589 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.790869957 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.890999771 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.797473816 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.798759333 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.447569215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.095129108 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.905007271 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.835402733 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.106417338 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.813938869 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.796171163 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.820352187 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.797574891 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.796863966 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.806552841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.279880234 seconds)
  done (took 128.196172051 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.787819077 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.142751265 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959088673 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.789589241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.080737642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00431866 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788212541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.839433114 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.795418869 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.02559799 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.047027024 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902397629 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.788432387 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.790770802 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.788324957 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.786420099 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952457422 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.865012876 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.792785742 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.7877284 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821672809 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039703288 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.919330088 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.793805823 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.819292396 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008695355 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.919138347 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.899311622 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.57057332 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.789510994 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.856625932 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.788862077 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.786248073 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.788577931 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.948984158 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.888446966 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882688465 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.790226464 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791457686 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788572603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.463528044 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.996424008 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.891070026 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935057326 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990622928 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003037669 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.577085618 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.786724834 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.53663036 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.958268675 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.026504863 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.028147766 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.917412561 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.793207183 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.121561473 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.788963708 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791160517 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045591503 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939201569 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.897975726 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791594651 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.791644304 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.787512532 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041109333 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.794909135 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890391776 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.792925775 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.789200393 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.891319477 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.894094951 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.932191848 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.009445016 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.826369656 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.750509174 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.327735159 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045232023 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.860322127 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046302115 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.791770454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789742856 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875757694 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.638617924 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050063445 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043868699 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.046795112 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831430541 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.523354755 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.787739412 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.022724607 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.01676224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.046736438 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999020086 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.037623586 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.127105661 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791040045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.790415886 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.013951859 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932251098 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790365825 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.142565799 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029533594 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.363591225 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.813009088 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105221148 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928325806 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.793004742 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.440093639 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.794373246 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018144315 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.836088855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.790955438 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794633263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.016415304 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.765965328 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792181965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.442599244 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.857019837 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.798436855 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028166958 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793549751 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058628759 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793342917 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.035302208 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.392469726 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825148304 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.972107852 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.996848427 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.796470174 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.046152558 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.040326217 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.910487377 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020302954 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.41983657 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.79309578 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089015622 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794958643 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.790584723 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.968181569 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.796810943 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.944366041 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.797885293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.085958743 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816417644 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038301309 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797867342 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.054760046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.832138486 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846132932 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.798666638 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924407184 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.795376147 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.728939783 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957362412 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794233144 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.794156244 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.351950209 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.794818692 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954479053 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.032432908 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820031899 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87314559 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.467913445 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79525116 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890272572 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822494279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.193153617 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.79470253 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.050772852 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.795638653 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.793565921 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.797869353 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.041388274 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.983090999 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.797489228 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791660632 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.694172126 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.79501139 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.793145338 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.982472369 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.119740706 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794801279 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002847553 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798977655 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92742744 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.798032655 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.873861485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.139146111 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795437811 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.795655664 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.797785259 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.797169433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.796022819 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010810233 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.827447249 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.334212116 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.93971218 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070011318 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.113724301 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.051462402 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.844687046 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.801505805 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064420953 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.799966145 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.862693351 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.801373082 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819917096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035697845 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802392202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065407267 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.082915686 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.844129691 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.845740439 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.802881359 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796727549 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.79514305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.94672941 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88665922 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.802019854 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.797610353 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918123148 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924644824 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011507192 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.800987092 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.830455811 seconds)
  done (took 885.803122411 seconds)
done (took 1197.510327899 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.799089011 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.800278943 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.786476241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795814783 seconds)
  done (took 28.914217696 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.807044896 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.802233727 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.805180235 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.801482962 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.803897824 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.803091228 seconds)
  done (took 12.55066707 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.901083295 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796175747 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.797876389 seconds)
  done (took 21.224886181 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.870349044 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.187166805 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.911260765 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.224063572 seconds)
  done (took 9.92371793 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.805784552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.804961787 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.805495168 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.808750996 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.805388421 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.81030144 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.806843488 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.806097716 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.808131847 seconds)
  done (took 17.992413398 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.218375922 seconds)
done (took 96.555117217 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.90774616 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.831169769 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.223433109 seconds)
    (4/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.865748366 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.463161394 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.893028542 seconds)
    (7/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.812454388 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.024747435 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.178004401 seconds)
    (10/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80042477 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.926780857 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.7999451 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.125037046 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.867157868 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.312456189 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.849581451 seconds)
    (17/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.818011371 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.825330082 seconds)
    (19/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.273524518 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.825709705 seconds)
    (21/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.799478959 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.205401542 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.921377469 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.822710192 seconds)
    (25/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.146816318 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.800202038 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.281132861 seconds)
    (28/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.784848939 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.199454451 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.0977618 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.854044563 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.800483745 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.100363024 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.728244664 seconds)
    (35/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.264350078 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.804067244 seconds)
    (37/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.912497509 seconds)
    (38/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.903962307 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.89166891 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.861773391 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.89149115 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.119640861 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.943358414 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.904085005 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.026810578 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.802767022 seconds)
    (47/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.784588978 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.334327402 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.220940272 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.477891917 seconds)
    (51/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.890097846 seconds)
    (52/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.902848052 seconds)
    (53/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.800750421 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.175502602 seconds)
    (55/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.556452215 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.953564025 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.053541462 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.786878868 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.111541474 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.115183573 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.698297919 seconds)
    (62/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.897511508 seconds)
    (63/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.80468123 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.419820479 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.843230146 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.977708484 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.865513424 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.053629311 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.80022903 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.802418912 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.216392356 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.802792622 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.89634064 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.787232524 seconds)
    (75/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.466143041 seconds)
    (76/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.016416581 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.823741266 seconds)
    (78/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.9869645 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.104088261 seconds)
    (80/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.453597178 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.783531236 seconds)
    (82/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.373587469 seconds)
    (83/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.255513497 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 5.502486719 seconds)
    (85/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.933547744 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.935880667 seconds)
    (87/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.835040793 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.900200805 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.458037216 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.876751653 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.091516127 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.904998205 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.788947238 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.87665579 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.919338445 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.896703428 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.999880353 seconds)
    (98/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.892282013 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.874501743 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.869690662 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.904013557 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.972500033 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.451161678 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.931478622 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.801236812 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.914076882 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.801813075 seconds)
    (108/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.907452595 seconds)
    (109/309) benchmarking ("sort", BigInt, false)...
    done (took 6.80414591 seconds)
    (110/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.237777016 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.933320408 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.154783421 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.191794695 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.805366617 seconds)
    (115/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.806524474 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.936817975 seconds)
    (117/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.886519214 seconds)
    (118/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.821662671 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.996280907 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.096784234 seconds)
    (121/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.150647756 seconds)
    (122/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.834873822 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.913156006 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.340455713 seconds)
    (125/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.370275327 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.919881201 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.805852223 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.124784611 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.29673109 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.082248604 seconds)
    (131/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.190525407 seconds)
    (132/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.034381099 seconds)
    (133/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.892436806 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.078284508 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 2.029049968 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.826937776 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.17786723 seconds)
    (138/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.731612298 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.732341528 seconds)
    (140/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.837423512 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.061715122 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.803860976 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.796668145 seconds)
    (144/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.986296397 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.783024626 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.027168416 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.061409857 seconds)
    (148/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.853124549 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.94475479 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.879406184 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.89984923 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.150471918 seconds)
    (153/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.04306925 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.503141589 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.833918845 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.791966303 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.033770645 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.794955198 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.12195471 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.834934426 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.206204634 seconds)
    (162/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.978122801 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.494974979 seconds)
    (164/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.951143897 seconds)
    (165/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.877061821 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.520979569 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.309308347 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.95533942 seconds)
    (169/309) benchmarking ("sort", Int8, false)...
    done (took 4.745659334 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.194243066 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.791010513 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.841034051 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.930391896 seconds)
    (174/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.89204988 seconds)
    (175/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.965403368 seconds)
    (176/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.150430777 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.876186229 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.23435781 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.825046739 seconds)
    (180/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.844317185 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.099069423 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.894931432 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.975258085 seconds)
    (184/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.8853745 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.148499953 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.720728199 seconds)
    (187/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.992551511 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.148715464 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.797297394 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.975970385 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.807304574 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.966451816 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.83427745 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.791326389 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.220491186 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.809147138 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.911811528 seconds)
    (198/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.902818044 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.845106584 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.906596996 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.43859143 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.813058281 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.847857905 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.810291258 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.83690827 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.027408678 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.794510633 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.902078479 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.185642645 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.876186494 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.635061041 seconds)
    (212/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.200063166 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.92970161 seconds)
    (214/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.900973278 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.974769185 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.747959678 seconds)
    (217/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.099316301 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.811370228 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240792792 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.529053631 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.012331436 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.053254608 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.951581699 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.913792195 seconds)
    (225/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.819563193 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.996910584 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.813895443 seconds)
    (228/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.919637425 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.832449671 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.813548524 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.763232528 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 5.54543093 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.856309935 seconds)
    (234/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.043214055 seconds)
    (235/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.798831473 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.726510383 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.801443215 seconds)
    (238/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.96884939 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.10486511 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.325146389 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.505211577 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.687586248 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.001228691 seconds)
    (244/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.054554886 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.814662852 seconds)
    (246/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.989474817 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.916812329 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.108726215 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.845525495 seconds)
    (250/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.877863874 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.796992823 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.369623547 seconds)
    (253/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.903179646 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.64224927 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.908642503 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.617026016 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.063098103 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.98731586 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.911472286 seconds)
    (260/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.800982583 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.586368907 seconds)
    (262/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.906595631 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.922358248 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.049083525 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.721896896 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.175256195 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.844349564 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.817981474 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.063515683 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.9897205 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.153217494 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.846593125 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.147551085 seconds)
    (274/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.844456313 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.876672695 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.95494224 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.838267098 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.831283866 seconds)
    (279/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.897043065 seconds)
    (280/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997133501 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.16600293 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.916674191 seconds)
    (283/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.097160634 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.799285953 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.347350391 seconds)
    (286/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.816069839 seconds)
    (287/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.402517084 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.00154153 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.92980945 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.798393112 seconds)
    (291/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.185469362 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.90377723 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.985861669 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.197898731 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.817075788 seconds)
    (296/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.65729106 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.538531141 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.255582157 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.898135346 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.847430253 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.926843037 seconds)
    (302/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.946086378 seconds)
    (303/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.849828607 seconds)
    (304/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.817067264 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.971797857 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.836079278 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.912999922 seconds)
    (308/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.816542416 seconds)
    (309/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.913366757 seconds)
  done (took 988.730339027 seconds)
done (took 990.522503569 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.073975948 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845147862 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.826288856 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.849655339 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.939857702 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.855330413 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.838403016 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.828164399 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.875145489 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.878764639 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.826794708 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.853546925 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.828975528 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.828615422 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.826690786 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839880678 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.138722763 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.851890149 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.844916448 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.837548872 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.842902862 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.827893422 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.878427286 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.853781143 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.833330264 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.832520725 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.831487305 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.847060644 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.939178621 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.832106991 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.83290384 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.839138099 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.138294099 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.847660958 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.824207862 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.846797883 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.841059198 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.84029317 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.835265368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.859662121 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.227989543 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.8589861 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.830835234 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.830511315 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.830626319 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.831726071 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.831927577 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.836610972 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842411525 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842816388 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.225988016 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.872376488 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.832198878 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.833266914 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.845905851 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.829829635 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.83424195 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.846526621 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.850054675 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.847262329 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.129658012 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.857474825 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.83391001 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.845633962 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.839616181 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.263249657 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.855843158 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.83560008 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.225827293 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.867671083 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.260406004 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.869032051 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.83457394 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.844897493 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.863199032 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.140173048 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.848854528 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.83107416 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.842721367 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.83109133 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.842896152 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843850915 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.836521847 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.83193735 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.84605177 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.860292644 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.842018685 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.833768185 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.842521512 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.850551671 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.841305148 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.842487194 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.838187579 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.827785732 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.841280352 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.835906174 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.837783667 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.837551482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.838470821 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.843728641 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.222997674 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.87756215 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.828763138 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.833985386 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.832542288 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.845776645 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.224224692 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.864340568 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.856828756 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.879087792 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.834259054 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.130620727 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.858978774 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.848579885 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.842957175 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.836900292 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.82820291 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.130144502 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.252352051 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.87944435 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.835831994 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.8317249 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.850429445 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.838224725 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.832623265 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.142012833 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.857386356 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.847562286 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.954916321 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.846227956 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.865134483 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.831966638 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.839337934 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.863394044 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848713481 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.867691828 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.838708399 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848123204 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.850283899 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.833468282 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.846007918 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.844637327 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.834526698 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.840545992 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.83152619 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.864941484 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8454857 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845821201 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.856095838 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.956692667 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.832652761 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.134086985 seconds)
done (took 289.478549478 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.900984923 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.825873195 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.930103557 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.830547089 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.916529525 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.917206567 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.82894778 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.83050951 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.829421816 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.208039907 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.831789316 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.83158582 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.82887588 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.830446536 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.915224718 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.833402357 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.830513602 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.170802255 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.83466523 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.901855926 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.832460328 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.829871838 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.832596195 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.205618831 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.829263455 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.82860705 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.903291199 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.834025861 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.169134615 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.826938763 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.827563506 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.169098737 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.927119292 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.852230814 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.84275821 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.839667498 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.91258386 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.835800366 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.913774286 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.913269674 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.931797815 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.871434253 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.829559593 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.831379613 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.834977481 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.83505792 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.83219648 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.860536442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.824004972 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.840169173 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.172610965 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.835550148 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.839262477 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.830460064 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.833190484 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.86476361 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.831663253 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.834965722 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.923589616 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.838649718 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.894087825 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.206425215 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.206349377 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.833303679 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.833066474 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.830314276 seconds)
  done (took 181.80900682 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.899638988 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.905766474 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.897280781 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.834501059 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.879848454 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900086039 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.834622727 seconds)
  done (took 14.908722116 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.840868936 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.833464651 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.885475588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.887401317 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.833386692 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.983883511 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.83486746 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.846630579 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.83366338 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.887448458 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.835169354 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.835778638 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.841779571 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.838318824 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.883859936 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.845177427 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.955273969 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.836651224 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.837275042 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.987057709 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.833441888 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.844458469 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.888024832 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.847035866 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.836098324 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.841124827 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.426680295 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835666398 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.83265492 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.835856916 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834136494 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.875314009 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.837664185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.836243073 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.835556097 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.952424306 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.838958238 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.833293278 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.83617567 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.83342929 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.836208407 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.836016813 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.838595909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.834742475 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.836284831 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.859765176 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.838226768 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.836897372 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.835821431 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.839093 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.885793558 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.837742351 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.832940195 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.835960122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.89178044 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845291387 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.839909061 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.837137747 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.840852257 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834919427 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.988470334 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886808719 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.840791205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887078856 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838961063 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.838241348 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.838758578 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.839674413 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.935153105 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.837639115 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.887511854 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.834949658 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.996347608 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.860670415 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.839334305 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.84310479 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.840134321 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839842371 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835496448 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.843918716 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.837198807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.83975806 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.843821934 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835499698 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.836211534 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.952033582 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944694555 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.83865226 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.850378922 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.845754552 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.83749799 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.894760921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.840024372 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.838124699 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896230542 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.959714915 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.895221753 seconds)
  done (took 202.671696968 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.846980595 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.847871083 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.841098841 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.855491353 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.839621001 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.83974241 seconds)
  done (took 12.832851768 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.841744663 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.840576804 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.841408501 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.841931834 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.840725892 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.842864637 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.843590766 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.841209012 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.843870806 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.841338877 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.840634352 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.843631169 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.842080437 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.840646899 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.841452646 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.8400761 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.841356122 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.837271373 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.840002118 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.840687069 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.998007912 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.840471791 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84305856 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.840927809 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.848315599 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.840583206 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.848163888 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.839988683 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.839724119 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.848178805 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.844696234 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.840725338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.840464351 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.845087453 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.845391443 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.844007094 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843814906 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.843463921 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.838437012 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.841490281 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.843801582 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.842086394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.841634343 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.842229946 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.842896887 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.84676686 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.848508088 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.847664847 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.842999451 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.842595065 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.844196512 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.842289465 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.842750455 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.842486471 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.844188457 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845803376 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.846622017 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.843942861 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.842515599 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.842085032 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.843515342 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.842964249 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.84394032 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.846172311 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838489799 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.84520174 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.841907089 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.846377098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844047135 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.842514754 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.843640718 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.840426952 seconds)
  done (took 135.606085342 seconds)
done (took 549.595708448 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.996228478 seconds)
  done (took 8.761388553 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.885606177 seconds)
  done (took 8.69457343 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.163767562 seconds)
  done (took 9.944345911 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.867462898 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.86173355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.850446001 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.851452723 seconds)
  done (took 29.224719511 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.959619076 seconds)
  done (took 8.73369258 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.864102072 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.843839771 seconds)
  done (took 15.516940482 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.921761275 seconds)
  done (took 8.706109361 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.947496047 seconds)
  done (took 8.745763738 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.84838462 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.868064731 seconds)
  done (took 15.49976006 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.823418114 seconds)
  done (took 8.594480497 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.431066134 seconds)
  done (took 11.298455629 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.851258077 seconds)
  done (took 8.725360775 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.882569838 seconds)
  done (took 8.653659508 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.857415633 seconds)
  done (took 9.628986556 seconds)
done (took 162.492498093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.858415702 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.840900832 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.842015063 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.837800372 seconds)
  done (took 29.14901475 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.881898951 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.881337582 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.883619319 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.891588966 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.884073374 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.881503951 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.872636281 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.874469912 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.892822104 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.883155887 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.882193317 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.884589615 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.881005494 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.87446768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.883405089 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.884802652 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.893776398 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.883003415 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.874146942 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.884754509 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.849474722 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.895280567 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.883883122 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.848672832 seconds)
  done (took 46.903041196 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.046399005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.919058479 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.004825766 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.902519057 seconds)
  done (took 9.644227375 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.901835206 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.902646098 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.913392587 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.952802563 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.975473207 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.910834914 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.876447793 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.869578983 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.856400366 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.90366435 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.977927257 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.899275174 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.99637678 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.849488716 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.037303358 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.848509392 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.848792447 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.90163647 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.954263982 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.974899241 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.84904436 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.902712786 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.904830351 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.8982541 seconds)
  done (took 47.678575276 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.848719572 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.859387326 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.855880949 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.849004487 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.849077733 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.850521881 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.855223588 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.851107451 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.870815902 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.850248895 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.847484755 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.848933534 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.848843346 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.849552136 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.848080792 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.86059986 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.863411583 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.848892768 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.852454726 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.855503131 seconds)
  done (took 38.836802729 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.842599219 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.697317371 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.194073493 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.098411439 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.840639065 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.843711584 seconds)
  done (took 31.292039394 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.861580293 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.855273722 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.848633375 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.903902732 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.981914718 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.852751585 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.849761899 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.860779152 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.894343126 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.908205221 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.866671907 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.877580121 seconds)
  done (took 24.337632141 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.846150395 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.860361925 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.841911371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.877884252 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.859883349 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.854892225 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.857241392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.843289158 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.862086471 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.865873079 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.855417123 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861230192 seconds)
  done (took 44.064488502 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935719757 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.734736731 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.910842401 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573118739 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383196754 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056680171 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371207536 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185551402 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.852443425 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119972738 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.847847813 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08840798 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104243699 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851419629 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845892554 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.297162116 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144856352 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085568791 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873520682 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566118744 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967150071 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257551301 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.599292319 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.974821366 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05916572 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.981732393 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.105586013 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.805254408 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986585758 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883671702 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856382195 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847556698 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123937098 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229170066 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962127791 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860434705 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504176363 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.564122551 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.83491067 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.551724567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.656399927 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.981114933 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858080644 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848479105 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783897473 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253889545 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191005743 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.854869397 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.552246053 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848977368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859875264 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938506454 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.851311467 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.665152324 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801795991 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.127583526 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.845980751 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854711345 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418499105 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893474122 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356035004 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.78810604 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.942656798 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.583260615 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320110957 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.001143389 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.85340761 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853809494 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784370832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.489355739 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973269001 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996268584 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.868707775 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50091889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153393469 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.888602309 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925232671 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149001256 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.532031103 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.788404288 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078564763 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.800908023 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784926545 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.706896636 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78919996 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122584913 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891162097 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.485194734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895428862 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.187292244 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.863575092 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871696899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858733042 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07658678 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.733414443 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851722307 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.595727935 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132932219 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871742597 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189322874 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788090554 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.854387002 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106260122 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.063743572 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.979400853 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.301184649 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012098422 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855305976 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.937032226 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.662002934 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864429292 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.133582595 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913257548 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895353512 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97977482 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.815432791 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166666999 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879390986 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.024674818 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.830921572 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112095857 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.180720905 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10713594 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934941797 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.862359751 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855642429 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.525659024 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477403876 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.07881587 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.856018339 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252141579 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.865330089 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.856750583 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789908255 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.520870377 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.818438361 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.96103585 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077589183 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.703591516 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130076006 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788160926 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00020467 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.968466864 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.076148927 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.507521428 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.93650385 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115166535 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228089775 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.976044812 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867494314 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873819274 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9490343 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878738177 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.168631735 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.111971163 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.857488165 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.859882137 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.577412383 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.933960369 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854008837 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.862920503 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682481458 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140752163 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880594555 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.861181282 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.746504888 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.870712955 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924657128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.861575465 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867088613 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359121974 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.605914565 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.864689567 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.602875378 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11095788 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865956523 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.580282858 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050416222 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.940073725 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137012846 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916706086 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.792903062 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.561957506 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.55981274 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859533319 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794842458 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859443689 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869025551 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869224208 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.058056 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.142302187 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903276387 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.578479704 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.972750913 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868454975 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.864402923 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858428561 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.358435447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.918443078 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36577774 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.868242451 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994745043 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.872533098 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794541303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.86207724 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86418367 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858972068 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.81124479 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911422504 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.502474192 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313866612 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12023233 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.507530239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874670143 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.605691988 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.987845843 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.881150287 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589386637 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.716115972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.972782421 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938520906 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.868885345 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.578621703 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.623628223 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423769742 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179105556 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172014384 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303216431 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.123315972 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.183675827 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199867747 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098278825 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388589697 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920103286 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202209776 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805690271 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946775343 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.513872134 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216514828 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874133974 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088967652 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253448315 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.655390663 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018694601 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072898832 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893191301 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.556126814 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.87933917 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.097463182 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015669651 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.574262777 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08579793 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195513392 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620113669 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.974545475 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.862257579 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580492132 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951661372 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.574165438 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.223311287 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.282422061 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868085836 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349996643 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870610734 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30858409 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22020036 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.065575386 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.953360381 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800577367 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873106921 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872398868 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.86514997 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.849118964 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.811105441 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.159911206 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873594316 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099936848 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.01532978 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134262817 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.771925191 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.868522385 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862659368 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172143708 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44681724 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08732856 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.089223245 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.450592498 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879052389 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799666137 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795878106 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.564777303 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864084209 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.838074653 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0861795 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.97535675 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.81564546 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.148029863 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159120809 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118993889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.875962288 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141723303 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140334356 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.60048279 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890795467 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.963705449 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.590821734 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.560825227 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.089144117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103212634 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694469921 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095473412 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922080665 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.836785828 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.864993159 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077558299 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.090220931 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.848903508 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115962229 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.588292713 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.877142887 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254434724 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924031689 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.853042985 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.078037832 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.956715042 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873371571 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94532642 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875269306 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.875680957 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.878424947 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914291065 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.84398653 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.003570926 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.880840963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958310411 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933021692 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.483087142 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.88382947 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147451628 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231964895 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198951347 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.927284298 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.865923868 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869717726 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802919791 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004026188 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.312391093 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142986294 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998522477 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.007050604 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89316371 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.621254765 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067903435 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163363394 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140390254 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.763685722 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783751181 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96288103 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.093604593 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879226622 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.078115021 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100650827 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193449554 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337743892 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.887730437 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.290443759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145092355 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.237209899 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867436682 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459493815 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.875789678 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.651735653 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.913790135 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829096349 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151868216 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879166107 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253935978 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889319569 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.06910922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.383681606 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598314816 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233057772 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.875165488 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937007773 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149692301 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260488822 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185821593 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934307193 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880040252 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.574518876 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00634416 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.850180345 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.14220659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868392193 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080301342 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.580074411 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.878216498 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153059529 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181414404 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.864357099 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.849005348 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938914532 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.87952096 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.095067758 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141332771 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.125782069 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876763638 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870796514 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.686878365 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149234839 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929671609 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806630402 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.873155948 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969766988 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117184761 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889865074 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.388978558 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.57474363 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17802342 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.791969321 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890884932 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.174934784 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297208135 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201535427 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420055283 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109525375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430739281 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.626865183 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228895782 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.876106269 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.169189618 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233253506 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.874000273 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.268931074 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967132708 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.142807911 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193867242 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.883923136 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576402246 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.912631389 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095796124 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468454048 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813571292 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877775307 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.930909166 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872319118 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.004855304 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880748019 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.868918468 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.635356486 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.692891114 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366349502 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.877844929 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.865274218 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.60632342 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314213099 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962836768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03005889 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876189604 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.584714469 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.164254557 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129918549 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278947678 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.927512471 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.878556601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87561843 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800764974 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071222057 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.069975982 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1706824 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.103542808 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.968369049 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.87964509 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.088088129 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08531118 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.815717642 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022156591 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151147168 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968696626 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.79488439 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.591652161 seconds)
  done (took 1677.324841428 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894078077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.218695294 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.897376188 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.920958187 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.911395177 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888598312 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.938189099 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965463399 seconds)
  done (took 57.439238375 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.881687645 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.112329229 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.893659637 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.886818362 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.916258317 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.886485767 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.132870478 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.892774506 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.903645822 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.890744321 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.883410539 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.894869893 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.260442801 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911207482 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.884871085 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.887887933 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.902684778 seconds)
  done (took 74.840364331 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.884200624 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.237154297 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.92358881 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.901076014 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.760298772 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.895555601 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.893391322 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.929181379 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.887342164 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.058428524 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.219344782 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.901705347 seconds)
  done (took 90.302178552 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.898842432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.891153326 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.891379751 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.891087914 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.890498793 seconds)
  done (took 11.282412828 seconds)
done (took 2184.949647397 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.130524346 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.111355405 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.116830136 seconds)
  done (took 6.039426297 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.034328302 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.083648961 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.202987201 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.208932723 seconds)
  done (took 10.348853562 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.173811486 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.263987085 seconds)
  done (took 6.249848152 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.215286273 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.906457213 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.27032451 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.886168436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.88836437 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.884516114 seconds)
  done (took 22.47718342 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.891027745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89608809 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.890999464 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.892619975 seconds)
  done (took 9.384841514 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.868920774 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.623076822 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.872581804 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.884601752 seconds)
  done (took 21.063925538 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.639670151 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.28683228 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.632042604 seconds)
  done (took 9.373547444 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.350590862 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.091739102 seconds)
  done (took 9.257070719 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.149954797 seconds)
  done (took 3.963904243 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.918287802 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.160355356 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.409525611 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.413214283 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.506338172 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.713587876 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.214725838 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.125793485 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.333018871 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.350264547 seconds)
  done (took 24.961772302 seconds)
done (took 138.45370442 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.311424158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.911190905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.09252196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.251271847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.164567285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.09122168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.10506888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.239793616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.775941719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.765328265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.245129945 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.119345743 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.051499922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900410844 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.057404169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.902540753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.11381604 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.331176981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.969787036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.173203924 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.115715541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.895163769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.089663722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.916206029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.115424064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.035962538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.438610901 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.907215848 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.111769261 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.454416619 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.041034681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.310184793 seconds)
  done (took 168.820054667 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.888417984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.88629523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.888794914 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886622124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.203230374 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887790166 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.889008373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888725471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.967236335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.949141685 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.895750755 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.229171081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.897908527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887625954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.904024272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887456838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.150787266 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.902615401 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905077681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.906096574 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.907909982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.090060472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.907068643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.136223364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.13650868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.905592631 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.88947445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909268535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.910594947 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.910870205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.912239806 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.888317316 seconds)
  done (took 208.225593616 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.888740039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.888895814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.894652113 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886715085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.893566617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.901745416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890672865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.890152165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410965816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454282861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.905122873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.901480903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.902064557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.890574767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.90645204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888472012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.905568507 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.905235444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.905889188 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.898716912 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904332113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.555707229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904843012 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.565599162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.902592742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.903762362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887851669 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906011042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.909375972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905445446 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908399798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.890793604 seconds)
  done (took 220.999944369 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.083682801 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.897517082 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.899724993 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.89694585 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.899498033 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.898459906 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.905456085 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080371157 seconds)
  done (took 19.4048762 seconds)
done (took 619.273203099 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.374596165 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.216538767 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.079576368 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.92586857 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.184499018 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.959120397 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.921658784 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.9858506 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.64824462 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.993974606 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.571440027 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.941246003 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.6561784 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.946029935 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.047730281 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.979104356 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.470113363 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.559986427 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.10363721 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.992656641 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.095451646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.858790195 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.001999207 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.681858742 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.675572382 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.906765558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.085590663 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.475752341 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.933740369 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.084855726 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.691834202 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.323313408 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.931842124 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.917681799 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.971130882 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.952722767 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.253880954 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.931849858 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.04384455 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668114137 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.010856897 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.526660366 seconds)
  done (took 104.402461749 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.889261496 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.888887865 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.884663895 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.887183394 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.887351276 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.886721064 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.884624105 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.885928406 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.886375379 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.885402155 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.882532802 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.886844707 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.885252557 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.884907225 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.884298232 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.883796841 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.884156071 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.89001142 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.881635553 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.882019294 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.882238171 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.88460073 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.90418885 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.876872393 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.879871746 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.880015481 seconds)
  done (took 50.853258212 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.895004838 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.062253124 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.144573461 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916119603 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.894551144 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.897472044 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.916735876 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.898578105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.896517897 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.894836256 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.003106788 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.902386694 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912280592 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.133562592 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.913229026 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.893940071 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.895857032 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.891701742 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.066512676 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.911235937 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911244779 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.901098067 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.912421653 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.907555007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.892320118 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.892598499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.896649756 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.353707035 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.900224557 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.997417042 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.933548028 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.914246402 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.32773772 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.145709655 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.948179122 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899639832 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.89616074 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999114114 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.898406617 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.890908376 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.909834284 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.896130989 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.13870755 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.39586595 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.90594067 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.888331676 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.362747337 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.009550887 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.926569191 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.896438945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.135898287 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.915505142 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.885895964 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.885445682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.920681564 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.889176647 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.885383988 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.24118098 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.897593686 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.902446327 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.891387362 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.88524229 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.062719871 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.891685328 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.048555252 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.891504629 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.888797949 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.881996484 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.12659047 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903010252 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.390376768 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.899453451 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.884145349 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986565447 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.052858623 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.381182127 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.896373001 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.059103249 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.333747929 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.906362342 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.889208457 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.332242847 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.910681499 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.888655006 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.879057344 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.877912301 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.880070026 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.921547518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.893992038 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.321530567 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.389327696 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.253930449 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.909409565 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.895548327 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.876004246 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230993748 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.89124592 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.87910379 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.115665127 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.393018266 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.89734584 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.883067409 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.372263431 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.894914349 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.896371165 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.888528887 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.125283183 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.897980323 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.921334248 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.876688468 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.883854049 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.881910593 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.898785296 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.888265704 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.880090578 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.360477612 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.011020922 seconds)
  done (took 234.418517971 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.869662643 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.902407199 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.868221131 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.869068849 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.86319057 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.867450404 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.861117374 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.861120702 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.866606667 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.859708374 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.861294408 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.860943381 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.862278309 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.865860744 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.506938742 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.868381847 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.470952817 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.863040633 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.859953449 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.867492353 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.649582017 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.864888208 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.858776108 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.854940674 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.856461767 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.856738109 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.928207927 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.871478129 seconds)
  done (took 168.121020374 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.861685498 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.045240621 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.876340964 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.899410134 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.866922387 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.85776425 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.877861011 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.877373332 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.862915144 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.851628132 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.854962706 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.913774953 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.864223226 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.98659405 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.884624082 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.884355778 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.954043545 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.861422613 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.851414792 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.85044804 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.881791225 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.847096785 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.911224103 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.979305616 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.870612892 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.968589934 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.859852694 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.851495999 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.849608062 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.968482335 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.86348023 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.916415472 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.87501799 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.864809916 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.969198419 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.963127789 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.955243105 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.871790163 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.846994819 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.842166831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.842138977 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.829716693 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.959962363 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.862200904 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.843067142 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.948473081 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.860257481 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.841883097 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.848687534 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.838398536 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.851459401 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.857082713 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.906722228 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.969314976 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.872530545 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.860978178 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.86056541 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.118912628 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.845665095 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936034544 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.826223808 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.951869576 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.85778825 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.827778094 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.836671242 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.83942378 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.862296026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.863863091 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.939755847 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.840618656 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.929308367 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.868020846 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.838182757 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.830586063 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.834935275 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950045059 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.947944249 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.865203131 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.868323078 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.863794474 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.823979384 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.826435406 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.813012216 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.843125729 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.837578667 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940591678 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.944607846 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.833842091 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.828526687 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.829034422 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.827800653 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.846662237 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.947318512 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.859137013 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.918996147 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.893763946 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.895673274 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.840314937 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.832689054 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.826122891 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.885768406 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.83795177 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.832229911 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.149793232 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.894972955 seconds)
  done (took 199.534439474 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.280995492 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.876817226 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.879101545 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.138412317 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.255326486 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.681544464 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.872247741 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.871477241 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.893002922 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.062203938 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.943025867 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.892250184 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.857764043 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.844764302 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.869410415 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.893376717 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.877940356 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.187468343 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.993169463 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.999280651 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.855919007 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.178641734 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.193393509 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.260869448 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.909212908 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.212604582 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.544426132 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.017722945 seconds)
  done (took 60.097646594 seconds)
done (took 819.246769716 seconds)
SAVING RESULT...
DONE!
