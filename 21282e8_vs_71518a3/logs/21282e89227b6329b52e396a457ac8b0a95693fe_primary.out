cset: moving following pidspec: 10082
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.337947764 seconds)
loading group "string"... done (took 0.55721222 seconds)
loading group "linalg"... done (took 7.587099182 seconds)
loading group "parallel"... done (took 0.16771204 seconds)
loading group "find"... done (took 1.266221489 seconds)
loading group "tuple"... done (took 1.926485389 seconds)
loading group "dates"... done (took 1.39973764 seconds)
loading group "micro"... done (took 0.241932646 seconds)
loading group "io"... done (took 0.971142522 seconds)
loading group "scalar"... done (took 40.590214106 seconds)
loading group "sparse"... done (took 13.350629141 seconds)
loading group "broadcast"... done (took 1.038553811 seconds)
loading group "union"... done (took 14.216837634 seconds)
loading group "simd"... done (took 4.761016194 seconds)
loading group "random"... done (took 9.637118596 seconds)
loading group "problem"... done (took 1.98490188 seconds)
loading group "array"... done (took 22.612674601 seconds)
loading group "misc"... done (took 2.032258188 seconds)
loading group "sort"... done (took 3.439125312 seconds)
loading group "collection"... done (took 19.509377322 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.571688876 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142101084 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148630413 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130175775 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203555929 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15551294 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158217452 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098170409 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960689114 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174306998 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152795299 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522293158 seconds)
done (took 5.147835502 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217441364 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093948817 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103589661 seconds)
  done (took 0.873866037 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077164892 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145231634 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093946382 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078412623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094076036 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0783345 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093910116 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076981252 seconds)
  done (took 1.34358126 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086931536 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096998685 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081985035 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095542664 seconds)
  done (took 1.04582609 seconds)
done (took 4.247462542 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.729372344 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270448397 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204060953 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460160091 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194358858 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214297206 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682424195 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348106626 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253383462 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098623155 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133560426 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383891714 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136349801 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681026827 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089085997 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12288011 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176200707 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454283461 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081529621 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109778978 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115524891 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142305006 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.12695113 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090097171 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182994717 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081558272 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192348729 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106407367 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079792952 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273972382 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199462057 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688668385 seconds)
  done (took 10.824674113 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10990312 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132427207 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096065301 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13833014 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133529331 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098358784 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083641016 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095878127 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120752384 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17545726 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128851012 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121183731 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094111312 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082324312 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114709849 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244611621 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120008119 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098950752 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099881988 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087499497 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136529762 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112374486 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107135461 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093027092 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16478441 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221099171 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110829154 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124907729 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096140331 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111789062 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142621509 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142140407 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093658804 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080057612 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17213201 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123658716 seconds)
  done (took 5.107532845 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.079806853 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188864212 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120696244 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169746371 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154571598 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0793645 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14184091 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095453235 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114249826 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253951699 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.112042064 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082711198 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.480460174 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140937754 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11367676 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096156283 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08340403 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096158963 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.596409907 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12216744 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144718297 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114181591 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105234501 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083272826 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362612024 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094576251 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079449584 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096966158 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06580509 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15967821 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09712025 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.125945276 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09933624 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100827654 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131850756 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198541612 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093938005 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10552988 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13256174 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095892011 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077717686 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172455225 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10380792 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094525688 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102383513 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134026796 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133496255 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095761692 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08055129 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.199347486 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095414532 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111739283 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.916702593 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179534688 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089075185 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094507345 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286804935 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116178419 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095701104 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078966866 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268688366 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188181029 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097065602 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0787419 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095896865 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074810756 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097500046 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38885599 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095559252 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.694178231 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084100342 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.104977622 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081658657 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096040756 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10237974 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087116523 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114523229 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078142922 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097916677 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077578089 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096580511 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080000266 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107866296 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212196352 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097630469 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078167078 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095478105 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114557319 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1106859 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098374266 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094817966 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114815205 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098175562 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.095475248 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115673984 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098646703 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104933049 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082533793 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142967062 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096465528 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.131184998 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094517045 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121846432 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098476772 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113781696 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109783544 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098040332 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166402529 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077791608 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094572175 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07981585 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095266355 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079701054 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098858301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10734707 seconds)
  done (took 22.534149571 seconds)
done (took 40.227151867 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321305865 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102296858 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10206294 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101430562 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100227351 seconds)
  done (took 1.485455465 seconds)
done (took 2.215066215 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284482271 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17281467 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096868068 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164741559 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091742024 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.163090162 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157565903 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092981794 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216464986 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093569912 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159200381 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075052147 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094044663 seconds)
  done (took 2.618300782 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093509797 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11319144 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082641352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109277006 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075806148 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109567251 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091810843 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115089315 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107879972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084527001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092470088 seconds)
  done (took 1.801934058 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093831296 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112421305 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082428502 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10927602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075795697 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109444444 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092356201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116268743 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109646254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086403495 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093039822 seconds)
  done (took 1.804325711 seconds)
done (took 6.941896078 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090703903 seconds)
  done (took 0.812056212 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.932118799 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.359554824 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111586451 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147326024 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.311508799 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.168501284 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.446505946 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12252912 seconds)
  done (took 10.528445144 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.143227587 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083997025 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102953313 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086396677 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103208874 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085046206 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100436081 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100410937 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083731507 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.1019983 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082966872 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099124074 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09876332 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082618996 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101910789 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082512422 seconds)
  done (took 2.329950881 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118301538 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117008423 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106189245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108098573 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086061034 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104943546 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106187286 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088551897 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101966049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102819443 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089875837 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104924769 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103037282 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079339562 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106654338 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106900653 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085488906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107101941 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106795323 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088985581 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106117642 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094971081 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086716468 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10570898 seconds)
  done (took 3.250139179 seconds)
done (took 17.646245065 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.15978353 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108866485 seconds)
  done (took 1.000063457 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095721007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112655904 seconds)
  done (took 0.943470416 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096753486 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095113135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121927313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109926085 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080377889 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095720659 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118748499 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080116398 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095627266 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079459857 seconds)
  done (took 1.712742764 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083234823 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109434339 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100632189 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095199962 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105380004 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094057012 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088432976 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098273359 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109195498 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078013891 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101624736 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113585955 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085606484 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116771941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104155796 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083328402 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102744156 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098845349 seconds)
  done (took 2.508919317 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080208915 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096949556 seconds)
  done (took 0.917535346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081591306 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093073239 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081522702 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097443417 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093852316 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077171508 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093336889 seconds)
  done (took 1.35769573 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482476991 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135431788 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258300372 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100843873 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103066392 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300484532 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097795276 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084555724 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103105528 seconds)
  done (took 2.463857165 seconds)
done (took 11.639385807 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094031317 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11474746 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111716568 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.463708902 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107622486 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098060328 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147164643 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249031717 seconds)
done (took 2.132264607 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142863062 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.598883603 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.424800283 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230702332 seconds)
  done (took 2.001075243 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403602642 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098304784 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08309462 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081181743 seconds)
  done (took 1.415216417 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080209217 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099361751 seconds)
  done (took 0.92915859 seconds)
done (took 5.240949293 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081465673 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131037033 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079791551 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09669578 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077725264 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098733594 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076577089 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097196033 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077377461 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097826536 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095973906 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.080670017 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095700982 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081619033 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093767629 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078775967 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095284907 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077724653 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093052185 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080668528 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0931246 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080535209 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093925939 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077606155 seconds)
  done (took 2.915774837 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100236006 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097795135 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102889662 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086218482 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101446105 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08711281 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102651363 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095970135 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08677795 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100093423 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101746758 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08559668 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098915345 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084287682 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100309975 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10086021 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086194566 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097925744 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082690204 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10176502 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10200509 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082072759 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10137075 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102135766 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084487668 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101180764 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083151376 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098030312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10195427 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084653059 seconds)
  done (took 3.593747894 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08544291 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09343464 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079198627 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101091386 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078233111 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096127425 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07709987 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095277395 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079141784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095110242 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079856847 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094625293 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077829261 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09720742 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078341957 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099689237 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111565599 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079241313 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094289832 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079091011 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097690784 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077773485 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094682993 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077746981 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094380667 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077617632 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094656138 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078170825 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096051817 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078356266 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098482435 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081143768 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095154197 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083672395 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099282297 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076891259 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098560195 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076921787 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096129542 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094135995 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077887781 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093750038 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078698052 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100848777 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078835138 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096220581 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078965772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095664237 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079615366 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09897115 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077542721 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094374687 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079972419 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096036568 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081358581 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094893366 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095342093 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078278577 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095307587 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079041748 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093810437 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078853156 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096810059 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079549316 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110207026 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084651947 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094517546 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079946439 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096818865 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080188196 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098623869 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108805766 seconds)
  done (took 7.151602062 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102572781 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124970564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.097988203 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096786467 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076939544 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09525519 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082401778 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095455553 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080010792 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102367055 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094671799 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08035688 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096402624 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093773329 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096025495 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079928792 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102645295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092965293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07898929 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098386338 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080221922 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098562168 seconds)
  done (took 2.804915287 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208135551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105286354 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141900989 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106438579 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083843388 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105545154 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101517658 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08843633 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101285399 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082567863 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100290175 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.210507292 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083607239 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099901425 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09965273 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0849541 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102205207 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084596703 seconds)
  done (took 2.752442801 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09308775 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097606916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097143296 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098285951 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09761816 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083655381 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104007357 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106512192 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083888713 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097443928 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090217038 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101329518 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100617581 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082530332 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099924456 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081302082 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101780474 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080736078 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108015355 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102933216 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086308533 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108528773 seconds)
  done (took 2.869012201 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097037728 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099758482 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11719954 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084032211 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094526775 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08012798 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105141464 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08037172 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107750298 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098419796 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081523059 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096610157 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087874475 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098026295 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103261895 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081821717 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100317415 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081775088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100237457 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076719414 seconds)
  done (took 2.638809709 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10171016 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099977875 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0990963 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091425916 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099493558 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081165914 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109756721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099405738 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081432781 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124543959 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09896429 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081581128 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109320928 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105916656 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099058365 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091861752 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10903444 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108791127 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08233458 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099716038 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123703661 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081945031 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108758299 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099129639 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082205828 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10008245 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099366877 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088955526 seconds)
  done (took 3.527898484 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081675879 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097556645 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081600651 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095925155 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079740028 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095416294 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0792597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.0956926 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081583648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095316934 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08164012 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097530007 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081503724 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098429894 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081092453 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098350854 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081124023 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095378082 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079366509 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094831882 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081172254 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098470836 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0802598 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096073605 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078274992 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09914859 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078271212 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096424246 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080484901 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096347055 seconds)
  done (took 3.428693764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09097414 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106251202 seconds)
  done (took 0.96726869 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079112697 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113973738 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078957739 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102588285 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085445697 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100079827 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107250474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085847713 seconds)
  done (took 1.523718162 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097398971 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109283688 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082339269 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112602065 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108651033 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097823853 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169647194 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101982195 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104596688 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080687841 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112050926 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080823076 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105118165 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08128033 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105796254 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087851142 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096739608 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105249185 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085243871 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097192603 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086488019 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108186019 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083226037 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096647484 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099867495 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091909489 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111780249 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081978662 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103323322 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105312138 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087620979 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093612017 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081562231 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099952392 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079597159 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108891651 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115614802 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085008555 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108949471 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099476225 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09431667 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094362596 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087498125 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105378349 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109417395 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0835653 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100599814 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077038921 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096738026 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084351435 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094481961 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081838331 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094201004 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088201523 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103393641 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110375773 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081853521 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101190681 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084784994 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104109586 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088638629 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102139353 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101524413 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082398091 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106535893 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085929197 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110163423 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094995549 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077631025 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096548598 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093186602 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123323427 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105757101 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083793313 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100805048 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08087873 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102629578 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083470682 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106366706 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105838801 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082805158 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106414653 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088797676 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100396716 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10165914 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090916883 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097442435 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083899396 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097220959 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116955005 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081516302 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097202263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079779303 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110310085 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08556674 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099057109 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078263623 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107886541 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092313793 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082903673 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100289535 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083620174 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112285973 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105308177 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089176853 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10942708 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105983194 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082513425 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102401192 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079111615 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101424686 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085077527 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106082004 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076267621 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103000471 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082031243 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100996243 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109247294 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081024467 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099715694 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089197943 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106578062 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097204195 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079117792 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101856632 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082487723 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103586769 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090085349 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099501136 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076365569 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095609809 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102254931 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083044162 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102946019 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088048206 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103403439 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075766217 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098492782 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.10307058 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091788963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100116681 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082680119 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106842627 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099816708 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081994183 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105484935 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084967355 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098586539 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087702589 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101605657 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076747801 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104013758 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101508072 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080815822 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104267336 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085910647 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102556238 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10035919 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081421137 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105652594 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083543256 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098662448 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081396427 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09930025 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109753489 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085085635 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094980825 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080062826 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107736848 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079437123 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099469282 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081041159 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102846806 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099766191 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080310265 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098652633 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084235704 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113160009 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104078681 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083920111 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105405951 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094654395 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100573653 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083463363 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100311342 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10075166 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083377889 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109783746 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087042003 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106260469 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102856824 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079869492 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105724559 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090251207 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100352414 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079802406 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099972606 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10432638 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088373612 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104029719 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083463191 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099298686 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08341367 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10507637 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102477821 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083074815 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09850635 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087832992 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099396304 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105833779 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085126363 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111426363 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086176647 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095630189 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084876944 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09943143 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105833518 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078483927 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097548382 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082641707 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101986966 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081752079 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103338414 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076245585 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108316446 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106607883 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083282944 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099461226 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082824196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106898938 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084404859 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104911714 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085153817 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107367677 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111020943 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082646332 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10377464 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092382847 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101080596 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093235112 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088358301 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098710981 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082281111 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099641287 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080383047 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103456237 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108334177 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09091823 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094500997 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08443736 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100576214 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080502022 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096572949 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086374541 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103643526 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101460045 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08956343 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10131218 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085432289 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10488232 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08160086 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102670624 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.1009913 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086022309 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101812442 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085124537 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099806765 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084657672 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100995868 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079656236 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104567257 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100242523 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08364435 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105925002 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081785944 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100706742 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084625332 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102515956 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100548395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083984632 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099656132 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085821309 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100794029 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082684524 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104065138 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077443044 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10939063 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080979931 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109227443 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100152361 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079271975 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106191117 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084173659 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107980888 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101240399 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084349277 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10155276 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082774449 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103872189 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088994845 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099224232 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110997492 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091658609 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101094322 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085548629 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10149344 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083863495 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100416787 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100107449 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084192329 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0997606 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083075104 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105490772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085048748 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102283698 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083889176 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103239253 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.099897579 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084937468 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094664605 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082658527 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100667199 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083225568 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11279384 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100913945 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08628972 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099046715 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084613978 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10000466 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079871014 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11007032 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110360203 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08420907 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108664723 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081624313 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103204098 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111071374 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077487511 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098796432 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081259679 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098122695 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090717319 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102995091 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099425549 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101626271 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099298806 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.08051981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101434871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081137686 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095156323 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080539349 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105580389 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084721106 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100128152 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082341881 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104526102 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101942984 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09344412 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101018182 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082882927 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102564565 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078810113 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101558566 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099255269 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086557458 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101824013 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080998675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097557325 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083525294 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102487324 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082780247 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101084976 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083351262 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108675341 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100195567 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086359425 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105667352 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07832655 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104456306 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081337381 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101558364 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099844194 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087752019 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105113975 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084348987 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111402351 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081965284 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102902583 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100361275 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081934983 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100882895 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082872424 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10139732 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081847596 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102871585 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09008596 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100370466 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103780971 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083257395 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100899565 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090701702 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102891553 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085025149 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11093584 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102989785 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084752514 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109981116 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085656699 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105604815 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102409559 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084792358 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107210434 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08204576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107750912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082226922 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102867915 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102215969 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082199727 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10089356 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083694873 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100371527 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088608416 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103254977 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082580305 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101392697 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080592213 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103582097 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104691567 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091636198 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104814979 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086601828 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098238746 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079403062 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104823547 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098425077 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086301141 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104043888 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089890001 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105531077 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082794061 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10159738 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110970927 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089979461 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105800154 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081054234 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106049619 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084421638 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104742669 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101407686 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084315444 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103259744 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087412439 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103969705 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082773503 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109747609 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086211409 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104043046 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102798154 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084334219 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102789745 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079199636 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103352252 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085396611 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108614808 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103728009 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08519113 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113632615 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084170778 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102085779 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087984634 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103002147 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105448407 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079103993 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103150621 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084891448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103388954 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079042059 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101690748 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080927593 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105803091 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081682082 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098333536 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112455543 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093877696 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105966658 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081024084 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101232554 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078507567 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098520569 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099868583 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085539985 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103318196 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093736869 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101712386 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082078085 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098381027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083072998 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106814982 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104727544 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081134422 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097613226 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082973902 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105118564 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089032737 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102395102 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082801604 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10666413 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103829866 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082643027 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105864035 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080723749 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106238574 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115775434 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08530579 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103186409 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090348743 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111192919 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083395373 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098422222 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103884353 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087583161 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102817183 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085196549 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104007903 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117942096 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088215855 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10193048 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082901455 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10598983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083099809 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111513932 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102682886 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085507849 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106615576 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086019052 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111579395 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085593532 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112119573 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106408632 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086946191 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102044505 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083810007 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102025575 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082232032 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105099656 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102836804 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089397025 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11139177 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082455583 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114838341 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111569013 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088930969 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.09933713 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08290073 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103493321 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078525046 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107533352 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081484117 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102714072 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099995909 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083817288 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102764496 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09018887 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104035606 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084744302 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103527245 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076886784 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105889099 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085794947 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105342419 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098362618 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08496088 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103914423 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.08822157 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107440719 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083900379 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105608776 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085222167 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104612207 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09752073 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092537784 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10236967 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086731252 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102352292 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083909411 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104422454 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08622407 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109055902 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104480286 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086486028 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115817175 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086002635 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101494916 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098912107 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090740785 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100699191 seconds)
  done (took 57.628299913 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146013633 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081248152 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098091329 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079788334 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112980589 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098681323 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080102281 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098712946 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08116921 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102160543 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079475878 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098740464 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108190909 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123779352 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093608574 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104120975 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078385875 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100108813 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097240895 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081419217 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108980464 seconds)
  done (took 2.872916548 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104859148 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120766138 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115051306 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118498863 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090207939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115659258 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115389329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114443416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09906249 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111480005 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118210339 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114925228 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092145611 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111341275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110696704 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092932347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118933908 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109408901 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115304408 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096130695 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11320298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114149978 seconds)
  done (took 3.233654596 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084449468 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10194322 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085937302 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09681215 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084341391 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098407916 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08792886 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101651532 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086692908 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103161289 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081629848 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102448792 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103806605 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079465633 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102401559 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08226082 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152018823 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107554992 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082437304 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105900264 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077622159 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106318975 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097146771 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080505205 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101786862 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088420054 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104580548 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081169059 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103762089 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081826441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103488275 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080980874 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105472858 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10200607 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083556737 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101140703 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084854041 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102339303 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079810423 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101315854 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08393948 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099158464 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083840857 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104667749 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081570048 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101409373 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085179407 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103828401 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097196085 seconds)
  done (took 5.462506729 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104273863 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161315431 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087315298 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143764999 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120309275 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112438263 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088133186 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142550897 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10269616 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082195741 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122690374 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120040033 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104408382 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089622887 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111349885 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102344381 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086358503 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103704428 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106432665 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084280413 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10844709 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089313791 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120308222 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118170059 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108489677 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082234312 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103645365 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108174751 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09865501 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109522502 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107960506 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089792521 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121062122 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10965727 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08219075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107069835 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12147232 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103299688 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087615685 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100950333 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086133157 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109322817 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110060695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103014501 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105522896 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109271151 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084822554 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101320146 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117456463 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086726971 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113938347 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119998054 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107293664 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08578278 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10940027 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119613344 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085174007 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102135721 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087154108 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117642711 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101457001 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087816072 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120057614 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107032503 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111597507 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100589049 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110140963 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10886953 seconds)
  done (took 8.128764732 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09307519 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111086654 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119586208 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120155425 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091549749 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112166566 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110479367 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089757948 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111395531 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115963267 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109820513 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133098474 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085671466 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115533601 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110208246 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091669088 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111204131 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111202093 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089767169 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111008707 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11049555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118975134 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090694827 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121062595 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141872975 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105343619 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090385228 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111377589 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120495946 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109550941 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122559389 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091330144 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110828216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120658329 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122352386 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091965681 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104851196 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108965584 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092099429 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111144093 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104292293 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100770911 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110817094 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105421656 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090492991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111053776 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119910295 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123446824 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114023771 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095674945 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111095466 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121144479 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110218735 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091167492 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120662842 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146342355 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119778898 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12085014 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109634314 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100663793 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120768872 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127717845 seconds)
  done (took 7.649264391 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107463912 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115643808 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116877109 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099892935 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083380171 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108257229 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082281273 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102261522 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11334329 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095163612 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117239589 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108231101 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091110376 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117220231 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109467357 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112090174 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0890996 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109530834 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114308002 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088269685 seconds)
  done (took 2.915204203 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093647417 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123636601 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084219115 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112166207 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10776258 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090359611 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107399538 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106128073 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086413406 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108329196 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095878632 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116570997 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106222901 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091002128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117004866 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111373923 seconds)
  done (took 2.496093419 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099741059 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11704071 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120578 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08333934 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105016835 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080262051 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10700658 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100231832 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081388783 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120348476 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084411335 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109138906 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104337353 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083018184 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100731443 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086982 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101228387 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082395953 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105489908 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119236689 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095669488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104360315 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103793342 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087900774 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105522363 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089730578 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106060425 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101985309 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083800318 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105333537 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085303498 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112877553 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100601921 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084782659 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102897324 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082229671 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.1057793 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084245774 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108779119 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104616081 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083734812 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104852214 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08480011 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105733799 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080559165 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106599166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099960271 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092228554 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102833674 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085135174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10471344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085427385 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107065996 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115086438 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087655107 seconds)
  done (took 6.232003935 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09925258 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108754859 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07972775 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103428974 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088048017 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107458773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10740663 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088614372 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106078749 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082806455 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107246673 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088848226 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107822217 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107979931 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087824457 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108712141 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080317528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107190659 seconds)
  done (took 2.610530474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091322329 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10453588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092344469 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105253146 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084466953 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10877463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079878434 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105127367 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102516047 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085229151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104476802 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087944874 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104066528 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087431514 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106450865 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084102367 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108655535 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102889827 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085762437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100226121 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087444111 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103153615 seconds)
  done (took 2.96392465 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11909261 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124783846 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091539475 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232162618 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103281798 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132293927 seconds)
  done (took 1.645656393 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109108063 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121179457 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10481133 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107108803 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115088683 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085846813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107696081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107241988 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115530862 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101613536 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107616182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116367159 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116260858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095810916 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113934706 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113873988 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106264366 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08883557 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105800047 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12734454 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087753031 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118297028 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107616553 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087183883 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108389411 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116560359 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11722439 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121907655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087265756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118332812 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112990157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087749719 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118508946 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12070769 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108336299 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097629699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108301309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128265142 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114139406 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096816204 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109386645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113309458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097237139 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113804115 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117221581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106931768 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092884751 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108216448 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106592587 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135564737 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093959632 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117169141 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115012154 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117752058 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097433787 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155200747 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102681066 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116891256 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114758377 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121899557 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115948757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094153976 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117111238 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122673178 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114391357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095666777 seconds)
  done (took 8.093374417 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102622709 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126656913 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10771496 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121794735 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097187859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107680707 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106876558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087430746 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1081229 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106231486 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152408747 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088131507 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117759499 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117579071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086955673 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109170047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107964381 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115725423 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087832882 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134207768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107940885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117776327 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116251429 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097797365 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121744994 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114899707 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107073159 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088226243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107574921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106682417 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093842313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108506478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116338102 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08618829 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11787254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108014176 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086457259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114257474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108130511 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113233296 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097457156 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127919779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108577289 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10719119 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102233292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108432825 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108126764 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086214592 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108195559 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106214467 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102084685 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122734083 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122980432 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117649981 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107511082 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088049343 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109561326 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106979876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088029727 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115260875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117238362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086074581 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133857429 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108996355 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107938149 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117225482 seconds)
  done (took 7.995892974 seconds)
done (took 154.848098254 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215497646 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200528699 seconds)
  done (took 1.263068457 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087320735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135912023 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095803689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168884325 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084184592 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141404615 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137951677 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098459898 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1060304 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0850848 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106771856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087537933 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171668218 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083796769 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107517037 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107146284 seconds)
  done (took 2.659969686 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118740342 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252342068 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125127778 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105004943 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089542122 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109320911 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083119671 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111614807 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088693435 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106160241 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087447597 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108509071 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08285688 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107793087 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.108861628 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088226286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103724367 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088991496 seconds)
  done (took 2.823223812 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113583969 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148002825 seconds)
  done (took 1.121820702 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.24145031 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163202032 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230039421 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.472106908 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.274414903 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.364364356 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.204249639 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212208793 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163449322 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208711005 seconds)
  done (took 3.3878674 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118683026 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178914657 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315226387 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155137155 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107004105 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128492293 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156557989 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129625425 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.121928131 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101162222 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122408093 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118250725 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13781174 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094089718 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115052364 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116597591 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119916487 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114127488 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113906782 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09636282 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139255646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083362864 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116467261 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114093189 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09671584 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119909577 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106065384 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084222058 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116131403 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092239616 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113897026 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124465225 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118103624 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154455769 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121368034 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156602275 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117509923 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091154962 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115286834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089217324 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119521529 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118484298 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122791278 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097417113 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105987098 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095729593 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106319211 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084435424 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114949315 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117988458 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.092497345 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113974206 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153074612 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119570321 seconds)
  done (took 7.353025649 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.783953231 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15527615 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088407183 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875970573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134977334 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10358385 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771388555 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111245255 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255040285 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.751230593 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132852466 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118492751 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204568833 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257823012 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.989375075 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289914462 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.639280192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125892216 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151061877 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15218506 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117099804 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113398575 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130878796 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452901496 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117027127 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088950703 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117613458 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118507058 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158373242 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12501658 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09179193 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199114849 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248063799 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203454652 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093357993 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111293103 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087956705 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19182519 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260842595 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191976148 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179008161 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108916044 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087696781 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121958193 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131949969 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084878901 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183798092 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173331778 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168402167 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114477374 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117064069 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097995118 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120531758 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162897849 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121718445 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317921951 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312508217 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088727263 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120901836 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124672207 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236620087 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122326411 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222379503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138773943 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186272446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111203332 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779316059 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167392721 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109904117 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094716835 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120718794 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11527582 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098642272 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16834283 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390875476 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123927088 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114496563 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089213689 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22296103 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102002806 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112085773 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160087881 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116992966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118830356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102062802 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122227451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167241178 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254034822 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099640137 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119149739 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113719074 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102321383 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116777582 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209494462 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218480456 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160902547 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22802084 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100071761 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183286175 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168015818 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118903107 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171088963 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118534661 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102560614 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121606626 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215835711 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14373665 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1222884 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093167081 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117949467 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147056169 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124446193 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095865665 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189655783 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477847658 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166174816 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109348338 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126226926 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097124745 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181128426 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095914974 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258228896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120424938 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169162824 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118464967 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087392704 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119971208 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162872159 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121715211 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119596999 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099782808 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118118899 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23444002 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214810962 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120766514 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218030844 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184781967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117899344 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169482294 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120334681 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166695879 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119436197 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098297965 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115658731 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776942017 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121992133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097559741 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115573403 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192510447 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088499635 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12351229 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124582124 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085395354 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771833472 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127071765 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119591112 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101258636 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117771636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118688105 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095356166 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11595109 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160839743 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227397098 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119012982 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096562925 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124393298 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158100254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116143299 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124700204 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122546 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103146291 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122201033 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11422669 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102331773 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188896408 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163354118 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217492562 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576143698 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112225804 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122993242 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201901709 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112939614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287358197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117199753 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203431132 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184004459 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0984253 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309677027 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163641297 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194092237 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126431487 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170069442 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109290408 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116818703 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16523089 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110143321 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095255823 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160646529 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124612211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12250624 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958341545 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089334994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244303304 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086823569 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168931172 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116570558 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118946764 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29181327 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089515638 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128135247 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162340816 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114190028 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122549862 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.710918845 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124207799 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098653232 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117251913 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21893507 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161769465 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119484174 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118527136 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095814207 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181954457 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210167958 seconds)
  done (took 43.713913547 seconds)
done (took 63.174492742 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276806581 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216838418 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266553634 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.16963932 seconds)
  done (took 1.892642452 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170505417 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148471213 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121330148 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108147264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150186418 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084009791 seconds)
  done (took 1.666425366 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362029884 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276169785 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243244742 seconds)
  done (took 1.761538299 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316360661 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249523822 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469243641 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323644735 seconds)
  done (took 2.339276115 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213568175 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132759066 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110144571 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10235965 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196492946 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243574419 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141268437 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201000029 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097039865 seconds)
  done (took 2.368687927 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196880282 seconds)
done (took 11.113202484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.253881582 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.265779063 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.191668087 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.22963141 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11500844 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.226737236 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.151779912 seconds)
    (8/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.147379483 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.242787965 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.124506889 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.124983198 seconds)
    (12/309) benchmarking ("sort", Float32, false)...
    done (took 0.172102815 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098083622 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.152853839 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11823465 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095943815 seconds)
    (17/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.208983236 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.199520173 seconds)
    (19/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.186809202 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.167476026 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066142596 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.256798148 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.224673345 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.131926952 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 0.171160557 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.190202324 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.235863217 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.204218846 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.210941303 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096626545 seconds)
    (31/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116808626 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131156302 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.16705696 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.139367028 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.093293139 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119170885 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156459864 seconds)
    (38/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.128964891 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.17054715 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.199801542 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115684914 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.158537964 seconds)
    (43/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.185646775 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178219649 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134679896 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.23488363 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.124330481 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.181107663 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12988233 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188543193 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178820585 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214405003 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136205635 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088362918 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121599445 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.168350435 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114578617 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188569172 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.170101005 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091719544 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117193908 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132695885 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113778596 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089001734 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.194478107 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066817764 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06626948 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.11432983 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065951998 seconds)
    (70/309) benchmarking ("sort", Int8, false)...
    done (took 0.185391785 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172434489 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187247296 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088025445 seconds)
    (74/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.189684651 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169680928 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092340018 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.219889918 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115149645 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.092027323 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.153419895 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.119843924 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.191794562 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.121281246 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194648569 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.095934364 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136897625 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.121561227 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114744854 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117014266 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135942713 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077099731 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12397136 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066712963 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.065600917 seconds)
    (95/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113657711 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.131668626 seconds)
    (97/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097175447 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 0.108390467 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146907495 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122524992 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130100035 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.161723313 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186024029 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116789859 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.124143945 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176537454 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107351772 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109391601 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110335534 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.129304895 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087904502 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107551795 seconds)
    (113/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.391255856 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.099785165 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08546872 seconds)
    (116/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147553251 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.118966497 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182682383 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.132568853 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109332215 seconds)
    (121/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.091034924 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085139578 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133635301 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08414306 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116812743 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.1172946 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.113859485 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065401118 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108478391 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064656624 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108277564 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081656736 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161809355 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091812706 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115069454 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065860799 seconds)
    (137/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.11004899 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085102439 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.191943935 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.196764767 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133876678 seconds)
    (142/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108247581 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110277841 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.105744788 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108276195 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11012248 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.148043414 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 0.178715048 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118342617 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.17863949 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092536062 seconds)
    (152/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099314529 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091169951 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108542373 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094017446 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08907614 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091460008 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119383361 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093169995 seconds)
    (160/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.089819753 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066914279 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066062404 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110344382 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.132152874 seconds)
    (165/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097860985 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135410075 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.114360572 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111106845 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.084992473 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11882806 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076353388 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136036207 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.113810742 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11701467 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066160998 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118236291 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159040765 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07352071 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071729714 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241247805 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086502349 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066243796 seconds)
    (183/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121442069 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119776001 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.188292876 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093351878 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094977988 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120653333 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190911619 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099747146 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.185657233 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115577937 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078147448 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065450143 seconds)
    (195/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110243474 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07616381 seconds)
    (197/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130148888 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.113769939 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094728916 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.109460231 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067668419 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.116758915 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087705221 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066555509 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090420721 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093029572 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120673889 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108566305 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067817601 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065418475 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.123353976 seconds)
    (212/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138956413 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120757196 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066902053 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108937425 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.065684351 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168448432 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115213447 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115730727 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224174062 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135015259 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066321799 seconds)
    (223/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.098233131 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.166775013 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.091325536 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066874135 seconds)
    (227/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112294935 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068984057 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195763488 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092981716 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118944502 seconds)
    (232/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.075799108 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.13225156 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.086092809 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136668558 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108340909 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067561203 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09004502 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113657566 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.181913506 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085701542 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108094598 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06777337 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.066233334 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109724004 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065625711 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114816862 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.186487726 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211316404 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115579897 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110490856 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09453914 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.091329989 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069791316 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086347705 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091022563 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067549678 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111770922 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093552264 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.147396204 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137834302 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08797082 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065990024 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153939005 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087185598 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118454541 seconds)
    (267/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067564748 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090849656 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067469701 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114950739 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091185634 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116512821 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086754044 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06636781 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110814145 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113894341 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066683418 seconds)
    (278/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092328538 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.089698598 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08586607 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134436078 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.129334327 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091627163 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.108987503 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089156396 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066716822 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.090854369 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093567659 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111193218 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084460296 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09183534 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085179731 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091282601 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.215331681 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095382645 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066670032 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092746461 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091781757 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115583844 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099186949 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090641856 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094288233 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110821621 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110811727 seconds)
    (305/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.101012955 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091566157 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110084178 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.086775523 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171719676 seconds)
  done (took 39.356517866 seconds)
done (took 40.247249309 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099681445 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147772266 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095062865 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136054074 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122682342 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091202987 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117962708 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097302556 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12340124 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123719363 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098026815 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092514275 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09735597 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12012323 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095022143 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139546153 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122360485 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093704894 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119015915 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0854286 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118446618 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085341047 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112076089 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069470483 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121565538 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093186161 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11638009 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118723084 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086735057 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108754576 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090392213 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116530126 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0859335 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122391509 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092504009 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118147947 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09572846 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120399431 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087527125 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110659941 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116246402 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087189325 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116157558 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094566274 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115104177 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.0925306 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117766254 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098456424 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13932721 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115108817 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094917866 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118689307 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095808139 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118043869 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090544421 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121231389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090940369 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141690672 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120528542 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091573785 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117751199 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094084839 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116840064 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094265772 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119493106 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119838675 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097883584 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115558873 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096947653 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115739294 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085981228 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118853356 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089461384 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110834556 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095161507 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12175092 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107566328 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093564317 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116368787 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092509982 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10912039 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090283895 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112312775 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09254714 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113297133 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070333767 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113224328 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093433205 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108934885 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095943028 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115648864 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093490097 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112421885 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098071591 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109990818 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091081054 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110950653 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086178202 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113054045 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090201806 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110457558 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088622316 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119458505 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086644702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117472981 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121347193 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08717745 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116412295 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086262184 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109439248 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101026537 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121319992 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08565257 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115897226 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085103087 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118827223 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08481036 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111200444 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085901123 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111592725 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091493773 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111284707 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111289888 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094134742 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124096822 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086897134 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113240357 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089056803 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109264704 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092599 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110692065 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087800588 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112393739 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077704835 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112501956 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086789054 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117662188 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089480033 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119067129 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08887495 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120089466 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091027711 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116349691 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091635878 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110006131 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073046611 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116661449 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088335864 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112783607 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086309376 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112836808 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086377094 seconds)
done (took 16.844841601 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087926803 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184183361 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151342885 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141412698 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106712934 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112014986 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120055082 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118881859 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113246792 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142319152 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109208678 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132997646 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146836872 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086772453 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111529236 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090512549 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11202701 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103140319 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144975043 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132118293 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163749318 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085635713 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147125674 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135591902 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119789387 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105361846 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112004685 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091573956 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114204476 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112368162 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132522755 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089982282 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112671871 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133719707 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104634244 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119954385 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086339106 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118806315 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085669322 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112620082 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139599107 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13201836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09303856 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116891821 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091245574 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11380817 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089143342 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120179778 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097831638 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115834184 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125506881 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15603178 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090735058 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121476005 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085711657 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122860564 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120308626 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090102035 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110616196 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089775412 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.1102692 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.09109426 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12606287 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142183502 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091565728 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122256848 seconds)
  done (took 8.568400671 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104470721 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138231777 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104552147 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.147855678 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110613222 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088224812 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111914216 seconds)
  done (took 1.756558017 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088653433 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132815184 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110885623 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135770943 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130726467 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10901146 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121765404 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087492716 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130442399 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088469572 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134557918 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15043612 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089235272 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119936195 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136866334 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08796585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135787916 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088317044 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115003455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111734783 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116660416 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133749031 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090202489 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111701213 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102234697 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112969898 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160621926 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093287885 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113791888 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091349081 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111131136 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165900183 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103693358 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124647467 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087655175 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127627841 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126708042 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08670434 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128574597 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093647518 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127978599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087718306 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114623141 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085680166 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117989441 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123168375 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090117283 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113476517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091468211 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131722534 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089320692 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125936507 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088517904 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117709178 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09125448 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120180319 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121648808 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089360429 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132756149 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090346328 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129354637 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104311339 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127964667 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.12921847 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090634622 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126697569 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101762339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116029101 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089248669 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116566998 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129318291 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087623664 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11383425 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099943763 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114787858 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112427023 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136735098 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113436583 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100224626 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112486738 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089792491 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113276797 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11185018 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116992576 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088409891 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118179957 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092035062 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112184502 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087084498 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11698653 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086436805 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115268041 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.11546814 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090285306 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115090572 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106437174 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114198076 seconds)
  done (took 11.736003768 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090493456 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113516594 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092462441 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113024814 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090605309 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114429373 seconds)
  done (took 1.576481201 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114248707 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117172726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103531125 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120855477 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155019247 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103073173 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129228123 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12195713 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107033685 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127719434 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128661458 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104675362 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135566756 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120307078 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103900372 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120052597 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127513836 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099929877 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126047018 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096521795 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136563446 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119226353 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097126714 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131055718 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117344597 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096222623 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124715348 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102011878 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126921551 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122714991 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095956891 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116894983 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095022051 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123687708 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129598787 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095191709 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120013667 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117814722 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101324088 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117079067 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104129834 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121401857 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125479614 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093962522 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123228008 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119201684 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094253981 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125070863 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.127543954 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094304472 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11793102 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09470796 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117592697 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092975448 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121686563 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122509435 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094126622 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128810058 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11922867 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096854928 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11709848 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092867982 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123184238 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116721047 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105411126 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118330282 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094901219 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121664281 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120160659 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095169031 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118376344 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092733301 seconds)
  done (took 9.162039776 seconds)
done (took 33.745371802 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.677836118 seconds)
  done (took 1.630047081 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.704882902 seconds)
  done (took 1.661799156 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.528055964 seconds)
  done (took 17.488258425 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49682173 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.578224176 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.87405933 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179610831 seconds)
  done (took 3.091739544 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.944300943 seconds)
  done (took 1.92636587 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294318746 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25707056 seconds)
  done (took 1.520654247 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766651646 seconds)
  done (took 1.736995485 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.326652682 seconds)
  done (took 2.295301627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329098576 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183045688 seconds)
  done (took 1.485730765 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.541677102 seconds)
  done (took 1.513949121 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.72620497 seconds)
  done (took 7.704020048 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267239642 seconds)
  done (took 1.254460811 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300758143 seconds)
  done (took 1.279542692 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.444820618 seconds)
  done (took 4.424395984 seconds)
done (took 49.981741724 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098701917 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125725679 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101956295 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12311187 seconds)
  done (took 1.421821501 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101684251 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119523916 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099044923 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119534214 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124649956 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095685491 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122008501 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100489446 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120065224 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095460853 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121127018 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118323417 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100132139 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120985165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093290922 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123061906 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098340788 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120875873 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122022092 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095760091 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117847715 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097550303 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123442847 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093547017 seconds)
  done (took 3.627906222 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100324491 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117652505 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096879545 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116438924 seconds)
  done (took 1.419792729 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099878359 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140705752 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137191636 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099979411 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141425583 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133906114 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092692116 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115608117 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093522131 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124063051 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090039554 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147999477 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136247075 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098302184 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125930681 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088062498 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116892263 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136507044 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098833659 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126176219 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094443855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123791949 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090441461 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139397205 seconds)
  done (took 3.776194928 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169522645 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147262086 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137847982 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094794924 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158731868 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140114624 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087536892 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139654807 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086692383 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130640315 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116377087 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132371957 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128098319 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086851356 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112448246 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086851981 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127911842 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128035066 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089933028 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.139866337 seconds)
  done (took 3.433135634 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09797514 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115733739 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088049898 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114918932 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099289111 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119717299 seconds)
  done (took 1.627286042 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090736535 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113432363 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089569187 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113629258 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095022549 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114022292 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088182752 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113521886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089777637 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113110399 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089019993 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112012881 seconds)
  done (took 2.213807935 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458658 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092387138 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119616642 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112998064 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095971911 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113681441 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102205594 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.117981066 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138755709 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088729849 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113458099 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09035283 seconds)
  done (took 2.635664025 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230896743 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12458569 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283148243 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269881222 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156477204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169376898 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278275153 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161303508 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.221533722 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157153744 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201940578 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221185252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149996919 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188722625 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136208811 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118497596 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223153891 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236760889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151094287 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200252924 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222430207 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163035537 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177736951 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123262218 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137072821 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168980803 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120483734 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128355907 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204303867 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199978738 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187344821 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161840138 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145940878 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236071139 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250342283 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191559668 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279037741 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134075038 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169344934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165965374 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260471055 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111966044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230515549 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154173989 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103854002 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217482656 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165702554 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174852826 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148914207 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138166888 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217362064 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212005443 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.215384781 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110626502 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229386772 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156669313 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167626984 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190949891 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248552151 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221039525 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177742276 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092950966 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213137497 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192113787 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184508295 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166910618 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.205844883 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145998055 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190429873 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187449848 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162946266 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212343224 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18579516 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140640535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167315063 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170684845 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171511605 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253979747 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201349954 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095718923 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167558843 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147747619 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131930495 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166150204 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124575395 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236537902 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145852482 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.136138719 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237758639 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159106154 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158656459 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199613195 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217782573 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120460497 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110430282 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152880679 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154840278 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188996258 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138859808 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15719694 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161415691 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128253348 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178364134 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09667414 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199340536 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090781847 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171221543 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179327405 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125444538 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159194271 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150509661 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148767733 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173042533 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19676327 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141369714 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133177097 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207712684 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175486598 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.148509801 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201862574 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201498153 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1431297 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147811494 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199729992 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242664293 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11230916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228409289 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155057966 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133643524 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105275546 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205269762 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127210356 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160420842 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134281215 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182086353 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231957817 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124020148 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111375984 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207008617 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106734866 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130574988 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158886672 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148754589 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136446372 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12011796 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150665392 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206908908 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178503954 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152786512 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164225179 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150639339 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251215313 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141047337 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123280707 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147773934 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119707994 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190499535 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196690163 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130532633 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228820567 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17089808 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20010428 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167536872 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134028746 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176487477 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129354378 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093304762 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218555024 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167483381 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161325639 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195005809 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223026984 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180660961 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181011454 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171250145 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196941765 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.136767868 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180449484 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112438521 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158511605 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16489283 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122932078 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141971675 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105896851 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147001315 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14164325 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132641761 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19345533 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167615155 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214078914 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157585894 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148117158 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17961249 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.099565085 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199221469 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177234191 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146664584 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197812961 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218805186 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188117622 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1419866 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199914089 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119799612 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097593811 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141765164 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16730742 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134132136 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133470035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16478285 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179973308 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178900075 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173683642 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234205315 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169333082 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188875218 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122049957 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167180178 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184606176 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175748385 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184778107 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140036895 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.12115203 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202263397 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156385233 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223823582 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167270486 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202116605 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205306306 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149969379 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131622992 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149901532 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185944807 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153122647 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17548192 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146800154 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140825807 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161185383 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104495823 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185157587 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183598559 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161508854 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186624859 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149845468 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209421609 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10097435 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164027395 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158443865 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163994132 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10826363 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174383726 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201898644 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147791274 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165465482 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215172311 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103041409 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306186123 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235365867 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215650999 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10961819 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156804903 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159655267 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162608439 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169041065 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176663488 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15814046 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213369511 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155422942 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108689794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140524728 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147430701 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14938121 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103181098 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147384039 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.200804686 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111214733 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208340892 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160654115 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129576297 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198130254 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122329534 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142988751 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149969165 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212472781 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200291363 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208510383 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149833421 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17855063 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232211097 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096998271 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131825299 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132273532 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177416645 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107382716 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218879653 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186115902 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225114826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181475023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184111785 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139325659 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118579537 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128727876 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198522416 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203579674 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149335545 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156887836 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227550962 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114599561 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131627118 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17017482 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19576681 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145956151 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222437061 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080034975 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276203254 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125823938 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10422244 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163191103 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233512921 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134564009 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159457288 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191783986 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168325623 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163254528 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147541035 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188734193 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210888671 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227986557 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179085152 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131904355 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154090221 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174832783 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190034572 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15713758 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.13919925 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200891584 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221332605 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196058466 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141399373 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167956596 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169513906 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15689203 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184971716 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13402381 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231111906 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106867232 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220643218 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15277127 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141702164 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176240231 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.185209844 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139644417 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185653423 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173413371 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134915713 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1327848 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167921092 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175667882 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156605805 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127216692 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178089996 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123282865 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191355558 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256198948 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133636656 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126044418 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146541613 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134644789 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155610783 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157728916 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139939647 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136895077 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22664537 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133284424 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191731059 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225457088 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168592973 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174155227 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142615728 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692739847 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.100889052 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222907392 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15401678 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204911782 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149545344 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17139433 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158509687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167998842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220683045 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15979196 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229957061 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193055088 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176480909 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131174082 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15728265 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160642014 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143544745 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150114124 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168822261 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158983384 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15142903 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177667545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168127059 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133582314 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111103195 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2263634 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153801188 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181239578 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177739444 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138649554 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173436378 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184781375 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13320807 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177752802 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234559689 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140398453 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149928086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105864907 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154572216 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260244744 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123183139 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199921294 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175086172 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157869674 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166609202 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145840967 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218524985 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1561124 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177694036 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144624984 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158186502 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154648904 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109316058 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129745579 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154932089 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167120538 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148085456 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157554125 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138315272 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216523909 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095294719 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144309668 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220557297 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189432632 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212430694 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135266721 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134945676 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161973447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148764332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175235435 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179413242 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134371802 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106979695 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135409869 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156529872 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112035502 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154397901 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192909155 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16458573 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233861078 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13443769 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249371112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138569614 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15498219 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087260786 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132194875 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149115835 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145928355 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1581946 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190718348 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258818327 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146533301 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13092627 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121508411 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126242645 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133726941 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162803643 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162577342 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176081707 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144285782 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080054414 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157712278 seconds)
  done (took 81.855572825 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161475441 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130319797 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145732094 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20072136 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174683003 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268337016 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208894527 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253807324 seconds)
  done (took 2.623013936 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092785991 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.143600777 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156990272 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132342041 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091148485 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118105327 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341488287 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132397214 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114950161 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11396982 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171314985 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093288353 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.546646393 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090510408 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118764769 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107350153 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092152281 seconds)
  done (took 3.728116912 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.472285178 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.702265969 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.507573954 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.096393917 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.124249896 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.111675245 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.65657677 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193816759 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113816347 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.476149826 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.770984804 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161431033 seconds)
  done (took 18.475699837 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098695499 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119659624 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107627692 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.134519934 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094639606 seconds)
  done (took 1.647530874 seconds)
done (took 129.46010976 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103339506 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.400892134 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071475076 seconds)
  done (took 1.593986359 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106017122 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135907347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108353395 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134655948 seconds)
  done (took 1.58088766 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097652247 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126426641 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109045935 seconds)
  done (took 1.42356033 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32029423 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18859424 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.161786395 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105011374 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127834488 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102574924 seconds)
  done (took 1.428088386 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097117505 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126674669 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097225559 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129535153 seconds)
  done (took 1.544331215 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094033642 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07090147 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099318058 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074242686 seconds)
  done (took 1.428263429 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114132698 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130917551 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103456216 seconds)
  done (took 1.443499919 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129825217 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137481141 seconds)
  done (took 1.362687565 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104713434 seconds)
  done (took 1.194945185 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119685634 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16822679 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.188504246 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164410313 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.226972464 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163861928 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139477681 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113273014 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130339704 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14248636 seconds)
  done (took 2.652239813 seconds)
done (took 17.517773811 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103581019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.517540363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411196456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116299581 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721327099 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379459369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033130677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145015249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164703024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092315044 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13781089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673989382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060655789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.47227439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022828238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375712141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703381097 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09287579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118300539 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092992319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017333042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091666244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12083145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091843073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70310327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425326625 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094643199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374573883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091790299 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125032677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382580684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121871747 seconds)
  done (took 17.159839595 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094820371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172831052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097247124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135868066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122931802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093599728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123420588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092313122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178059968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120957181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10981363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119653988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123852009 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094787696 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140539471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092724679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123748916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092873477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120558071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119814572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111780944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118385782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093446071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120276769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093931259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13438335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120853793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0930033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11903935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098097536 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125976502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09384265 seconds)
  done (took 4.792083435 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140370313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180993057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127427448 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126041855 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167293604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123104636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198126114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117582242 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181434199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121440067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138466623 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092376621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155165251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121882904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114152116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120057487 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095393929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121319714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091935381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122010526 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139162986 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092909745 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12085939 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093103909 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121904551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106848706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122831158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119519191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092941679 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125674444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098783567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122436393 seconds)
  done (took 5.114357733 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096837711 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124505717 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108847141 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137350024 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095218991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124735853 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096083143 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123194147 seconds)
  done (took 2.005809786 seconds)
done (took 30.163187707 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111263557 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12557155 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10618741 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133319938 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103128464 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131437541 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090800376 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132461515 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132601843 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101897729 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136559855 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092057851 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121666328 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090951754 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134112234 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097264785 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13087912 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100628437 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132921339 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130468563 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094092898 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132478176 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102151673 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132216731 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103602289 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132177464 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136730983 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098880223 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121270239 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094299788 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123115635 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102880607 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123696551 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104527569 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125572274 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096290812 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122988143 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093405997 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131715534 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131040983 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.09973826 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131717812 seconds)
  done (took 5.962835081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10736025 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138104629 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103605673 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080486961 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116094346 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079700589 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136438759 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078527974 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109440068 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107119148 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073848444 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105586393 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077790438 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100186004 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077109463 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074996366 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107272074 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075490951 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075512681 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105009594 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078988737 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071871025 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107359668 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07760265 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074060892 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108782712 seconds)
  done (took 3.553525329 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099616152 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133942556 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112837793 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181610534 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159927759 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099277283 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131884425 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137998465 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108414987 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119048603 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095372517 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147777949 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10987709 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128201002 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090937871 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136566598 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134598559 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093193964 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126555321 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11188352 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137276403 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101759122 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141905668 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132243234 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092012722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121483558 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096242201 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133244967 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096285441 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130472094 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.094934458 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124147869 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12127351 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104655889 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124376562 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093246849 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140417499 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101651131 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129438476 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092579031 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.124132421 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120697102 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113864132 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165681576 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090753069 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128263313 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127040308 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10313954 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12019619 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10991672 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130344998 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090869872 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124305751 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090721917 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120102061 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105917334 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122196635 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095683322 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129327327 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123341885 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104566461 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123950828 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108121582 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120749167 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099636031 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121077297 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092656745 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120282606 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141405214 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093614105 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162167257 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093089258 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121727142 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100671926 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129390876 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12652086 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092808767 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13542586 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101643162 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123998829 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10117498 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124568048 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095321125 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138433416 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.121633624 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094391106 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120883801 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099378697 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123869158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093566225 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135480065 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091516906 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123941468 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109833741 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120036725 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.121494288 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100100308 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124540561 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091405146 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134012213 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097892794 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121622217 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103387461 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121161765 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122456588 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103813162 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125387834 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091008546 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125925401 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09838517 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12875262 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093038599 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12419483 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093693228 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130450032 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12804331 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.096961721 seconds)
  done (took 14.704808672 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22644956 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212555025 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234697076 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260690579 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133704618 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113356205 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210521903 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153558991 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122045433 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158500944 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.160173843 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179349395 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139015866 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177935807 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.138595766 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120607565 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111626663 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162654362 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212830747 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.286566126 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111964814 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131437049 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160576888 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158698269 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106292578 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131307529 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138100196 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104381693 seconds)
  done (took 5.680510092 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107400877 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155682677 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097990965 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142595232 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147161172 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091441885 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127425204 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094541972 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133885616 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133463889 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091869839 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128113233 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099174179 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130470132 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121609432 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102254815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131598031 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093992388 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126307768 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096501345 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128631927 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100902653 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126049282 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120089014 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102219664 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119552366 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085073192 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14063088 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121034931 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115493751 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119496112 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098522158 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132523947 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092030422 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121751072 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094571628 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123730874 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094000336 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12287355 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090171187 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.11987135 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076241834 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120891182 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133549234 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098576842 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078302344 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127243988 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125449246 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09420259 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118653368 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09504485 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122739476 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095645991 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128719666 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097431628 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123019772 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095189878 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114849304 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098923396 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123336058 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084186911 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119258655 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098329932 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116091334 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100769519 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126629686 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090683228 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124307534 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096898864 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1279233 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094703141 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125700499 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090332921 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12445751 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094627306 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126547724 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095471724 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121076411 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120479502 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093573135 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075193233 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122271638 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073550406 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124433907 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090912938 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120374799 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09567461 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128551437 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136288325 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094441387 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131025969 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093315882 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121551335 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096300787 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112225099 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095607462 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138202539 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139159687 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093601207 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119911731 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106335378 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124802751 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.0913852 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104775194 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.099596759 seconds)
  done (took 12.825949625 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126840887 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151663472 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09469768 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141962195 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154469502 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15548024 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10050912 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129032251 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095353387 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140787818 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092530212 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130408939 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096504257 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135986595 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155352645 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102643656 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124497431 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105982655 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130305089 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169111334 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11073273 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141910503 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10795073 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123756275 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126702839 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110925774 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159906669 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106959169 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136343119 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139997809 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107249937 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160084107 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141718194 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097932509 seconds)
  done (took 5.442462437 seconds)
done (took 49.269075779 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.223547268 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.414443606 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196053727 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.142995878 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.208721536 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225589457 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209059125 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19651402 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.543257206 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.192638906 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.469023987 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.830539178 seconds)
done (took 59.978145104 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.25282398 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.324939604 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463026441 seconds)
  done (took 3.90983196 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.535592244 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.124501685 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.456199796 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.204593911 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194750884 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.501452173 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.78955175 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.493582745 seconds)
  done (took 27.885654876 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.198574084 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.569337705 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.666648426 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.670013116 seconds)
  done (took 18.225490631 seconds)
done (took 59.935466008 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.222167304 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.242717799 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.204289411 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.173363022 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.302680376 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.237315375 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.547635094 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.197762171 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.209211382 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.174785618 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.212203337 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193681156 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.19841488 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.558195636 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20377097 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206024898 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.213457099 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.67670523 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.57542702 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202375068 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.215367631 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.199456676 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.208163438 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19614667 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.25200791 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.191406165 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218194067 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.205491261 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.368082016 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.193949079 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.288777746 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.751900157 seconds)
  done (took 190.161074801 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.190426275 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.147482879 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.246963894 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.25157624 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.53725044 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.390188746 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.325763725 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.626793487 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.208907744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.203471068 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.41611318 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.190947022 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.451466394 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.232564577 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.198802861 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.190555649 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.398804484 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.453070437 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.213226581 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.46349178 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.205813134 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.322341966 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.260266477 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.378677554 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.202157422 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.203353714 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.199166648 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.190718281 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.38600816 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.341938997 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.220516481 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.197727714 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.728839264 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047843855 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.207513245 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.193682896 seconds)
  done (took 148.743758386 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.45716842 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.18523478 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.187731973 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.188232297 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.184723737 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.217144242 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.188204037 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.680236657 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.685083136 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.685431709 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.686052771 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.191194686 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243725655 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.400832339 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190518903 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.277973284 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.201757385 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189296271 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204079312 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.228750195 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191244788 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189248121 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.68070672 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204454599 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.249044334 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21265939 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.188791829 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.217580416 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.574805864 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.188581056 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217119364 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507195805 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.233012179 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188936655 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.510344837 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.822516791 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.188944247 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298175527 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.190916469 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216007599 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190532636 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.460936697 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189674076 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190200005 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.192932453 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.787103982 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.192706865 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.680949019 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193435112 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.074763092 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190530238 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18934104 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.504937486 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.721843598 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.207968279 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189856915 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.194016794 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190302229 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190217846 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218627488 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.57391214 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278639399 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205652875 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.194214314 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.21803723 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.190940844 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.191436293 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.375725502 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194776722 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.629869582 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262058409 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303748014 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.684128914 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195066861 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283533809 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30705573 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.191223657 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.190848506 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191417103 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.191057666 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.298003353 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.192343887 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.565274685 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198612297 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.191842942 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249933976 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.284879113 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.191634128 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51007554 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195456962 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192791132 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871724009 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286473384 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193264479 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.192334049 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19229 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.564416129 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.686561438 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.361956491 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.195950017 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.570997656 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.195775654 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.584480119 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.676201164 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.789784457 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19293916 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301040907 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196959642 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.194884931 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193707759 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221549004 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207349249 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252488767 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194601243 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.586858423 seconds)
  done (took 344.187617286 seconds)
done (took 685.673448705 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.865054722 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.853548924 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.964036888 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850480924 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.833855062 seconds)
  done (took 10.485674257 seconds)
done (took 11.606325482 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.36744328 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369408031 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252163244 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.365258406 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.221915429 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.380125044 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.347014931 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220622241 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.290850065 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.27197126 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.288681756 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246738028 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221321644 seconds)
  done (took 17.963344567 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.500529894 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.488437768 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258325637 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499353721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233909905 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.495722904 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40732521 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397888251 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.405061183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.22396452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208279139 seconds)
  done (took 16.241883138 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527417489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498779893 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261543759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542656747 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236741595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512945638 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399988741 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.402489083 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406529005 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226115255 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.207011367 seconds)
  done (took 16.345379431 seconds)
done (took 51.670055681 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.20482079 seconds)
  done (took 2.326884849 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238430997 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.394300341 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.218894777 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.20685852 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206167791 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.204890172 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.210549958 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.200937743 seconds)
  done (took 11.002961097 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.203504635 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200064588 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20177187 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204143928 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200146918 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.204160081 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.200989485 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201141274 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.199576276 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.197472281 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.200330349 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.198983225 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.201616656 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.198611813 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200695945 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.198130697 seconds)
  done (took 20.33137793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20500452 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.202473016 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.19898579 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.204059057 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.19980121 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.202216979 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200158907 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200313899 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202101802 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.203307229 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.20293521 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.200639574 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.196715531 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.202601869 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.202979143 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.204739027 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204478555 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.203879278 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.202765979 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.203699669 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.199950977 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.20077543 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202895512 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.201880501 seconds)
  done (took 29.973405311 seconds)
done (took 64.756708311 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.113192451 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.754597564 seconds)
  done (took 8.99109953 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.204175429 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.205502114 seconds)
  done (took 3.537076893 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.206932243 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.204350261 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.203722345 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.206286361 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.20693408 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.205941619 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.206512671 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.203460196 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207033552 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.205815291 seconds)
  done (took 13.181665395 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20638345 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.202273457 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.201760996 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.208854738 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.204269535 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202987152 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.205531245 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.200394949 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.206909639 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.19895849 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.205543744 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.203652574 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.203404017 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.205214859 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.204316354 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204122716 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.205519755 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20223543 seconds)
  done (took 22.79866684 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.205165309 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.202869966 seconds)
  done (took 3.53192672 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.204798058 seconds)
    (2/7) benchmarking "second"...
    done (took 1.205844364 seconds)
    (3/7) benchmarking "month"...
    done (took 1.206137936 seconds)
    (4/7) benchmarking "year"...
    done (took 1.204978402 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.205082842 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.203504378 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206398066 seconds)
  done (took 9.563820693 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.208893254 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381638038 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462469334 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813228964 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.209916041 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.212536482 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.055351014 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.207218514 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.215625108 seconds)
  done (took 13.892797862 seconds)
done (took 76.622195335 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.192937823 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217813743 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.283388947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215588575 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.220843166 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.544811534 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.252091555 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.329675798 seconds)
done (took 37.386958023 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.211425067 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.909347264 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.92101379 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.20860358 seconds)
  done (took 11.16892225 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.183825885 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.056952938 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.189857158 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.156757849 seconds)
  done (took 17.718572316 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.139415376 seconds)
    (2/2) benchmarking "read"...
    done (took 1.538050321 seconds)
  done (took 4.807766476 seconds)
done (took 41.031928468 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212788218 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.207493136 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.208449249 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.207313897 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.207136293 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.210778458 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.205917201 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.204256413 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.206632076 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.2111033 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20890198 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.209621354 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.20684359 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211532567 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205218947 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205577525 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210265049 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.205664506 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207823255 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.209368074 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206040306 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210423046 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.20566727 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.207108978 seconds)
  done (took 30.120052382 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.207499888 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.206914667 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.207994512 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207748142 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207211298 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207782034 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209572387 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206489353 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208775912 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.211624377 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20736659 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.205937853 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.212924768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.2075354 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213481976 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.208227225 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.211159767 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205399355 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209663667 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.208366164 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.210809985 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210303127 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.20647045 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210646504 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210994349 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208501877 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.211122559 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.206364923 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210884724 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.208248476 seconds)
  done (took 37.390355709 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.21618464 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216624996 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213201326 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.212150717 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209081659 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213123623 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.214566089 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213042469 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.211581801 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.211483418 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212284077 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211078486 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209334133 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213409377 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.213567892 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.208032055 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209146775 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.212361806 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213190512 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.209191701 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210074633 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214483571 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.209931446 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214604598 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.213079387 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.213170083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.209305496 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.212048998 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212637431 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211011885 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.213941914 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212513876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.214185904 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.210526108 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213972894 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.213208827 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.218583987 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.215093368 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.213768566 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213033845 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211433002 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212128093 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.214476475 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.212381193 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215030653 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214048969 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.211029973 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213012019 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.214048868 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21281042 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213649461 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213885008 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.219107562 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.214963352 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.211569846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214522119 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.215852782 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.21382948 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.213578538 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.214747968 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.212661071 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.215700443 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215811878 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214787475 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21418523 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.212339696 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.216747787 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212853583 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216701218 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215499711 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.213811899 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.214343886 seconds)
  done (took 88.485854376 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.214117325 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213429743 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.210261457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211442116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216013676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214150044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210374934 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214397151 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213135242 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21315707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213235762 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212567276 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212519596 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214090977 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216076558 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211640648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217841766 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213433229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215654302 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218876917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214056572 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213606858 seconds)
  done (took 27.836881251 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215267158 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.21829808 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.212913383 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214679038 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213070745 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215802402 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215729833 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219214485 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215219869 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212419958 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212682851 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218313227 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.216600918 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214925823 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214989858 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213713337 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219233706 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216929895 seconds)
  done (took 23.010669968 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214738681 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.213780244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219860987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216440372 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.21472836 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217488987 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213529207 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220213434 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.2212021 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.21482193 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217880186 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2198727 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.220857525 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217132067 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220293218 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21422359 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.218274606 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218760568 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219257942 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218774614 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216577515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219414718 seconds)
  done (took 27.920507633 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216988799 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217354412 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217169863 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21853115 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218212403 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.221200332 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219424629 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217470134 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218751134 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217210739 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218520126 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218330076 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217581609 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.218779198 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217075734 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214305015 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.21804743 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217367221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218783013 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217408822 seconds)
  done (took 25.493689906 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221858538 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.218535486 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.219434834 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220506867 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221762593 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221416547 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221000038 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222750505 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220982769 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222730174 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224601544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222524464 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22481428 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.219850701 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219243215 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22201641 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220167421 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221840001 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.224060753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221721068 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222131983 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223469858 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221671768 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221108886 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221296937 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225063212 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22331243 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224352485 seconds)
  done (took 35.350919896 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224973829 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225379155 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223590961 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222860062 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.217279664 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221189654 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219563464 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.221912797 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223360166 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225700889 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.223130748 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.22305203 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222126488 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.227803183 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222365976 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.228716812 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223563794 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.226926067 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224733957 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223234799 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.224230706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2242811 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223859503 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223468926 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220882528 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228683691 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220254118 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22092054 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229802264 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.223186632 seconds)
  done (took 37.849643215 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.247444716 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242080933 seconds)
  done (took 3.634950988 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221805211 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224004119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.229859737 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.222880052 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228311852 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227409842 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223744624 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222532465 seconds)
  done (took 10.947618466 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.22370521 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227132951 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227607215 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226659216 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.225472169 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227865417 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233745735 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.240921035 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227656086 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.233984638 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230011942 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.229069589 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.224710341 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222809457 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222867739 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222484583 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.223519843 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.222456254 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.22681091 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.221283465 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217412041 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.223867105 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223893231 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.217473998 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22055574 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.229847867 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239462261 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.209822902 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211125315 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.212216065 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211129256 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.208021205 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.209262827 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.210835915 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.213212028 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208960344 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.215313228 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226663541 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.215143748 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226840596 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210132948 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.208434953 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21095259 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.209777165 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.209420724 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.207111123 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.207533988 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.204853709 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.206407493 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.210301692 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.211074171 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206123883 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.202311582 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.207378117 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.205403831 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210974993 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.222692353 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.207959746 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.212371528 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.21560294 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.232714211 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.226431004 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.207090556 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.204805847 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.214986066 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.224412126 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210696987 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.220458125 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2015443 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.204129552 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.209680489 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232967564 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.226848247 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.203649424 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.204870187 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.205757213 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.203823626 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.203377531 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21115348 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.22215666 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.20311881 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202657964 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.212335716 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221546139 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.201497269 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.200505583 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.201347954 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.201834709 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.202947573 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.211350244 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.218143885 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.20149915 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.202592888 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.197952241 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.198278254 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.197216879 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.197183699 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.198446383 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.196504428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.195014082 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.195052379 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201950123 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.200675617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192901732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196250337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.202203505 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.212683674 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.192493273 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.201336286 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.195148691 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192508793 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.193650958 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.197404278 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.189150356 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194806713 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.198538385 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.191236003 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.194720404 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.191316324 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.192342941 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.199788417 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.212911223 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.191543109 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.191001499 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.195653875 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.200313324 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.191818205 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.194619085 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.192328642 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.18957304 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.18955551 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.193721266 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.192210815 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.192887139 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.192109423 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.195248206 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.190057704 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.193095027 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.192859262 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.195011112 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.194835649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.193031515 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.193957463 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.192671479 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.191336325 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.192308591 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.197664143 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.208638243 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.192763148 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.192421475 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.189387238 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.190803217 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.189379312 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.189579684 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.188824279 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.190228828 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.189955661 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.189667161 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.190142765 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.192027127 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.187509587 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.187987203 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191409597 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.18872552 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.19212547 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.187574889 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.185480609 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.187704849 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.187420467 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.18669534 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.185776343 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.186129938 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.190027991 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.191396342 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.186832821 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.18623943 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.189081681 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.185798814 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.186639409 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186986459 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.189898461 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.193806427 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.18722361 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.194048084 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.204892778 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.187610562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.18850754 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.187664755 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.187079614 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.186850792 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.189957378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.19343545 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.19768427 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208937605 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.187873663 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.191254438 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.188880448 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.189798269 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.191744268 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.186733257 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.188710997 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188960919 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189708692 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188343092 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.189480551 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.187756842 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.188045031 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.189096898 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.188476251 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.188769115 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189347467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.189726011 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189525901 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.186110442 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.188218152 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187855069 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.189385223 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.18658053 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.188596035 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.1892169 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.189030966 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.188726485 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.195375904 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.187156318 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191605511 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190684036 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.190639899 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.188238085 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.190551005 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.191056691 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.190889609 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.196926805 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.207513368 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.19161057 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196967648 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.207005973 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.191271869 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.193565124 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.190494158 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.188143545 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.192501573 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.1977666 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.190859205 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.191864706 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.190965379 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.19072023 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.191985113 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.196998157 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.207264 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.19214086 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.19171927 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.1930767 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.189571568 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.192938713 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.191512299 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.192292617 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194415782 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.192520611 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.192875619 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.192451742 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.192467772 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.191882683 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.192738378 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.194165231 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.198888583 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.197442347 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.193204542 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.194381147 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.193080931 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.196309558 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.193065706 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.192426966 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.193788217 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.20397454 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.213749622 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.198727771 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.211256805 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.194643968 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.198692408 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.211490164 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.196567437 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19345959 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.194262607 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.194060919 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.194322457 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.191046104 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194763587 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.193664857 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.194152276 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.194478525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.197176001 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.194199982 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.19535922 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.194026779 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.195589746 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.195390709 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.194494416 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.194335564 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.195643496 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195935469 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.193813703 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.195482153 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.20115064 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.212391847 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.195681165 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.195227191 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.195911932 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.194726303 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.196267097 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.194576032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.198137888 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.201640873 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.198336489 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.202749633 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.197459496 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.204262807 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.195167759 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.198439184 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.202493134 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.194249875 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.195018462 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.1962159 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.195975258 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.202560981 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.214326947 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.198053111 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.199619655 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.19666026 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.196694516 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.19667567 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.197428917 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.19742062 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.196495463 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.204933229 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.21442198 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.201395867 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198219912 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.195117314 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.197039232 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.198345781 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.196835474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200649 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.19688972 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.199358513 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.197775963 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.197209841 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.197928037 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.197176352 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.198748858 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.195788506 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.197088761 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.204565969 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.217198194 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200903603 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.198018076 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.203827617 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.216030977 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.205406105 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.216055117 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.199084255 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.197933327 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.198384031 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.198454032 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197623021 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.198528596 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.197192152 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.199345301 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.201669145 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.199379871 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.198980388 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.198842964 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.196963564 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.197127877 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204565295 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.214979885 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.196863306 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.20118642 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.194469042 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.198059001 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.200250829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.195720395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.197025703 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.198397819 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205997043 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203367876 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.197649064 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.197631064 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197941732 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198361443 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.197590325 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.197802792 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.197233928 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.196908632 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.198865807 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.197902316 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200844027 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.198385268 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.199293594 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199879788 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.198930379 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.208028189 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.216918529 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.200178781 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19802563 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.200319361 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.198861963 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.198745168 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.19844327 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199293498 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.200199936 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.200030078 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204908444 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.20486128 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.201260742 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.198419419 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.198861679 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.200129463 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.199645077 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200362154 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.199304483 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200406948 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.200621681 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.199883839 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.200990586 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.199646913 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.202447055 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.201147364 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.201002085 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20187953 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.206166451 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.200635823 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.198874279 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.199813625 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.201580985 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.200686238 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.201690952 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.207819804 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.222170226 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.209849089 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.207588853 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.20363903 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.20135355 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203853562 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.208139502 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.200979833 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.201720127 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.20184334 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.203249891 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.202173836 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.205569934 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20201761 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.208710269 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.220696067 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.201782735 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.209918437 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.220470185 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.201826092 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.202829905 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.206644026 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.202383407 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.200315958 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.203247179 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.201629967 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209976015 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.221445703 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20202767 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204700527 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.20212938 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.20390529 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.206984397 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.203437922 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.203469349 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.20103205 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.202777625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203651284 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.203786572 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.201690125 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.203900461 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.203676077 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.205235908 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.20987217 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.202127667 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.205387121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.204654281 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.205808545 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.20450015 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204225651 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.202222137 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.201594886 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.205033389 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.204773065 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.205029153 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.206475327 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.204294116 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.206331008 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.205944206 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20414393 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.206699204 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.213079193 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.210886676 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.202292665 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.204521841 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.205100709 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.206675748 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204477681 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.203992956 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.206174548 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.205389774 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.205032512 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.204813442 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.205058875 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.207086596 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.219848398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.22280114 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206879185 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.205864332 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.208260717 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.206333985 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.203180006 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.205540647 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.207142175 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.208414277 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.212682543 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.206383792 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.213747069 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222911096 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.20768233 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.209971689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.208488287 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.212792626 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.209655209 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206480639 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.206927369 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.209719649 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.222160093 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.206940678 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215479528 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232253954 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.224635584 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.208263152 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.206195823 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207222228 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.207433042 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.209895712 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.207521489 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.207880536 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.208540978 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.207698024 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.207792205 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.212283532 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.209354415 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.209213097 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.208190014 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.208842417 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.209114413 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.205413892 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.20822106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.208803721 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.20840221 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.208364153 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.208022343 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.2094588 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.219971696 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.232888513 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.208463313 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.209696918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.206292111 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.212322596 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.211802171 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.218602765 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.216471215 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.209822176 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.209264264 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.210620563 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209359516 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.207641029 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.209914352 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.210130893 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.210645083 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.20837361 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.219957532 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233190583 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.213532021 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.21037183 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210807065 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.208728583 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211658455 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.209922458 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.209416322 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.211373703 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.211680831 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.212662499 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.210983612 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.210795804 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.213208457 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.217127675 seconds)
  done (took 717.756986377 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20914374 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208327339 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208437179 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.209009445 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208691109 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208793652 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208592659 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208511539 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208863321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208526836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.209229541 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208021113 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.208661846 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.209628863 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209139467 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.208780812 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209209686 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.209054828 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.210358054 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209282432 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209221077 seconds)
  done (took 26.516122635 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.211749607 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.209937788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210138376 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212424588 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210798274 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.212628834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.211474436 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213000314 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213241761 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211015036 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213624729 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212304563 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.209993522 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.21120047 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209398772 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213341168 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.212350522 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210945023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.213800128 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211477691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212788911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211388629 seconds)
  done (took 27.789193816 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.21268351 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.213115266 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.213075721 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.21129107 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.21366215 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.211503905 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.212659436 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.213689363 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.213944701 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.214349412 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.213509139 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.21504053 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.218919194 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.217426324 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.216084854 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.214606441 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.35907944 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.214721362 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.21333391 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.213952615 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.212229625 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.220964461 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.231794074 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.213491809 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.215111464 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.215058943 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.215733746 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.215081658 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.214421782 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.216457336 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.218627317 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.214437773 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.21549522 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.218397984 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.215110216 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.215618103 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.218727885 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.215603186 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.213021549 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.216569442 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.224233253 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.233316894 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.215966357 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.22164731 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.235035305 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.2163718 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.21740292 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.222582785 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.213928384 seconds)
  done (took 60.891725601 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.216404892 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.217163503 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.214531085 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.216673912 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.217067713 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.21703435 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.216946706 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.217063715 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.214496937 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.215244846 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.217804848 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.214737106 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.214317211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.216630956 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.218532304 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.215013174 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.21502899 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.21597473 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.215118381 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.214031944 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.215823722 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.217250527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.217744142 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.215807046 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.218487251 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.215283865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.215700347 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.218407949 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.216091419 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.216294526 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.218188094 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.218357282 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.21903609 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.217104262 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.216199306 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.218729047 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.21907565 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.216555323 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.219211678 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.216226453 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.219607612 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.219044619 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.219536615 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.219990282 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.217454188 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.217898941 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218060264 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.217318691 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.217664923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.219622598 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.219418496 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.218315248 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.220303214 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.217781289 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.220797098 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.220750922 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.218258136 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.217866339 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.220397403 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.217923373 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.217959796 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.219159637 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.218507479 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.220381057 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.220800848 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.219401804 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.219376152 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.220990782 seconds)
  done (took 83.935537472 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220457092 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.221537074 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220828156 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219670219 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220355701 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.220235022 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220906876 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.22095329 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.220872319 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.22032857 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220764139 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.221670348 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.22100447 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.221586751 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.220734036 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221691208 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.220598892 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220866003 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.220466194 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221872765 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.220999002 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.220511506 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221378073 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.220736195 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222298332 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.222176286 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220121254 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.221516216 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222066047 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.221080287 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222360715 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.220909552 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.221417563 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.222519698 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.22285144 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.221671939 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.221429365 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221819013 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.222539587 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222152158 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.222999542 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221946713 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222659362 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.222066995 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222288954 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.223063595 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.22372378 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.222820407 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.223676252 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22256323 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.22265734 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222293566 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223090772 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.223825326 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.224485945 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.224206499 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224283047 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223001273 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22315861 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.223649307 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224302865 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.224788118 seconds)
  done (took 76.900532876 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223408584 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224615604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.221629418 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.222487323 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.223908055 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222452342 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224653601 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.225044761 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225627174 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.225297374 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224753233 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223232066 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223306761 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225679137 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222742568 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223489507 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222629372 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223733246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225329644 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222407987 seconds)
  done (took 25.618032992 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.221809842 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.226073833 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.224521297 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223920263 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.226675584 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.223108249 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.226350509 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226184843 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223725493 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225455265 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.227583882 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.227133964 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223191983 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224001817 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.226865942 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.224668983 seconds)
  done (took 20.742820073 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.22382779 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.227397042 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.226802582 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.225805715 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.224440751 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.223956357 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.22619655 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.224128402 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.224330956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.227533396 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.227923294 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.227230646 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.227599782 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.226458438 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.22514034 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.226998526 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.225271489 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.225223155 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.227971384 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.227097876 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.226008447 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.2239398 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.228355181 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.228981571 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.226520144 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.226426817 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.226022824 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.225424589 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.224881748 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.228071919 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.225578144 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.22671868 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.22621311 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.224866126 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.227669621 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.226632876 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.230197477 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.229335278 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.229454096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.230297064 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.229885345 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.226126191 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.229167774 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.229256503 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.227172684 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.2293772 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.227139113 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.227365595 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.227214931 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.227746696 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.229615904 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.229212092 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.229756215 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.230946712 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.229767544 seconds)
  done (took 68.636789736 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230287247 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230588687 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.227000436 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229054871 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229912505 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.228502527 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230831261 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.229455883 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2271897 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230702489 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228646975 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.230999591 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228397039 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231069102 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228323033 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231398018 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.228300944 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.228097206 seconds)
  done (took 23.274563786 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228732575 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22985811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.230659197 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228394278 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.228470331 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23162262 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228572408 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.231053243 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2306837 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229460306 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228854685 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.231420705 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231740386 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.232014627 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229985779 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229088457 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.232222061 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232209207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229375162 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228602732 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232878862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232058249 seconds)
  done (took 28.214645646 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.231355087 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.231535614 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.231492086 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.246786601 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.24901972 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.251700134 seconds)
  done (took 8.589588846 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237479429 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233043887 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.230436976 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233538795 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232401272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230371253 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229708066 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229835254 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233091699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230770148 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230351095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233727563 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232161616 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231178698 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233251 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233255644 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230871687 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23035867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231946546 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235225123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231682513 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234008235 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23159319 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230507506 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231743799 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23161028 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234053853 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231757349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229952788 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234425213 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234650103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230828614 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234511874 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232979167 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234855501 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234159832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231742269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23489949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235672536 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233326829 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234657284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234417828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234804653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232193152 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234654847 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232155888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232523895 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233181269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232996354 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235281207 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235980975 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233599262 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235007045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235686521 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235607141 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235053184 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233709873 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234026605 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236500501 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234180686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233690206 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236458225 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23440412 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234148091 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23627347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234760786 seconds)
  done (took 82.568784656 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233856151 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234098558 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234289965 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235599565 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234589507 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234192945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234761282 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234437528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234706381 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234959405 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237219265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234293538 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235318921 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235849253 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234085214 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234966536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235137057 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235279107 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235539309 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237767079 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235437874 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234341183 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23416634 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23559904 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236064782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237834892 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235105384 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236593597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236298568 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235627089 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236253457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236081349 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236179517 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.236175885 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236375457 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236203396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235067195 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236498731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236268444 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239529692 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236856703 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239524509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236876771 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23641524 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238176655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237337303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237091536 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237848777 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236741845 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238393237 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238583151 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23747118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237889354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237740414 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237116206 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237837897 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237406331 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.237620506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237527596 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239550215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238262589 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237659861 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240942407 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237326333 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237946109 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239074606 seconds)
  done (took 82.760921223 seconds)
done (took 1683.365916496 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.277320319 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.2929476 seconds)
  done (took 13.725106643 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403469077 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.356287911 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.239283902 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.287156484 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.238343602 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.255396096 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.262354661 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.238781645 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.239209591 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.239588684 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.2386769 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.427773216 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.238050833 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.239161216 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.239238804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.334458725 seconds)
  done (took 41.634732471 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.264160761 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.248413678 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.352143028 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.26725888 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.269959497 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.421300148 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.298801736 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.248727192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.406494825 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.290152568 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.706872199 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.270078378 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.248468789 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.286801847 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.26497223 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.42004352 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.478881582 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.71027244 seconds)
  done (took 28.610688891 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.659806599 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.247134298 seconds)
  done (took 9.06855088 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.248073999 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.286156477 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.28903333 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.248640691 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.24989665 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.296332344 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.275406853 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.302834036 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.288853491 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.285226715 seconds)
  done (took 63.933074244 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.26608313 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.249180704 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.251122757 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.247733313 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.240772933 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.257100095 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.248748595 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.25009831 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.624327929 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.364414771 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.252186549 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.257304028 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.268672608 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.250223472 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.247021332 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.28248003 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.399910053 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.247724609 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.246060768 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.255795084 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.250334557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.331347961 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.289422573 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.247674557 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.364843501 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.629193149 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.254547513 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.257330839 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.428632557 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.249302466 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.249538972 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.250358167 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.251879921 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.844639411 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.715478067 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.259691127 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.271907136 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.25858765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.248133148 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.407902842 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.251954218 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.257951717 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.244297516 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.723453012 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.371963311 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.359294057 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.427812361 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.269832592 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.252870219 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.308541459 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.251911156 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.252875932 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.279981323 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.982682326 seconds)
  done (took 106.168536417 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.287647064 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.631979897 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.411235548 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.262785443 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.026892404 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.902604987 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.259408369 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.511080259 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.275848497 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.245023291 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.529121852 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.73247043 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.262237359 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.297971464 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.810880042 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.308678633 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.247290954 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.000046795 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.258929997 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.246473949 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7307875 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250839852 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.259451631 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.490300348 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.282838846 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679068974 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.558182203 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.799687248 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.263553849 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.245707829 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.693804157 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.270559291 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.293343708 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.249367131 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.497050165 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.578763544 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.571336355 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.260947302 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.252925912 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.249505349 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.271398997 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.674257816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.58091459 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.262344318 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.247228592 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.679395551 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.26209341 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.249504143 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.251212214 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.452778265 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.095637824 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.246953756 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.540751919 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.247842486 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.614950629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.339097377 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.329380753 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7083498 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26280863 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.348265994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.278757512 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.247755559 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.255498624 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.248827591 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.250554606 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.573638896 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.50021719 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.252559941 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.569556463 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.703457067 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.261914176 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.754026017 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.143963882 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.278869886 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.30793933 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.24932979 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.798512453 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.715764316 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.285196943 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.24802518 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.557497841 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.265261261 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.518866616 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.262329155 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.265590727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753746557 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.259821181 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.293631536 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.249316868 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.267082554 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.035974249 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.251198995 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.519608759 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.294162589 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.249303621 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.250931056 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.280078729 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.256964138 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.25001715 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.253529946 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.75290426 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.272295268 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.214396925 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.26805308 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250054461 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.253741924 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.252385872 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.251135878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.47201638 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.811679165 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.27125867 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.249733422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.250921021 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.270659972 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.501550483 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.255104411 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.535574706 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.267671348 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.251674433 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.271347519 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.995266996 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.294269448 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250254065 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.25389938 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.118095808 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.461135401 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.267843375 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.252220299 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.253059956 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.267730932 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.397076439 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.269787221 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.331941381 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.255418295 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.938787808 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287994697 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.253429754 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.760142169 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.25623276 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.133907756 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.275615414 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251197654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.531497252 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.504802386 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.486318238 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.252444224 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.267301881 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931548964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.26670051 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.397424985 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.268284728 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.246824901 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.448609924 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.487713647 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.252520437 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.876574375 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.255826657 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469704794 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.253518818 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.55946218 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.724074488 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.268444973 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.253811873 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940985042 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.944300089 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.924738227 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.258370205 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.518133569 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.194665324 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.727400222 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.25386212 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.254766565 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.820561176 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.253246129 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.256916002 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.254110785 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.254651963 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.403320415 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.425024828 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.460156359 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.262547099 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.681620723 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321399151 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.255072268 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.273980279 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.255334103 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.601865171 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.311910949 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.259500538 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.258540475 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.255019238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.257711037 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.707177524 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.180314677 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.256442395 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.406394829 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867914274 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.270728025 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.256771218 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.962316628 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.49409919 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776328236 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.296358561 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.541161839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.279166347 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.292256141 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994177636 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284961674 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.70569401 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272868411 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.256420832 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831897567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.271180404 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.327444021 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.25641605 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.257683205 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77162961 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.273554077 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.262344864 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.406726359 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274531898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521377863 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.257482665 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.271218378 seconds)
  done (took 1092.062958912 seconds)
done (took 1356.358533407 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.256582752 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.259145088 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.243388621 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.264199824 seconds)
  done (took 26.201983245 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.267638477 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.265357781 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.265811316 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.264577825 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.267502601 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.264844357 seconds)
  done (took 8.776765106 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.291216862 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.262560002 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.263122802 seconds)
  done (took 18.996252172 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.455382787 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.503492259 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.595659536 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.389287243 seconds)
  done (took 10.125343057 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.267164214 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.26498473 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.265867946 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.26754052 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.268457482 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.270095297 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.267936098 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.268456909 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.270131833 seconds)
  done (took 12.590748798 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.012425787 seconds)
done (took 82.882229953 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.24585597 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.245123413 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.081568145 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.255397746 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.867276055 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.243664569 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.260373594 seconds)
    (8/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.313302108 seconds)
    (9/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.241059958 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.994769144 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.503511894 seconds)
    (12/309) benchmarking ("sort", Float32, false)...
    done (took 5.242056211 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.312145256 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.25818961 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.306447644 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.284442971 seconds)
    (17/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.612593153 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.923784724 seconds)
    (19/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.849729316 seconds)
    (20/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.950523614 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.254161415 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.257673528 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.075794219 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.324933983 seconds)
    (25/309) benchmarking ("sort", Float64, false)...
    done (took 5.50668479 seconds)
    (26/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.820690711 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.798601143 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.622642687 seconds)
    (29/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.258685992 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.369872225 seconds)
    (31/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.38432038 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.326265947 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.251819573 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.303860632 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.377638366 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.258780148 seconds)
    (37/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.983400354 seconds)
    (38/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.263164643 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.099829821 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.25446544 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.36476545 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.593680774 seconds)
    (43/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.855880893 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.27374929 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.658419548 seconds)
    (46/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.996899186 seconds)
    (47/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.612970306 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077709823 seconds)
    (49/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.556079342 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.264221505 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.261101542 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.260076888 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.306696628 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.323241789 seconds)
    (55/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.398892645 seconds)
    (56/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.270251608 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.527179555 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.26527066 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.440745806 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.377079936 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.286536621 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.535787184 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.508512876 seconds)
    (64/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.246070416 seconds)
    (65/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.767552936 seconds)
    (66/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.851670301 seconds)
    (67/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.108537218 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.348100849 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.246679107 seconds)
    (70/309) benchmarking ("sort", Int8, false)...
    done (took 4.279647094 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.44464028 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.246496726 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.321079849 seconds)
    (74/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.613762427 seconds)
    (75/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.444824211 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.990242038 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.248853165 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.068993564 seconds)
    (79/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.280123482 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.609759804 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.61549063 seconds)
    (82/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.034447559 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.282990555 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.26785532 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.660552203 seconds)
    (86/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.96556163 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.361512482 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.875611782 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.344295732 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.149911677 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.982121733 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.567570933 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.18556333 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.242765694 seconds)
    (95/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.366690013 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.158782306 seconds)
    (97/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.352800704 seconds)
    (98/309) benchmarking ("sort", Int64, false)...
    done (took 5.414280112 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.359800369 seconds)
    (100/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.397193678 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.607484624 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.249121479 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.245501757 seconds)
    (104/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.269621923 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.640988965 seconds)
    (106/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.263706384 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.606353329 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.294118559 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.262541496 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.636301773 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.268352288 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.082563473 seconds)
    (113/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.78765725 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.519384307 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.822216542 seconds)
    (116/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.470964356 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.256840587 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.272276187 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.304394268 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.316459034 seconds)
    (121/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.484442456 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.168218194 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.648555038 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.674216118 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.287147286 seconds)
    (126/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.353093149 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.440782744 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.050917793 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.980162869 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.360254671 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.885014343 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.259824186 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.28482009 seconds)
    (134/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.477828098 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.604358929 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.246136686 seconds)
    (137/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.390898112 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.991507304 seconds)
    (139/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.265161778 seconds)
    (140/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.282075437 seconds)
    (141/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.267377287 seconds)
    (142/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.285896634 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.656916857 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.395539216 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.638774498 seconds)
    (146/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.363432305 seconds)
    (147/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.213053574 seconds)
    (148/309) benchmarking ("sort", Bool, false)...
    done (took 1.790221663 seconds)
    (149/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.30308854 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.367576602 seconds)
    (151/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.52069289 seconds)
    (152/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.245541214 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.018827972 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.606777252 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.528109465 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.285932714 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.47174785 seconds)
    (158/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.284212678 seconds)
    (159/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.400311677 seconds)
    (160/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.794139412 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.455261993 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.351335439 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.322724763 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.663355892 seconds)
    (165/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.375955102 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.267848832 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.889170115 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001131503 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.354029066 seconds)
    (170/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.293782478 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.508676561 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.25756009 seconds)
    (173/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.622060357 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.313825661 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.248662839 seconds)
    (176/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.306254336 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.248444418 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.248092465 seconds)
    (179/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.251406582 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 6.28218586 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.178108703 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.549615244 seconds)
    (183/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.307442401 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.365938252 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.361302978 seconds)
    (186/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.879698457 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.28633081 seconds)
    (188/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.28322985 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.363667101 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.586876608 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.251737654 seconds)
    (192/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.745365204 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.568257334 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.250415114 seconds)
    (195/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.269195633 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.257562145 seconds)
    (197/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.110672437 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.300271022 seconds)
    (199/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.295807351 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.37992908 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.263730777 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.317337099 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.268944751 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.269003582 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.660732954 seconds)
    (206/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.294263049 seconds)
    (207/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.271000542 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.279745347 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.960234832 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.287036036 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.459305907 seconds)
    (212/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.270817439 seconds)
    (213/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.27973988 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.257518733 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.3282247 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.264186516 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.03654937 seconds)
    (218/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.312143179 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.706247204 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.271208322 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.355138442 seconds)
    (222/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.465850303 seconds)
    (223/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.609718121 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.252350127 seconds)
    (225/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.469070566 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.251903763 seconds)
    (227/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.349610085 seconds)
    (228/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.25110615 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.289535109 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.48400186 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.911013377 seconds)
    (232/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.488338866 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.147402424 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.301597106 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.105899669 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.631329276 seconds)
    (237/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.267192133 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.30006553 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.336196252 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.288732438 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.312420939 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.169265314 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.786928575 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.450937765 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.554952114 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.676042924 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.357149301 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.273142984 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.288076476 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.270523223 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.809031172 seconds)
    (252/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.29900516 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.251874032 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.199308158 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.284460447 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.050251113 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.667439893 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.306015047 seconds)
    (259/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.305435248 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.344362038 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.22845553 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.475448035 seconds)
    (263/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.87399948 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.346714761 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.39698132 seconds)
    (266/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.283546177 seconds)
    (267/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.257324378 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.25688655 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.084272217 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.300579826 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.38045088 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.661369975 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.102615774 seconds)
    (274/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.255144632 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.390574844 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.300646465 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.512834005 seconds)
    (278/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.301197575 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.706842953 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.703520002 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.769459288 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.658090718 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.375533441 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.276338293 seconds)
    (285/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.342214714 seconds)
    (286/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.278913938 seconds)
    (287/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.258523618 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.375263323 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.283693043 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.360820606 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.785157807 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.387678573 seconds)
    (293/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.259458053 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.277104252 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.109172956 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.256758295 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.255228745 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.319106873 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.317139801 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.431953427 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.26005813 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.302062347 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.334445916 seconds)
    (304/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.304065347 seconds)
    (305/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.989751515 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.299017049 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.901735691 seconds)
    (308/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.277381497 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.382670853 seconds)
  done (took 1009.831179535 seconds)
done (took 1011.01360193 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.308528507 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305333179 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.287930546 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.309777567 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.398335156 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.315223266 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.298025299 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.29046944 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.336032453 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.337418533 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.286175803 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.314405966 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.288456625 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.289576735 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.289363813 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303459812 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.279338634 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.290889915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.305823319 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.298275997 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.305598675 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.287158242 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.338017671 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.315374192 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.293331968 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.29194546 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.29255925 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.308451 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.402381076 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.291650972 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.292684134 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.300821288 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.270214022 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28821962 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.284657209 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.308161689 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.301320256 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.300227808 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.293018553 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.321572363 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.650408608 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.304101196 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.290226804 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.290680615 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.290803992 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.293849638 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.29133843 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.297318362 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.304004275 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.305681741 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.640189435 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.320763958 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.293041739 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.291282951 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.301776598 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.290939047 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.294703176 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308677375 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.310580259 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.308421539 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.266955717 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.300626238 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.293699152 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.307769748 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.298715114 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.675762331 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.303415996 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.296547748 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.649606525 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.312042354 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.6742085 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.314611149 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.293458467 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.305530313 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.323200015 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.280062614 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.289898377 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.290781063 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.299153406 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.29108177 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.303076638 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.306094182 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.29823257 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.293653212 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.307316183 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.319645995 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.302438127 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.293238112 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.303382309 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.31234973 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.300885082 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.303922645 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.29791295 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.28843101 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.302958346 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.297994779 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.295703613 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.296702007 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.299355853 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.304164173 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.660176729 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332241905 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.29161594 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.290753811 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.293614564 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.307147474 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.660128245 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.315390327 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.317000926 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.34080528 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.295601184 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.268571678 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.302169156 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313014804 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.303447152 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.297016079 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.290525395 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.270304045 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.671221302 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.330997562 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.296899635 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.293163641 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313006375 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.298017001 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.292473868 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.277856213 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.296044043 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310558333 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.416385836 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.308140068 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.327850213 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.294194586 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.299709611 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.32294776 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312203577 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.32737603 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.298678059 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313705824 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.311888012 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.293353626 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.307410597 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.306280417 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.29737522 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.302541666 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.29133568 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.32371559 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.309663714 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31141466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.318286666 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.417649676 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.295107559 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.275702996 seconds)
done (took 218.308550166 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.355497903 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.294120053 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.375988399 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.293580445 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.391962176 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.391685156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.291423705 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.292354349 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.291620721 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.673124787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.292160186 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.291759641 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.293787496 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.291127789 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.375284077 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.294565789 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.291788236 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.636674773 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.294332685 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.364821702 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.293560418 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.292234656 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.29458604 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.674306971 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.289982899 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.292159351 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.365871112 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.294685196 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.638851148 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.291888587 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.294244597 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.638751666 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.384920776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.311605454 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.305009083 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.301249545 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.394614373 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.310683746 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.375567402 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.377522369 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.379389675 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.333110836 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.289970375 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.295605093 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.296334284 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.295711898 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.292980696 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.323610258 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.295363341 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.293834165 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.637774401 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.306451398 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.294177889 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.294616736 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.294827608 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.325533852 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.294738668 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.297338904 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.386040054 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.297566359 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.360136526 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.67671359 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.677915256 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.297609633 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.295925964 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.295698469 seconds)
  done (took 145.835232353 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.364046672 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.37059833 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.405554141 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.319636014 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.349602775 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.410962519 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.317518409 seconds)
  done (took 10.746689686 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.30346333 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.299332464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.346624677 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.347275735 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.298275918 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.445173554 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.299223569 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.309318414 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.296632226 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.350505883 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.299469171 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.297626948 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.304502693 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.29167761 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347506514 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.309813501 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413772798 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.300497961 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.298764582 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.449700497 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.296587505 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.305313249 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.350329171 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.310303594 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.301739269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.305707828 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.86457991 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.299249268 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.29733445 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.299580051 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.296818439 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.336341514 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.300732775 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.300775442 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.297666535 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415683399 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.299146201 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.299026616 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.300270693 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.296955204 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.300295347 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.300118571 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.299884507 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.298113142 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.301471407 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.322727672 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.301151234 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.300886985 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.300603977 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.301544769 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.350751947 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.301103871 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.298139019 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.298238091 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.355233897 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307972903 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.301662462 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.298903504 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.302187242 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.299007382 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.45355819 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349062274 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.302199138 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.348198399 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302735666 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.302403282 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.301606195 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.301211717 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356105935 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.302826115 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.350356224 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.29927715 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.456743281 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.325215832 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303539497 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.304784777 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.304183005 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.302184927 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.300917348 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.308185532 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.301584288 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.303004635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.308263712 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.300566986 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.300334531 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404484741 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.411910134 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.300483878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.315830966 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.309478771 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.301441978 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.355701381 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.302355988 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.300148291 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35430206 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.418158334 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.356729071 seconds)
  done (took 149.956841935 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.307449518 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.311263788 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.305907147 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.319480794 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.304796035 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.304304822 seconds)
  done (took 9.068465481 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.306372101 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.305204144 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.304550198 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.305020066 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.303632785 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.304956926 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.304359957 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.306022619 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.307704796 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.305740155 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.305449767 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.305876249 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.305685296 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.305117688 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.30505775 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.304411285 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.304379945 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.302513074 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.304112175 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.304827569 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.410487324 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.304811158 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.304842738 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.306042609 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.308591761 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.306385678 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312324225 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.30575637 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.304838443 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.312156034 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.323845771 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.30549694 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.306306005 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.310327489 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.309374433 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.307178183 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309218536 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.306695187 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.304345169 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.306845692 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.307372531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.306745385 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.306509294 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.307395256 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.308248166 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.310459166 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.310471654 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.314364581 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.307736786 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.307092037 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.307759339 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.306743439 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.307200657 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.308195232 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.309791694 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32671537 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.310473415 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.307777038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.307351765 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.30843241 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.308374537 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.308334509 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.309973014 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.311332215 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.305389382 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.308901921 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.310145127 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.311384361 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309157947 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.30896896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.308842091 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.307010715 seconds)
  done (took 96.478715839 seconds)
done (took 413.290815366 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.606305391 seconds)
  done (took 7.82582067 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.321547589 seconds)
  done (took 7.544299247 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.948662483 seconds)
  done (took 21.171864757 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.354603717 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.409070717 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.30626414 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.316703918 seconds)
  done (took 26.606628479 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.42986192 seconds)
  done (took 7.650271612 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.303665371 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.313985925 seconds)
  done (took 13.840084059 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.689907212 seconds)
  done (took 7.910448048 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.421861194 seconds)
  done (took 7.643543271 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.729474048 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.32146645 seconds)
  done (took 14.53053309 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.284253165 seconds)
  done (took 7.506826969 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.062981155 seconds)
  done (took 8.286146078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.314564024 seconds)
  done (took 7.537731405 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.357182557 seconds)
  done (took 7.579134122 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.00383341 seconds)
  done (took 9.225475777 seconds)
done (took 156.07907345 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.304794355 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.312041671 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.310226159 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.312035249 seconds)
  done (took 26.461177712 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.346458865 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.345790674 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.346095171 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.356390111 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.348395696 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.34504649 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.337338506 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.340127378 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.357038309 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.349325375 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.346545499 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.347343695 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.346284168 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.337983469 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.347245495 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.347702285 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.356956397 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.347900474 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.338562729 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.348411453 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.313728521 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.356208331 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.348765407 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.313298683 seconds)
  done (took 33.492178386 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.833764192 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.384412258 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.467156215 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.366088665 seconds)
  done (took 7.275937149 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.365056328 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.367435332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.378177327 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.417490891 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.445983393 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.382524554 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.340830579 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.33500457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.320692612 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.366414265 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.442381573 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.382914759 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.45893132 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.314871795 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.543621242 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.313262261 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.31270636 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.366366482 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.418044724 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430839176 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.315004241 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.366127775 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.368642098 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.382873521 seconds)
  done (took 34.361464895 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.314230609 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.321930051 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.313473502 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.312750983 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.321756835 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.312949919 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.314522322 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.314993987 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.314240131 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.32155801 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.312704021 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.326200075 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.313237216 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.314601267 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.321017861 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.316778717 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.320415643 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.314527914 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.314198632 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.320001688 seconds)
  done (took 27.562382968 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.308468554 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.16311294 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.660198828 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.566137904 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.309454956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.308767038 seconds)
  done (took 27.542348342 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.383494782 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.528206081 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.31463036 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.659081206 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.749847137 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.33276107 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.317234946 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.548110505 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856340869 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.848266529 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.369759232 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.380101778 seconds)
  done (took 19.514636399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.322341631 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.313077206 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.322604342 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.332457212 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.368169906 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.335376456 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.32437159 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.310893164 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.37463951 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.388420196 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.334997117 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.37018785 seconds)
  done (took 37.326296904 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397503969 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358450139 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.199263448 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325475431 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.031744659 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.523699269 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.332363847 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.758321993 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.315543355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584806916 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323243345 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405209618 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.567067636 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322971126 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.318716144 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.288312025 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562167962 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767722413 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320956785 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.155199583 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344943152 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.322917698 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.241055312 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.345488711 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524373975 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.454396577 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.573718785 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.090445016 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597884298 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330286204 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323809314 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312870766 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.587597366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97469676 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428061518 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324701918 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313217604 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.87787453 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.310890957 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.170505225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.119987347 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32018737 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324820117 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312780965 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250295894 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319404593 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750768375 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.320193936 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.026219353 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315083059 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325939209 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408951325 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.31870358 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.884322084 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315072287 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.341893767 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.3126689 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340824913 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906858695 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.635678556 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324042086 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.256277628 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.316523697 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.180046141 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945018096 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.438398388 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.318423071 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31995252 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250960414 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.162004969 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337650131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462749172 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.339178381 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96539044 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002125695 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344778336 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.251367306 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834968783 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.324098967 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.252651837 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543426308 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.094103122 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251733292 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.262454838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.250218271 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98399204 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325181904 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.674168527 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337712388 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.765069529 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.327806927 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336694035 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342128206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.540208036 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.198508916 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318377303 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.157211394 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46573062 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338548233 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.74739485 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252712225 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.320548843 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573653525 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.529689004 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318250901 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.320812871 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537106178 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331430555 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.337778887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.327203699 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.334956266 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.873995943 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351892701 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.632309137 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340323464 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.096322542 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005953308 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333667844 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.42524677 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318829482 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56161126 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.028382906 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478770215 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387745203 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321023796 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318500832 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.25809498 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.914766959 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.479082997 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.316329999 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323454029 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.333312645 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.320758459 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270067885 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.317221109 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343891464 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.102558725 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.542988216 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319115441 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601766134 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254000233 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467699932 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.329087645 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.543237459 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499646568 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.342273613 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580305472 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327418903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328913846 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336992851 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340529732 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421418184 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342836442 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.323127523 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582650061 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.325044615 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.324974167 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.280715451 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.108270234 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325280418 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.326807056 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320815434 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88335488 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32241328 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329579654 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.210521988 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.33688641 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390345925 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.327696762 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.332949293 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.087700511 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353254126 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.328712839 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.332184183 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552328556 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332893272 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.197302566 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407338257 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.518294776 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885677998 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358897401 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.257346053 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.034899719 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.015760704 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323464707 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.521659098 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322653894 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3341451 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335240466 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322626725 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901104944 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34855023 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.201698679 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.336956031 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334430702 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.329422913 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323076665 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.059606054 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.689641374 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343129819 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.341657444 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46753602 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.338440324 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.260059157 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.84152666 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330065155 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.324615437 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.101418921 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358598895 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.197372138 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801501418 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.584176314 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325880403 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336965534 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.369139224 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.362081326 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.325444055 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211842976 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351887002 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.354469643 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339209516 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.336709565 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.259225545 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.693543085 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895151501 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025125136 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867580425 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254938215 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.327484993 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.227413088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.758767549 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261676232 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981181299 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506251162 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.77485384 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271959889 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523932605 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.503248224 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09169019 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343713831 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553308344 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230138431 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.218444957 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364405617 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.53851131 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36132757 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333297703 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261230041 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.845536867 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563869809 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.184541433 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409431287 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766086033 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233578307 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.125200638 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.345061186 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.606177816 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509201818 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.872559075 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.714910391 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337860787 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332646066 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799671226 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.333878418 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853214581 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935026469 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.345536901 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.549030798 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263549845 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338957939 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.339486349 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.323966369 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.578039914 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.344006087 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.589504326 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339328191 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.261754523 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33408426 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848929262 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.202662461 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.334256286 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328796422 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029739363 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335566231 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620904288 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.346024972 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.063750665 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354303816 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.262800069 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264065709 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.02313287 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332248467 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306036777 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80013815 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.350730873 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336013711 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327482983 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174053921 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.581538249 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.336927006 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89104433 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566565496 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327152427 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348452848 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.425129393 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271692702 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.325774464 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.223680798 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.560858485 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.331958086 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.569243918 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.235061418 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.227217334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413379223 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537839868 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.21891567 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333518711 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573712366 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.054765851 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.32881498 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007404721 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36716083 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328255587 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338169535 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336963385 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346941083 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415498692 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33614223 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.337215415 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.338029191 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492153914 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339736881 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330388446 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.342017393 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421924568 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699157285 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.055860082 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.104580548 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900263969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057879572 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.912881641 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356593317 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328274398 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337143118 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262838807 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479333639 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.854121893 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601311953 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45704847 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.336935572 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352033033 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280962795 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354383548 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544107133 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602950279 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.300643532 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32851931 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117085652 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.209438429 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.339221947 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.539539342 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801913934 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864901982 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446695054 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334819976 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.764011725 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602960472 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420088845 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330885363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917860131 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.342738731 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.607044953 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.353402193 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339740669 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477999292 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339006125 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989803867 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.358202405 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.490568856 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.102900561 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.342104336 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.586443144 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.781780198 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.340448594 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902860523 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.032424081 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592858103 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401449152 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340520399 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.436800539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478229914 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.333450145 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223751312 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330568898 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173956264 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.04186616 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.34137733 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903616071 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609259971 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.328549142 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.337180777 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354339331 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.340784838 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555266848 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99860825 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555014651 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343659297 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335677395 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.901925716 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902798114 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360887414 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266016049 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.335948517 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577095771 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.591272809 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354597225 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.786101331 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.043018782 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854437969 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.30441251 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354176543 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346322512 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022365616 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902986117 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.106709456 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807130393 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.991323942 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345962764 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613161441 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.338439314 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.332849424 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628971852 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.337562431 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334084576 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351225669 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.904560338 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104038257 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.345170268 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.276904138 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.272084783 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.560016216 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333955315 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270533892 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.334403009 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.506331549 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335842568 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464004548 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34691118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.335852698 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338996785 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.088719915 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618374767 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.339503163 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.335597659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.314999563 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.339399892 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36443897 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591534167 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340448724 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.009403158 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.686745635 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589611453 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348745818 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.321796612 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.339121639 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336045129 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053300221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345105698 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.3566076 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87452569 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.350137683 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.350990973 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340095119 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.553147115 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547806584 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336225927 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348910175 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348206078 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356339347 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.243920426 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103815558 seconds)
  done (took 1631.954217767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.371429761 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.337057093 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.355169403 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.381073705 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.355523401 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.391647723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.405190018 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.3728671 seconds)
  done (took 52.222045877 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.336401377 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.492371729 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.366447307 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.341890254 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.346427296 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.343873249 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.777143832 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.357039452 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.346415133 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.347954488 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.351135581 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.341060907 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.958968643 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.34843771 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.344067642 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.337646338 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.34717765 seconds)
  done (took 65.337464916 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.339829635 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.861308877 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.439998151 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.344665343 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.298482742 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.36585374 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.994625187 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.341405297 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.341024565 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.622180402 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.00537987 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.370486156 seconds)
  done (took 84.581049507 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.346327834 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.347704278 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.349276412 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.346833994 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.346009299 seconds)
  done (took 7.990129926 seconds)
done (took 2056.844813534 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.620664513 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.994401228 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.968274483 seconds)
  done (took 5.216358492 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.487249134 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.537226019 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.658408521 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.662671815 seconds)
  done (took 7.600903733 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.621627765 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.714901618 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.525836303 seconds)
  done (took 6.117165422 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.726261432 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.36788964 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.347525325 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.338376702 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.34275902 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.344314641 seconds)
  done (took 20.282581758 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.343833027 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.34640475 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.345305977 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.347924011 seconds)
  done (took 6.639605286 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.320310076 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.0169006 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.323290906 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.342834463 seconds)
  done (took 18.259329548 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.090828306 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.103821615 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094706674 seconds)
  done (took 7.545608569 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.34206414 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.190026872 seconds)
  done (took 9.788041656 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.630506251 seconds)
  done (took 2.8874312 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.477806426 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.669857513 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.371984565 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.262028448 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.38120411 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.073710967 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.925889938 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.524940786 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.229919786 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.449850561 seconds)
  done (took 27.62470967 seconds)
done (took 130.279220028 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.083612804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.724371229 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.549524893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.054024193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.573160146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.549479633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.539971936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.022392743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.565694766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.555917111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.099658146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.573977747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.702536885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.724700464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.70423104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.347200031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.575216288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.117902376 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.746351089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.976727238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.548696188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.691628192 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.9279355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.711185589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.569602728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.501999816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.269845133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.343738703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.912644211 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.286553001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.503167797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.152721398 seconds)
  done (took 189.464992243 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.344589027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360692956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.345073112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.362596673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.344363343 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362264721 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.365320625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.344518916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.344447837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.353144943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.344174845 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.356511961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.348116182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.362424379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.345772715 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.344865339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.368296757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.348268382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.344933507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.345410087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.360880422 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.3605228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.345036374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.350790034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.348895955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.345453005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.346101673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.368767775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.345837371 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.361755139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.346279736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.346656673 seconds)
  done (took 204.523264821 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.345780717 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.371847176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.346207287 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.351508262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.346510687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.347892117 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.348355466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.348046549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.349805694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.346362208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.346513758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.363416426 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.348408625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.347475891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.364206541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.364396239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.347816512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.360314337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347739692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.346327641 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.348046471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.3473278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.346946718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.370667727 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.347497477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.34668713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.365143395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362235519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.347094656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.348130832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.348730439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.36242545 seconds)
  done (took 204.542144351 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.549576002 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.355632002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.356534361 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.311333328 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.357005857 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.356723387 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.352423692 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.545796668 seconds)
  done (took 14.44745299 seconds)
done (took 614.235269766 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.607238599 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.328575563 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.552772076 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.375762733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.088035819 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.398396637 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.375988068 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.538569216 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.26765241 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.545185012 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.561449675 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.391619365 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.712343651 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.379676402 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.623450797 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.474554545 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.213117025 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.336609662 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.684453129 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.86041969 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.633130607 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.808171378 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.561507439 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.263059177 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.712030817 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.792686432 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.041321464 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.206808587 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.393008351 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.686673533 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.916144805 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.296401136 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.435122331 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.434412309 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.492529273 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.473965747 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.263494411 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.430340838 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.574402617 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.568596244 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.857570558 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.08593035 seconds)
  done (took 91.508077919 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.34040033 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.340374181 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.34030318 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.340458909 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.341969083 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.340410031 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.33953576 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.339962236 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.341118223 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.340639161 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.339365143 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.343027671 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.339855198 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.346534921 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.340226409 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.34106177 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.341492851 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.343960341 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.340489729 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.341775138 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.342865656 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.341235564 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.341235813 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.340014988 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.341284375 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.341203748 seconds)
  done (took 36.138819042 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360543749 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60469488 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.759043305 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.366797694 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.361951877 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.36394613 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.436465387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.362323314 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.364307663 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.364521503 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.529197689 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.364540582 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397144832 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.786520814 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.365178186 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.362372908 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.363749431 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.362469284 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.6145421 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.372863444 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.460012064 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.364134649 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.438293095 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.373429451 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385589565 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.363250804 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.368641216 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.876812254 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.38207619 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.52844065 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.13396783 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.440233999 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.82469074 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.788822998 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.133748309 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.369090415 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.363538187 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535226239 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365012 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.364268205 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.437777309 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364937307 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.770942697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.98142817 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.383495008 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.363594493 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.89510828 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.551828697 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.599521833 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.372112382 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.799522264 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.37089742 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.366945595 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.365968078 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.599716512 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.37073106 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.36491183 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.886956189 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.392511274 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.439451842 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366135942 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.364606112 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.630511538 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.364729361 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.609973738 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.366565758 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.373306867 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.384363661 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.772101579 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.370614732 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.998577434 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.385573666 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.365789454 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.530943914 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.609391215 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.929798936 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.391522524 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.633215665 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.839501871 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.455034865 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.371926626 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.867470041 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.459440178 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.370367482 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.368601023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.36786486 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.367095849 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.417127063 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.438005011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.923614199 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.006855317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.908900252 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.464149697 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.382377633 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.367301274 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.888726983 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.384851475 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.367489613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.767366722 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.000206295 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.387767526 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.375990884 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.002187321 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.385984163 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.444447501 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.373478791 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.780340984 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.372214603 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.418868432 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.368129351 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.3764526 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.390081999 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.443692998 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.375375841 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.368038569 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.972159257 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.562675929 seconds)
  done (took 179.302164693 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.365807129 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.36103678 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.361780603 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.36054831 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.361846924 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.370272698 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.362321481 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.362749193 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.367664925 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.361601078 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.361610977 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.361469881 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.363673784 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.36937935 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.3745171 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.370674341 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.976073865 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.365860491 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.361605006 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.378697178 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.150970358 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.369211381 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.361456611 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.363247705 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.363336715 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.364335302 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.370612289 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.364437354 seconds)
  done (took 152.90279112 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.370415607 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914898308 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.387229822 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.495818273 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.389397605 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.368062785 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.495164454 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.426225091 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.387000339 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.369490031 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.368623376 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.661726163 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.373004587 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.872176868 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.562771578 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.511150246 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.876657855 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.394565308 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.369810479 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.369020633 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.498541778 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.378690913 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.661289683 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921702583 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.395271336 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.922795254 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.359571411 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.372426211 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.369781582 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.922772734 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.390483936 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.662493699 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.452323463 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.42818814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.934881803 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.888481604 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.895629003 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.517281676 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.373413406 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.370123951 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.369981661 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.355053188 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923783427 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.39625404 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.37204741 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.913387513 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.393565039 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.374056243 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379262296 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.370397549 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.428399014 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.44575634 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.684352541 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.932568605 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.466029903 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.383755145 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.49858497 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.755689972 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.375084396 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.873254805 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.359421435 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.923859849 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.390156492 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.357634359 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.373818924 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.378097339 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.516137119 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.498661788 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.880197422 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.390192025 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.874270502 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.532300136 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.372795297 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.372005454 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.375178241 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.925294509 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.890272077 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.532181682 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.504535157 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.559910479 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.365696072 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.373344798 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.357675615 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.447776015 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.381139769 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.923519507 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.889940603 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.390731882 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.374011272 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.375955287 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.3753736 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.54163507 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948083947 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.464725572 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.869155597 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.683707408 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.668751052 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.376296989 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.428892038 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.392155498 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.669316258 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.377740874 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.430252583 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.817206936 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.669808183 seconds)
  done (took 163.250814202 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.611155821 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.530806492 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.463680959 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.502269888 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.952701123 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.932115007 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.572831375 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.513384505 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.47984571 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.636644347 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.490755389 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.465492835 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.54056219 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.451739547 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.093415306 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.461816892 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483762472 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.533336124 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.487523922 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.367769491 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.998107403 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.658270693 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.545287398 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.201998743 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.462403223 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.117888448 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.924653477 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.90436601 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.550622276 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.625975698 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.889527606 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.472987711 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.310935323 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.032542891 seconds)
  done (took 65.550820154 seconds)
done (took 689.917577995 seconds)
SAVING RESULT...
DONE!
