cset: moving following pidspec: 3836
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.347624811 seconds)
loading group "string"... done (took 0.558109878 seconds)
loading group "linalg"... done (took 7.654974321 seconds)
loading group "parallel"... done (took 0.168710179 seconds)
loading group "find"... done (took 1.274776638 seconds)
loading group "tuple"... done (took 1.943462817 seconds)
loading group "dates"... done (took 1.406974358 seconds)
loading group "micro"... done (took 0.243817692 seconds)
loading group "io"... done (took 0.975884714 seconds)
loading group "scalar"... done (took 40.852713142 seconds)
loading group "sparse"... done (took 13.424640116 seconds)
loading group "broadcast"... done (took 1.036728837 seconds)
loading group "union"... done (took 14.289882738 seconds)
loading group "simd"... done (took 4.789605457 seconds)
loading group "random"... done (took 9.691259605 seconds)
loading group "problem"... done (took 2.009498318 seconds)
loading group "array"... done (took 22.746605033 seconds)
loading group "misc"... done (took 2.048303242 seconds)
loading group "sort"... done (took 3.465162706 seconds)
loading group "collection"... done (took 19.730889947 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.578759577 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143062848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150738059 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130694947 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205766637 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156887319 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158649622 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099870678 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.001030806 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179687535 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155777477 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.530724185 seconds)
done (took 5.231215071 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219468379 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09608397 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10506189 seconds)
  done (took 0.883957376 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078175164 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146988541 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095829015 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079279881 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095636964 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078400984 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095391305 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07838125 seconds)
  done (took 1.358548414 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087794599 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098468358 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083193485 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096908002 seconds)
  done (took 1.057501627 seconds)
done (took 4.291291444 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737600113 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272589375 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206742324 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.467498342 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197420386 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219653359 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678963983 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.371862182 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256794116 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.1002525 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144130402 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389597603 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137826333 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.716425755 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090272401 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.1250078 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.185020066 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.462233983 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083708104 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110458564 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117149085 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141634452 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128414463 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091154558 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184323277 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081942603 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19431451 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108762765 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080615475 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.276046051 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201027273 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695186836 seconds)
  done (took 10.984432352 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11139526 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133906486 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097795422 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139029455 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135126004 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099127044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0840306 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096740846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122489534 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176696018 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130848919 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121397047 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095054988 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082445144 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114376941 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244116199 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119186963 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098951564 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101248984 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087829853 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137691679 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112192352 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109621612 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092784325 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166518595 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221541291 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110678704 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125558551 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096466256 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112036454 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143268111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143153887 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093552788 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08087202 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173347411 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124052585 seconds)
  done (took 5.140167485 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.092557826 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191012681 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121723306 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171848247 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080717198 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144159825 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094978127 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113696943 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257593695 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.106634989 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.489421135 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142465091 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099857305 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099467017 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082682781 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098107917 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.624323894 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123779292 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151624338 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114828371 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102316238 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084753328 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.7243168 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098219189 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081263104 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097841963 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066543764 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161934685 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102223399 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.26089757 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.084250679 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119806574 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098556244 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156612553 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13257606 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109471386 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137057631 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098073015 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079216011 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095868642 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175885573 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087716425 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097900384 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103125194 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135933401 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134143708 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099231081 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096835169 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.201883705 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080371941 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115354404 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.97084765 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182543336 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103721766 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096770947 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288470025 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122127544 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097222141 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079123728 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.309150265 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18916685 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098789648 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080791199 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097768336 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081824357 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.398897611 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081298535 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990855107 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083831942 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107244197 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082911166 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096948539 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1042525 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087691168 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115219881 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079961165 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095084646 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079381873 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097342574 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081255699 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099641139 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10644429 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217452479 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079798927 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095765367 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079248186 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096764033 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115879338 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110994331 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09930185 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094741523 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114983593 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099073446 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097078531 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116794239 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098886412 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106685064 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083452302 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143559025 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096869911 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.163851956 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095730076 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125801187 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099410183 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115675033 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111669093 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099962065 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168802724 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078296089 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096378599 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080328017 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096446663 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081397768 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099833035 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109331477 seconds)
  done (took 23.532617422 seconds)
done (took 41.438529238 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.325675678 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104483238 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104347133 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10400971 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101413494 seconds)
  done (took 1.507115007 seconds)
done (took 2.245948451 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287757567 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17458313 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097969733 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167739548 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093344297 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166273222 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160447357 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094828333 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220328347 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094219737 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161954173 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077736907 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094739865 seconds)
  done (took 2.660262085 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095410541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115311982 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084235497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111033626 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078251961 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110383369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093622433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116197222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110693423 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08589301 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093478679 seconds)
  done (took 1.830317494 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095798765 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113569947 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083381388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110626398 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078118182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111503345 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093668778 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11745281 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110333878 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086574178 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093590056 seconds)
  done (took 1.826076543 seconds)
done (took 7.047534467 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092129777 seconds)
  done (took 0.820571638 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.956451069 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.771691616 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.115025841 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149987998 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316238817 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.172917725 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.471964271 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125261633 seconds)
  done (took 11.018111612 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115993605 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.114755136 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.10122828 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088620341 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10198007 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084962262 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099556615 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102629554 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083013333 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102938161 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088310877 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100510058 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101887962 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086774985 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102210843 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085251558 seconds)
  done (took 2.360879389 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120375784 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119790935 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106919893 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108626698 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088691829 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106066199 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107613754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08921428 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102899384 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103955932 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091782736 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106883272 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103812902 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08120624 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106126806 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108698661 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086589561 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106732971 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108403674 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091737438 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107978474 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095824907 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088088773 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106802872 seconds)
  done (took 3.291190314 seconds)
done (took 18.22372873 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160594441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109867002 seconds)
  done (took 1.011156371 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096617017 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114238047 seconds)
  done (took 0.957563591 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099534291 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096679918 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123800805 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110719648 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081434294 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097439975 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12079537 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08174043 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096897818 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080985074 seconds)
  done (took 1.740684771 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084162225 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110800936 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102026602 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096097259 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106661661 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095163482 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089362046 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099108983 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110603476 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078408313 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103926629 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114940453 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087196348 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117264277 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104884253 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084085826 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10325971 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099519952 seconds)
  done (took 2.54166294 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080578996 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097587687 seconds)
  done (took 0.929989868 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08251555 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094751793 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083496049 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09800568 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094063749 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078419774 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094376268 seconds)
  done (took 1.376472722 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485072201 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136741543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261680898 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102885517 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104523844 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30437113 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098725532 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085568877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104298262 seconds)
  done (took 2.492437328 seconds)
done (took 11.794234956 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093733299 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116203793 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112942636 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.468990837 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108230856 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099292007 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147384808 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256112967 seconds)
done (took 2.159369824 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146028345 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604609534 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428713261 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.233410211 seconds)
  done (took 2.026413412 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.407053002 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098882972 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084049749 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082249619 seconds)
  done (took 1.434648425 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081186871 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100479393 seconds)
  done (took 0.943865492 seconds)
done (took 5.311316452 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08154211 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097732378 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.078735281 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097863913 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078395236 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096160526 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114228514 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099375647 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080899707 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.099116057 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.098907591 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081422007 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094737019 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078648427 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097055964 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078589433 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095046815 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079464737 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097232448 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079285707 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094954393 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081705903 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094598837 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079408158 seconds)
  done (took 2.951134435 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102219282 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098693094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104268469 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087170059 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103333794 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087533975 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102950534 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098465008 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087913388 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101800242 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101349673 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085713191 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09936748 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086057109 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100205635 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102889393 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087651514 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098116639 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083897404 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102330704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102937705 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082030054 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102098142 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104390588 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086118111 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102114763 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084077257 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099253922 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10307249 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085965779 seconds)
  done (took 3.639958888 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085760301 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094390218 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080823582 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103313783 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079026548 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097345962 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078981454 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096059934 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081065406 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095210034 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080816506 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096192127 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079095175 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09708536 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080146862 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10043319 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113321983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079892723 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09522981 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079675181 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099539314 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079401879 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096105372 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079079047 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095202921 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079661211 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096207924 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078887721 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097023875 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079252765 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098969 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08243921 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096237831 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085159711 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099759172 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077986542 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099133047 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07769688 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096921372 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095190883 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078875597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095359437 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079400767 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101592691 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079291665 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097139768 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080193384 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096802744 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079749294 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098739467 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07835439 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09637764 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080757223 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096888081 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082859008 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096562472 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096326984 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078284313 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096921191 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079215194 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095350234 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079201027 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097696375 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080573622 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110543724 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08637588 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095653489 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08164862 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097681747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082316301 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098316303 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110754155 seconds)
  done (took 7.239664215 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104566214 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127815355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.099205947 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098255873 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078644476 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097152569 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083766685 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096279181 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081904373 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.104055688 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096501958 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081728963 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098083867 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094093473 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096984517 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081970666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102898339 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093625681 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080481265 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099792941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081510155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09984616 seconds)
  done (took 2.849034794 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211960905 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106102202 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144044686 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107560017 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083774895 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108264618 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102284542 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087741356 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101997554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084337863 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101788467 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.214873515 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085228132 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101559973 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101319564 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086422471 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102738935 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086188004 seconds)
  done (took 2.790158045 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093981154 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099386591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099731797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099638695 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099231784 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086009322 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104128582 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108603756 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084332517 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098625848 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092026252 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102589272 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101933441 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083524655 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101104891 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083090685 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101739049 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083058478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10966169 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105303805 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088738149 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109603455 seconds)
  done (took 2.911841864 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097856167 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101556358 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119785625 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08586667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095970471 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080844571 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106139351 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082102205 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108379796 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100872098 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082616745 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097272117 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088658386 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099143217 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105518954 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082992059 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101484708 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082245472 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101374806 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078095265 seconds)
  done (took 2.676175974 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10319861 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10124825 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100405518 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093231969 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100947366 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083407699 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111857711 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100227427 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083878333 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127191018 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100485736 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083779705 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110544895 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106225242 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100081801 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092808002 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110151048 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109536796 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083632652 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102134669 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126869619 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084194199 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110836495 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100561385 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084177029 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101182262 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10039658 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089297093 seconds)
  done (took 3.581501654 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082487222 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098947484 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082471674 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096951 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080114606 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096761688 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080081548 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09594736 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082152486 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096145037 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082224334 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098953804 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08186815 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098872551 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082919825 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098980579 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08234503 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096640381 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079850674 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096403138 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082136374 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09865082 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082273448 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096819468 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080289014 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099584942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079359856 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097718278 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082839474 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097193767 seconds)
  done (took 3.469775345 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093084308 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107848135 seconds)
  done (took 0.981156782 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080233647 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115441903 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080390711 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103264898 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088045876 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.1015469 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107266865 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087147465 seconds)
  done (took 1.543789427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097642433 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110784943 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084219426 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114837322 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109420031 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099063713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172034421 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101231243 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10639535 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080207407 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113464535 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08241172 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106390499 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082997968 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106433142 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089688123 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097785816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105678974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086391547 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09857673 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087382346 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10952318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084652627 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097291138 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101516112 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09284151 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112929686 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083863934 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104246675 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106881489 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088209056 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09362751 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08350711 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100887464 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080415639 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110094866 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11694894 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085623182 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110486435 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101359414 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094877838 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095241552 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087910304 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106429425 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110511608 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084461595 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100253138 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078055394 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097792931 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086016807 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096155226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082416439 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095227834 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089311178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105529165 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111687878 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082249935 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102171148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085791598 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104005695 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089528183 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103507256 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103113109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083152992 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107272971 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088027804 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112427014 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095962845 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078093178 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098510636 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094659937 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124998983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107709164 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085264971 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101333904 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081747037 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104397493 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085446671 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107420912 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106893075 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083496134 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107490752 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090570264 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100906293 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102328846 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092589987 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098470011 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085926719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098854721 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118291534 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082680842 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098170938 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081967629 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111899792 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086127341 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100654936 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079952773 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109258997 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094179966 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084296541 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101056811 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084076173 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112902587 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106928501 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090071445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110487874 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106904153 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083043775 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.104283745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079848325 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101762565 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085706554 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108024183 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076600984 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103905526 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083981238 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102078854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109802316 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082509673 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100549753 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091047641 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107307597 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098692006 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08064831 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103317085 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084078768 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104196267 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092086785 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099819911 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077255008 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097044682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103587286 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084196886 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104044244 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088315085 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104830792 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076243222 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099726599 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104474645 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093045181 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102303193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084312488 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107732158 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101398096 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083227937 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107797136 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085460998 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099644352 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08882027 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102412083 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077564721 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105013048 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102890258 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081902461 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104377771 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087341152 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104272403 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101199377 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082092629 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106955532 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08491275 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099616946 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082920149 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099586618 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112678167 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085911131 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09584868 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081442477 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109098974 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08094166 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100806949 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081509354 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104111842 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101258032 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081876264 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099844676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085314848 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114104006 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105436585 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084790013 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106399063 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095273465 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102028581 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08568909 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102723513 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102471482 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085586298 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111430363 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089208004 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108018566 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103709121 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080493867 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107834034 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092292887 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100965016 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081675609 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10080958 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105298449 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089834834 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10553818 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085435516 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099908449 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084095171 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105524562 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104089536 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083915105 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100436837 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088859723 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100653303 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107857099 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085901663 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111208163 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086802976 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096716419 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086932288 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100600147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106881995 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079819121 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098695165 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083688282 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102516493 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083470294 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104080235 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077952781 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109207543 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10879933 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083612969 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100332959 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084986432 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107727013 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085022495 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106199718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.08604965 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108248573 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113227056 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08300634 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10464724 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093463821 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104335633 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094579148 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08914085 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100460083 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083281869 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100457555 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081793941 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104783613 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111108878 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091536881 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094763047 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086982381 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100252903 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082192682 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097479333 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087477378 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105590465 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102592045 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09170081 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102981681 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087492373 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10584894 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082540992 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103428664 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102931861 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087446301 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102039287 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086631873 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100536775 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085976366 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10102984 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080374934 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104382963 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101694556 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084543473 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106777246 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083713007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101840176 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086114101 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103324183 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102104307 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084481378 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099773864 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088182186 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10194242 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083561076 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104820418 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078931155 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110218544 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082935204 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110159338 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.10110717 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079861762 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108171884 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085888288 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108293379 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102567527 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085814864 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103178242 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082985495 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104685659 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090605369 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10091649 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113946958 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093325777 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102622352 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086208085 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102644947 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085071914 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102224954 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10305176 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085392 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102105521 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085035253 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107510454 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086966197 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103311275 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08553708 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104125005 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101359543 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08636602 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095612743 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084328536 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100886333 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084226374 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113069753 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102622246 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086920545 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.10021179 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085906907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100511432 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080452959 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111241798 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110953532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08491875 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109668475 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082970495 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104082716 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113010147 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0794242 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099831104 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082235017 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099926323 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092395445 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103275987 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.101405308 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102054784 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101755089 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081236445 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102560456 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083034305 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096676927 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082033841 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106386662 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086645077 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10097906 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083737229 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106075326 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102851238 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094814603 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102409665 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084241364 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103135588 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081088421 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101539151 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100479894 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087826247 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102640541 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082214053 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099080782 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083684967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103210884 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085054102 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102635608 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085389504 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110196163 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101672025 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087823245 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105846603 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079279083 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105341955 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083636209 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102706546 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100363859 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088303901 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105552537 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086157885 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11177451 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083301454 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103791217 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101808548 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082581958 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102034914 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083911884 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102587003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082970376 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104112114 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091505242 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100906495 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104514983 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08412801 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102553025 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091677639 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103766447 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086563999 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11203723 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10510124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085883726 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11269216 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088003325 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106846674 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103318373 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085462899 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108497687 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082928533 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109424131 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083152701 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104282942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103894858 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082198667 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102477237 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084875194 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102228973 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090791377 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104642342 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083355269 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102894211 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100198393 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085628228 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106042212 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092887701 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106223987 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087021521 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098908382 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080732965 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104926425 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10021472 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086385336 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105303749 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091130493 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106129192 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084958201 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103650409 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111726695 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091591194 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106638648 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082109646 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107469565 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084808966 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.10620816 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103264321 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08548693 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104466965 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088580175 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104995844 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085296329 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111388075 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087374124 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105531183 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104018977 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08618356 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102827631 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080036061 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104870298 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086654175 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109699833 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105600727 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085277446 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114857571 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084644665 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102985928 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089220104 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10322905 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107400198 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080466708 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104287088 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086490752 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104039002 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080031909 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103077706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082106366 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106840079 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083605357 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099855021 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115000696 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094114407 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106576156 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082404866 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102729576 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078649926 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099845593 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101398686 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086483001 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104212028 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095961393 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103052847 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083030729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099019414 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084004441 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108521054 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105744679 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083281323 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098684817 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084181023 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106671497 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091176616 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103083653 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084864054 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107397367 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105386737 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083065485 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107887157 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082041788 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108209361 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117864111 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086650982 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103350522 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09129381 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11241083 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085745204 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100424028 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103199425 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088417188 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104155361 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085647016 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10501956 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12079833 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088649718 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102500598 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084960908 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106244576 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084719912 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112632194 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104684557 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086399711 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108031323 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087556854 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114237615 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087573751 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113308892 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107642007 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088932631 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103522711 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085177269 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10256712 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08324271 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105804593 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104621887 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090388227 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112831065 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083374789 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116424107 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112703049 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089748652 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100683155 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084777797 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103893025 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080368962 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107700738 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081908951 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103136842 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101307853 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084292097 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103903458 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091232404 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104678729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086601333 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104503096 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078697413 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107110328 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086592563 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106512459 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100395929 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085884241 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105410925 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089416131 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108786582 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084463567 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106217735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085345024 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106157328 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098735837 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09333724 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10364087 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087608129 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103501046 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085429617 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105236113 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089191488 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110381147 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104739978 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087397001 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117936773 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087551451 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10289168 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100457171 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092300031 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10198318 seconds)
  done (took 58.363220928 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148699775 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082533582 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098819198 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080574619 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114781711 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100176903 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080205856 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100478234 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081566071 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103123482 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079899357 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100438825 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110928593 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125777103 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094725897 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10511794 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079563779 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102167303 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098714794 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082446985 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111097354 seconds)
  done (took 2.912715997 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106158005 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122439469 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116406306 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119544951 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091263438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116414571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117022948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116302461 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099747405 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113605842 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120245308 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116698289 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093216625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113002363 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111924968 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09472757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119947363 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111427601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116518252 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096610344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11509604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117103185 seconds)
  done (took 3.276996323 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086363513 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102718718 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087318501 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09851541 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084654219 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099440584 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089446392 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102661378 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087945455 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10360358 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082166703 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10424898 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105288328 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080656317 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103492168 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083309276 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15316655 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109465756 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083619686 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10637714 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078704218 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10721021 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09870853 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081134591 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.1029453 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089326193 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104865059 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083170492 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103986004 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082909705 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.1047348 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081890828 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106507702 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103859111 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084792794 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102687471 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085168315 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103721376 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080897658 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101711809 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086232046 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099954182 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085421889 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107227183 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082937026 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102485677 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085285695 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105531051 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.099117031 seconds)
  done (took 5.532306654 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105496984 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162660182 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087453146 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144715331 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122512333 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113049867 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088928162 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144753834 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104100387 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083335584 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124773569 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122201503 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105753243 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09087441 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112012232 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104578817 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087523657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10402467 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108892622 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085021093 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109311863 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091169843 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121290513 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119851031 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108525696 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085054905 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104774625 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109629647 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099898227 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111684771 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110716752 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09188604 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122514664 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106804804 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084196119 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108721105 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123628803 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084867465 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109412911 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10228383 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088371921 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110695435 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111073529 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104407989 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106521679 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109628185 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086595958 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102262283 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118253777 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088052459 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114354019 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121416079 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08884745 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105785849 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109633826 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122077979 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086185183 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103168242 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088825284 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120001719 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102181181 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089837841 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.12239959 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106794226 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093365637 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121766478 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110853732 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108853091 seconds)
  done (took 8.225914102 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094582865 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112687128 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121704712 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121780781 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092215012 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112920578 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111573162 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092201934 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112818563 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118283143 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111549639 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134173771 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087604697 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115247775 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111357487 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092292031 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113503875 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111678502 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092198603 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112314739 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11351015 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121175329 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092418929 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12201837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142857549 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105913226 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09147269 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112062775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122610242 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111197793 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124057759 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09277708 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112408624 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121538424 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125520609 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092317721 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104778961 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11150658 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092539638 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112739685 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105701787 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101348785 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111668816 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106743459 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091613688 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112069672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121483352 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125607929 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115753061 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098179157 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11332744 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12148065 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111386599 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09218366 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122384152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147905449 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122111594 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122340962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112619737 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101393261 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123224322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130933038 seconds)
  done (took 7.750371618 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108781802 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11724945 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118356388 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100107104 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084915204 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109358257 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083738827 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103749224 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115345283 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096151311 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118168797 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109597834 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093230074 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118272806 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110230252 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112841463 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089836256 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111322541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115234378 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090039639 seconds)
  done (took 2.951739499 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095649858 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125622359 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086134132 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113895325 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109446172 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092883521 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108742242 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108808373 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087783744 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108709625 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097396076 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118834852 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106387843 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09253767 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118488333 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113031118 seconds)
  done (took 2.533304111 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101331154 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119328394 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121232406 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085125089 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106010721 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080903561 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107972255 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100818687 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082438862 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122383332 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085416302 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111065172 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105444793 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084796461 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10208948 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089716012 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10356512 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083310659 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10660499 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120677767 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097844094 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106094096 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105900583 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088940781 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106554485 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091715252 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107513494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103118835 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085000666 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106686537 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086932626 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1147738 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102174259 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085587956 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104314535 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083994096 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105913829 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086412876 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109872904 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106355629 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085308161 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106236723 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086153845 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107133988 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082440593 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107603208 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101049753 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0931258 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103917285 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086847599 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10700762 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08724805 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108158902 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116988993 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.08953237 seconds)
  done (took 6.323378579 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10064469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10973202 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081657482 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105253808 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089181432 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109237142 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108682109 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089608879 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108467658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084116194 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108715543 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089957152 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108602607 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109374812 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089592423 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111019511 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081838465 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108538529 seconds)
  done (took 2.649205393 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091929515 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106063303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094516676 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107374761 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085203077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109586316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081650292 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107096311 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104293347 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087310939 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105613539 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088734735 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10451046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087857849 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107752258 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085384993 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109773875 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104211375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086548057 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101618921 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089315422 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104907711 seconds)
  done (took 3.004616124 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120331239 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126371667 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093195446 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23396343 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104878624 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134154313 seconds)
  done (took 1.667382679 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111254548 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121973002 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107031988 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108532536 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116070364 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087531702 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110246812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109158283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118530605 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102491462 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109140782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120175173 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118384884 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097887639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116557117 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11581123 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108441447 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089144974 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10680356 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130201783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088800064 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118904929 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108192695 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087575257 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110128698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119033117 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118494448 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124335806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088705027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119671184 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115612434 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089214509 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119719394 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123415106 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109566519 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099195106 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109656085 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131446827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115490516 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098806263 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110222715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114634217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099199 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115344045 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119530553 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108172589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094286283 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110063873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108443052 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137675236 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095248746 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118284051 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116501639 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119326877 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098106468 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156340994 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104689654 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119005284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117093847 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123680917 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118676136 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095887536 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118560111 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124069967 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116215956 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097807985 seconds)
  done (took 8.217829412 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103775328 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128268149 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108995188 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124465617 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099093444 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109830048 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108205389 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088934979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109924182 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107168596 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153231098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089409451 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11967595 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119202091 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087917937 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109892893 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109430482 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117546697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088303509 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136798105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109370067 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119141035 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11883991 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098781119 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124339353 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116373531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10890557 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089719218 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109462515 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108245956 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094945864 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109944548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118412186 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087657417 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119820317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108902485 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087926829 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115835028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109415519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115104772 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098356655 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130162796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110258661 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108713452 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103231402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110522578 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109368076 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087597308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110118479 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107673616 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103568903 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124583502 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124203745 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119779571 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108891654 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089565134 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110672921 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1084873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089215404 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11753865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118727157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088311995 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137590724 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109906628 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109693368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119248413 seconds)
  done (took 8.114367238 seconds)
done (took 156.916474847 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.250215493 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.222891659 seconds)
  done (took 1.334080611 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089140982 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13723499 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097579101 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17097063 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085905701 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14284283 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138062094 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098921479 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107591976 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087710944 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107418763 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087731373 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172825898 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086941937 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108639038 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108037393 seconds)
  done (took 2.696108307 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119520337 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256317539 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126373222 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105935991 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090262537 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110830566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084664775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.1127406 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090112545 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106476769 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088440948 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109053225 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08464662 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109031366 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110785128 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089813346 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105215809 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089891527 seconds)
  done (took 2.856796029 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114732807 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148741999 seconds)
  done (took 1.139256084 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242987241 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164219482 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232132424 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.475822492 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277836875 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.368182569 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206412455 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.214616781 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167457224 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.211370132 seconds)
  done (took 3.429937175 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120260635 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181245562 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318564944 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157234354 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108459152 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131333469 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15860683 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132096565 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124184055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102191382 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124200957 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119658776 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138812845 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096350881 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11817958 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117928163 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121654307 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115552569 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115607055 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097249824 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140158515 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084289758 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118257832 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114372792 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098639824 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121337394 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107058189 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086027645 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118102466 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093958077 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115113766 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127057765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118715779 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156558469 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12354769 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159238661 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119196774 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092263694 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116265824 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091040219 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119788102 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121560196 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126417794 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098281559 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107507035 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098597046 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108239816 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085353009 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116921305 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119380058 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094897257 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11618503 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156766069 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121007058 seconds)
  done (took 7.462403926 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789432232 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157154701 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089972853 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882103816 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136492631 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10389391 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776763168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111905874 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257397709 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.754319901 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134130675 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120692755 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208274073 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260232109 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.005021292 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293626371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641718433 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131174045 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153302925 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155310573 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11780229 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114962662 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13251857 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453338053 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118885614 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090133909 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120180674 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119887137 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161613482 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126225356 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09300217 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202518872 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251544835 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206606846 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094582469 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113102715 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089291676 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196192579 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267179917 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195829023 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181237414 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110042044 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089936284 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123563094 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133236038 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087024914 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18728378 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175710847 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172276494 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11756438 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119560157 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099058729 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123092484 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165107028 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123648391 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32528299 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319462984 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089759843 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122556826 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127474572 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240396211 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125491059 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230330627 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139903258 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191173813 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113733108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782685004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172467529 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111174016 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096345041 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121943692 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116470379 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099999754 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170991642 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392657835 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126234436 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116119137 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091240815 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230034469 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103439299 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113581015 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163847348 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118699006 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122378468 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107530407 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12487042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170408856 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258393365 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102016734 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121711396 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115842773 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10335471 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118062368 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212997856 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224583373 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164247301 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231134475 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100848021 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187001038 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171089807 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119426858 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.175396851 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119821868 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10298032 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125141434 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220286933 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147013456 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124591708 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09578195 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119888277 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148880587 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127967132 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097829019 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194876309 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481471603 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170501664 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111022169 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12847737 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099656068 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185029392 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097508745 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266637323 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122683738 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172172402 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120298447 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089315189 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122289456 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165072546 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123793515 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121267099 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101508725 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121674976 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238112208 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223801984 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124626564 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223165975 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18675287 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120781574 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173570952 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123031059 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170236712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120634248 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099197616 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119136479 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783570219 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124810813 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099908028 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117229867 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196628697 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089536937 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126085964 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127257871 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087408507 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779080603 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129572532 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121775542 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104064425 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119730567 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121501777 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097741498 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118332854 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163831042 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234114555 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122150325 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098037573 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.127504386 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161467668 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119630506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126825947 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124955906 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106050206 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124745924 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115478442 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103776301 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191936415 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166604894 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223583358 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57479459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114854933 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125251319 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207288271 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114316107 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291951636 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119511311 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205170479 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187091747 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099393451 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317270822 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165113541 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199594331 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.130121841 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174684544 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110965325 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119610779 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167105746 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112257359 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097318747 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163035874 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126343473 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12400225 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975692526 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08996768 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25335456 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09169187 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172908496 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118809537 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121613801 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295708953 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091843055 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130778857 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165651778 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115976611 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.129698188 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.713440283 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126987668 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121436698 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097788001 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228111111 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165074824 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121380889 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121170971 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097694808 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18756378 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208914089 seconds)
  done (took 44.397207933 seconds)
done (took 64.181543048 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283467751 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221481318 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.272458128 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172346014 seconds)
  done (took 1.925170634 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173608073 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151193809 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122692187 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.112847536 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15333726 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085014702 seconds)
  done (took 1.696006403 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.368106715 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282121324 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247698132 seconds)
  done (took 1.799540745 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321073083 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2531956 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474461713 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327570048 seconds)
  done (took 2.376933742 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212363766 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13380799 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110821966 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104554216 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200954399 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249985262 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144179804 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204095145 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098462831 seconds)
  done (took 2.406836209 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199679652 seconds)
done (took 11.305625089 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.179785136 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.260272038 seconds)
    (3/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130074735 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128483332 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117522686 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112951363 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.207765348 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126077824 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086345693 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.280157287 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.202372079 seconds)
    (12/309) benchmarking ("sort", BigInt, false)...
    done (took 0.229086574 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122907953 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.194253052 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.226491167 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097911591 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.124820887 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138595928 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.194968271 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098034826 seconds)
    (21/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.199597317 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.139670677 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201156317 seconds)
    (24/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099720956 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.14620457 seconds)
    (26/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.26366334 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.213626359 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115729309 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095554825 seconds)
    (30/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.205931655 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.186865862 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.169814974 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.151434449 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.252375844 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09608366 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.174798867 seconds)
    (37/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134716145 seconds)
    (38/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.14977417 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094240623 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194456878 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11740316 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10925025 seconds)
    (43/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128711626 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.205153081 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092747332 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15578331 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.097583616 seconds)
    (48/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112615589 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.138480221 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.18254476 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189769453 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088160591 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138231562 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092756115 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117608757 seconds)
    (56/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.137521437 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116150171 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.186866483 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121848364 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098999904 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.151042824 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120832971 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.202353858 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088828398 seconds)
    (65/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119643691 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.1610567 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145502553 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.185091099 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.200856609 seconds)
    (70/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.078120232 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.185658264 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096364283 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174629426 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.139551828 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109635116 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115103375 seconds)
    (77/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120910706 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090929239 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115082602 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087172405 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 0.188851004 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.180956031 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107354944 seconds)
    (84/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098827797 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124850154 seconds)
    (86/309) benchmarking ("sort", Float64, false)...
    done (took 0.172538993 seconds)
    (87/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.179569399 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.11208946 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067805247 seconds)
    (90/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115435059 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086899609 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100515374 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.178357558 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.192757714 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 0.1768151 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.193430441 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.225015584 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094422719 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120827697 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0943611 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.167327284 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116505236 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094612616 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.19411814 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176811019 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.17955634 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086495113 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.136819963 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066377528 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.122807799 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117498531 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11938111 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117935156 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19145088 seconds)
    (115/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116743782 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.181100584 seconds)
    (117/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.346792108 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119964836 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195040423 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150662349 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118890671 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.132856803 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094788871 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.188640426 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.119625403 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119867988 seconds)
    (127/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.137435738 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096137798 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115706037 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090854047 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.186522615 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.18233431 seconds)
    (133/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172611597 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095531838 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.137389757 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067313262 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117685484 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140621621 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.230316068 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.087602264 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126956115 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085627393 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114509689 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.068466805 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092395713 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110389277 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06684563 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090381551 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111988122 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110003313 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099403491 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118712009 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136224288 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.2193057 seconds)
    (155/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.095121689 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111560973 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086555984 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118400812 seconds)
    (159/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.115939685 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139431665 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132498892 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093897764 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110151666 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095526185 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119840558 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173322864 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086587018 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066014296 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.106359231 seconds)
    (170/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139556227 seconds)
    (171/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092495598 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087273193 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109991359 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08844171 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113128494 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067011837 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.15460207 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093877029 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.139115587 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067054251 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091144905 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067777726 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085237455 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.099639927 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.109470588 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118353699 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171968102 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067567665 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123792146 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068666698 seconds)
    (191/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066496019 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117482663 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079428301 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137887258 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09626088 seconds)
    (196/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092325606 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114808579 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113298334 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06928415 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.100881952 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087040982 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091018311 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08839505 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153548547 seconds)
    (205/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088626075 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090389705 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069630927 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086691868 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.139124034 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108943519 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.086740023 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066588454 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.100849288 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078338916 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110539891 seconds)
    (216/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068762991 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.167273101 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091940532 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092324364 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117458238 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095180022 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100184867 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.0920358 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116743727 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121557124 seconds)
    (226/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067645109 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090895924 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.152122881 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121541733 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0943085 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091406782 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087302198 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112563583 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116740233 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.136291523 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120113864 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06902437 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128750641 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191357672 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.093551521 seconds)
    (241/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092676346 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11320905 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086224988 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219012902 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.13334207 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086699454 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.092610891 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.079517539 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125739435 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.197640609 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16725374 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091989365 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112395012 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.092923224 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116648251 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094075482 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091252438 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.092757213 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069616952 seconds)
    (260/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112953907 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140380357 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091426706 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088309159 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124739907 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089229332 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113555176 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087052177 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113473406 seconds)
    (269/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068169395 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112038878 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092521902 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091556862 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094942905 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154437817 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161886385 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092320448 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189658136 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096690061 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091119831 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.088378337 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067031893 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102711271 seconds)
    (283/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095026076 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090843998 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108770375 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.100926991 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225268084 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09181053 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066413656 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122407874 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118429708 seconds)
    (292/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.06838387 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067675901 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173950121 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084705612 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112212734 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085794319 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144884391 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118694891 seconds)
    (300/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.07852266 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111318046 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093600866 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118115346 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087059459 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.198680135 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092542919 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218700171 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.092942945 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.068362208 seconds)
  done (took 39.978856568 seconds)
done (took 40.886401929 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101158261 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149853793 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096587497 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136948593 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12474943 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09292991 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120468751 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098317479 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125770092 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12792819 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099590602 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094365806 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097854286 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121881177 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0971236 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141705681 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124869125 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095802989 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12074639 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086879579 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121037271 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08652947 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113931857 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070060441 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12272847 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095775739 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118455624 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120494627 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08939999 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110781295 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091851046 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118642045 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08789408 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124799935 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094107348 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12091727 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097331838 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122608705 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08814481 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11254314 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119464981 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088358705 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117744713 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095859337 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117339302 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094047436 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119395966 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.10018425 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142679913 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116253865 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096864052 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12185115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097619585 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118788368 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09181188 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120737434 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092188467 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143843011 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122463514 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093314283 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121571076 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095370262 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118048638 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095420854 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121039764 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121677067 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100098806 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117083579 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097600615 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117448935 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087604738 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121006914 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090570896 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112860667 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09640103 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123658828 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109558552 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093677684 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118604876 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094103461 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111129419 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091945588 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113107082 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095018462 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114430299 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071435732 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114459175 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095000565 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110817294 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09741003 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117596818 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095170693 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114384828 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099443003 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112378871 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093395643 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112982141 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087681583 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115075926 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091666547 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112556015 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089867516 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122807459 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088522495 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119151623 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123550052 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088351752 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118198179 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087899606 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111454964 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103938314 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122825887 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087747696 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118661598 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086158501 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121080298 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086835466 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112778096 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086605419 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112502593 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09373186 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112749929 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11411699 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095632865 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126612066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088346681 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114635471 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091221001 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112242972 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094064704 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112129741 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088376201 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114498085 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079254659 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114449307 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089426908 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119468931 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091475108 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120562339 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089929292 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122160904 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091863032 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119259676 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092832432 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111802888 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074560333 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117468171 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090826286 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113986741 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087669653 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114861191 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088186228 seconds)
done (took 17.138079063 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089656707 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187571926 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154284101 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144577889 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108313299 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113803163 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122948373 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121475998 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11588691 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144547492 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112558181 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134409769 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149818267 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088639208 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11314123 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092322561 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11448012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103292004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148151474 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133979782 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166407197 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087446204 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149307606 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139263439 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121718244 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11540459 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113419914 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092635039 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116630769 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104559654 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134814884 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091302652 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114459958 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135363149 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106477259 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121968436 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088311638 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121209942 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087361104 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11441741 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142153594 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135258242 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094826038 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118981652 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092521302 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115370765 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089904802 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122379227 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099011536 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118076797 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127577106 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158272305 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09227343 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123386615 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087761509 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125097329 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121893838 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091338512 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112961558 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091355012 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111958205 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092407588 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128876623 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143725944 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093401112 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123447627 seconds)
  done (took 8.730681096 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105989705 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140813468 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107057099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1505369 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112116957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091149598 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113279923 seconds)
  done (took 1.790669024 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08942264 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134523571 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112406167 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.138070057 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13294893 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110559829 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124612275 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089548321 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133415147 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089916616 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136929205 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152939571 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.091241095 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123189973 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139324206 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090077488 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138900646 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089750624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117526292 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11246673 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118885625 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135697192 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092377955 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114604935 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103828002 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116399552 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162925717 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095102796 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115568129 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09318057 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112422216 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168675491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106660187 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127193765 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089377737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130144458 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128783549 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088449605 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131043742 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095298802 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129937907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090095791 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11666747 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087225988 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120507305 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124361462 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091270508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115634517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092732798 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134268289 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090920675 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12812275 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089747633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121069338 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091012078 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121663425 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123279635 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09162131 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134642479 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091431806 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132099948 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106281087 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129917164 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131423437 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092603793 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129275176 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103649402 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118524818 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09139407 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119530661 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131712268 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088502234 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115891816 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100933239 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116908904 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114267406 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139055103 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116208979 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10079587 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115240245 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090355284 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114724989 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114265087 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119196001 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090257345 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119772769 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092783958 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114820511 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088746803 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118941179 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087554802 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117382031 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118132192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091148184 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117490485 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107127048 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116176702 seconds)
  done (took 11.948031622 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092576086 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115371892 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093789506 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11522732 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093376271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116884422 seconds)
  done (took 1.611264152 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116230259 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119372429 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105764087 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122213438 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158061392 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10441134 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.13258863 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125223228 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109666835 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129845398 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130559244 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10601528 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138992031 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122160259 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105539268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122447621 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130389513 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101518241 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127904329 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097749281 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139577146 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121561218 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098826906 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134257756 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119154778 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097224654 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127212912 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104049169 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128905818 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124516227 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09745857 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120330707 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096888619 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124777423 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130873427 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096583244 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122328806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12042535 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102161711 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119098827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106397011 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123184965 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128162842 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095255567 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125747185 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12132848 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096041897 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126163165 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.130312039 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096526059 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120485524 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097607731 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120020933 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094761077 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124186266 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124616823 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095695677 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13132435 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122164484 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098107433 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119594753 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095849523 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126277565 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119069818 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106438157 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121030012 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096255272 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123026178 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122387992 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096586111 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120631131 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093457714 seconds)
  done (took 9.340525371 seconds)
done (took 34.388977825 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692898971 seconds)
  done (took 1.674308566 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.72651516 seconds)
  done (took 1.717703457 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.316758339 seconds)
  done (took 18.299944177 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507174741 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593778138 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.890929974 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182007787 seconds)
  done (took 3.160716759 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.958776146 seconds)
  done (took 1.960194962 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.299274046 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259648005 seconds)
  done (took 1.548643543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777397959 seconds)
  done (took 1.772460783 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.362515952 seconds)
  done (took 2.35183133 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335275548 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185392412 seconds)
  done (took 1.519447111 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548346112 seconds)
  done (took 1.546861553 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.134005605 seconds)
  done (took 8.138272477 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270639396 seconds)
  done (took 1.279842171 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303760269 seconds)
  done (took 1.304340486 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.541236491 seconds)
  done (took 4.543176899 seconds)
done (took 51.811926775 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103489431 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127890835 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103513721 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125008361 seconds)
  done (took 1.461050516 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10283216 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121976085 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10197833 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122132938 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126924305 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097004156 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123790721 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101581882 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122090984 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097798946 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12294965 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120321128 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100783888 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123413911 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094905895 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125012759 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100248478 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123718673 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124562874 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097570142 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12017886 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099261975 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126052146 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095576524 seconds)
  done (took 3.697901854 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101180985 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119139156 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097748773 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118604499 seconds)
  done (took 1.447714902 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101155963 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143335485 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.140688928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101099762 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144712352 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136798802 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093611456 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118090965 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095366927 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126183341 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091589196 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150720036 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13949777 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100047528 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12885561 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089886565 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118638087 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137738217 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100646449 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127027025 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096140118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126441774 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090525876 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141741828 seconds)
  done (took 3.846618814 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171939889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148732389 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139926463 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095594545 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16230645 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143552814 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089213393 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14191815 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088266007 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133476012 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119125074 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13486182 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130789476 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087792163 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115709077 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088476003 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130549219 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130479315 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091615128 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143246785 seconds)
  done (took 3.500709583 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09887459 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118479437 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089743536 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11738848 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100003111 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121366546 seconds)
  done (took 1.65852631 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091235635 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115115577 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091531845 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114901694 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095507612 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115575925 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089907265 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115447058 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09034114 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115697161 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090563694 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113789142 seconds)
  done (took 2.252695203 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.466756472 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093923017 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.12180747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114655819 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097672475 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115713666 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104503623 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120533677 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141847578 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090504064 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116466612 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092245394 seconds)
  done (took 2.685232577 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235539064 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126884451 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289721525 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278172611 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159177981 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173291976 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282378002 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163962224 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226793678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161744841 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206350233 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225312384 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154680531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190505634 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140862562 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146699551 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201961595 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242896452 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154005872 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204570953 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229282708 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168985835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182615781 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15304806 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139100967 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174413263 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095081881 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132122372 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23543501 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17795543 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189654506 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189350234 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148121422 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212877919 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256173178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222805163 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288184614 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109560215 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171877656 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170166169 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265994754 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138647652 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205561635 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157264525 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13358147 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192194576 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166710239 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203361029 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151874976 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113819117 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223570957 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215505712 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.221396202 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13879654 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211145242 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158049203 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169353488 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222795236 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251857383 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200193179 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180052445 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122686854 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191103027 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218797364 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188410302 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170135681 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182957851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150397173 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220383105 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190534347 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168238357 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187947905 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.215646906 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141338516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169999695 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175487967 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174776454 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258179305 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17918925 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122614514 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170020169 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124066612 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133864896 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196372778 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125990991 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214549084 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149586033 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165328187 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219146345 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161508753 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160565108 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2293074 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194842677 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150068998 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08464331 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155710142 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158923438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192837126 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140977477 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160762402 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162536553 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131877559 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179832323 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126421764 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177407259 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117749663 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176715241 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184162462 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12726292 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161119326 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125633663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15071086 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175268215 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228623227 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143459988 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108390913 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238968918 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179165331 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15127818 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180427551 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203285115 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.144887547 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151576198 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228765112 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219381944 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141506565 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203155193 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15882269 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136048981 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133235574 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183630312 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156767783 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164068708 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134039594 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187520517 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207980139 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12724379 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139621102 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185953109 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134036731 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132515594 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162364966 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122149768 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140481598 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14899688 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154318007 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183544468 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179500712 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155317969 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166490832 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153051725 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256387433 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143162861 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152062989 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149782535 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094533634 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221495894 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201773844 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130607092 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207402885 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173316362 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233928777 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170874123 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136800534 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179043624 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103837394 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122327729 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194606107 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169213451 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162529417 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.226856091 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202192568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208096742 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185853212 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17516969 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174720436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16752065 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158253212 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141643009 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16197555 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169217589 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096490115 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143741225 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135256047 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149944804 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144058556 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108314899 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226524598 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171555813 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217869084 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133379997 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15094829 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183317678 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130045315 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175123067 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206480694 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121841431 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229634569 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196141892 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215696345 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118663112 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232694586 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094233259 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126931426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144509486 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172407844 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134734403 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110093733 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166882294 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209711343 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184238626 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178986086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240453698 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174046254 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191970176 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122896587 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142163878 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213935576 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178893117 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187420501 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116835198 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152116175 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178710974 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160594593 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259015681 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169953272 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177577342 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236749897 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152376596 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13292685 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125891879 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216457673 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156218259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17992947 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148417165 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116095969 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162864585 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133812742 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160609305 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213031156 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164931133 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192550696 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152809678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187112892 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129247708 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167770548 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161439886 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167649975 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081973217 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203894145 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206084831 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150264055 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169303025 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218033975 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105710526 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310370389 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238763516 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19318532 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139536126 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159504618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162526866 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166213705 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172353752 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179673647 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160732562 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189193897 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159998541 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13852864 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142153759 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15032001 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124763944 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133201515 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150299733 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177836085 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140786566 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185801045 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162897791 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160641694 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175073433 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151729067 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146026039 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152394183 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216984159 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177780785 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240179572 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152757066 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18200061 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234156055 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099138363 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133477714 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133147851 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180059606 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110045856 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222225773 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189965164 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232938212 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185122761 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187934239 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141722057 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092656453 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158480216 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202561718 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210346729 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152202599 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161100749 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232350609 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115719423 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134463297 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174274741 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201772499 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147830031 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228141883 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081602195 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280256355 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12724691 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105663405 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165777954 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238078089 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137993486 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160388798 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195524821 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170686526 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166238573 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15033013 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19415263 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21886039 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233861955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181840718 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1347168 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157371679 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178966371 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194898539 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158661442 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141627594 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204448975 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225688114 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198958022 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145671729 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173577799 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170404557 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160172294 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215932176 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108664607 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234917271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108535552 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22566339 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155411749 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144761226 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179197645 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190993735 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142941677 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190432162 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203534807 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108821382 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134677955 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170769711 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179524152 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159335178 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129499398 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182132884 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126425757 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195386807 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261862916 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136065677 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154996404 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121709323 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13771154 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158881152 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159628062 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143052742 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.14039208 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230661011 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136618249 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195697046 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231550779 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172239967 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17705194 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146521675 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.696416123 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132311807 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197211657 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157292155 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208452546 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152042574 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175527314 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160785086 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170030053 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227007624 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161389602 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231980327 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19595727 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180202541 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13469633 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160305844 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163537111 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14627232 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153715052 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171268534 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161755429 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155007959 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.18201669 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172175697 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136260223 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112787737 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231425053 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157605612 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185054215 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18186698 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140645136 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176452357 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189044329 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134909577 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181540631 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239068025 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142967196 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153310935 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106671872 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157017524 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265401814 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126761296 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202554823 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178713716 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160576606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171498786 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14986298 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22285681 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15886494 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180915839 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148838707 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161134441 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157606883 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138482232 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103418052 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157660471 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167605625 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150870459 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161420962 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163232314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198232094 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09653663 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146304773 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229703983 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194182695 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244700117 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108450004 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137247511 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16499058 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153098243 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18049961 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178997329 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137982286 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137629194 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110130567 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160055381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113302784 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157599495 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227212146 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167983612 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209860487 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.1384337 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278652007 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113573623 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157468854 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117626535 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105066857 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151662963 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14731905 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161132513 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220705047 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237537184 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149945948 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134242818 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151050176 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099463589 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13830584 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166471136 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16630139 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179037612 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146104553 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080772253 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159758147 seconds)
  done (took 83.466621886 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16907202 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133004368 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147936765 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202333461 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177675708 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271796823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211231391 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255384903 seconds)
  done (took 2.67184185 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094362202 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146830557 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159652256 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132741526 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092452911 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120941769 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347262938 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134367727 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116481376 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12196355 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175009609 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09450225 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556485715 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091277484 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121014213 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108951422 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093015089 seconds)
  done (took 3.803407691 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.480250796 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.723757172 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.514415291 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097564585 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.226250982 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113599999 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.810998601 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197941264 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115978291 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.488409361 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775899181 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160247965 seconds)
  done (took 18.812389142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099946917 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.123004292 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108976998 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137254304 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096293386 seconds)
  done (took 1.678693237 seconds)
done (took 131.986835273 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105509196 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40780202 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072113964 seconds)
  done (took 1.622117286 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108460877 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138803735 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109389447 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137912934 seconds)
  done (took 1.612516005 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099138286 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127938925 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110676487 seconds)
  done (took 1.44977793 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325528341 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190743154 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165559197 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106593068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130507965 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103847405 seconds)
  done (took 1.457040024 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097590939 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129304962 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098415043 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131942892 seconds)
  done (took 1.573779739 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095255055 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071386849 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103966648 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075427982 seconds)
  done (took 1.457429216 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114845242 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133727075 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105333926 seconds)
  done (took 1.472535757 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.132012108 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139418892 seconds)
  done (took 1.389057798 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106476917 seconds)
  done (took 1.219063229 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118309763 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171309157 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192230031 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166193189 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231229836 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166466084 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14258861 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115467445 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132141769 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145874037 seconds)
  done (took 2.69898667 seconds)
done (took 17.851429783 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104161216 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.51442769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414095603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118205687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722563809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381192486 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032665891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14810516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167378499 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094484728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141285008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.674839022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024119676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.469121159 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982477818 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377311383 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704352583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095063125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120578108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094979957 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.017554585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092267461 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123911977 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093318099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703328021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4275327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095403943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.370760286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092877824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127977357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384535462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124112113 seconds)
  done (took 17.142167103 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096218024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17602046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09866528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13886768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124713903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09523287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125851193 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093971577 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180040876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123558246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111219356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122732407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127398752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096512344 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142807621 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093336035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125767329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092964674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12282791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122938314 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112085706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121086529 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095345531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123245732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094548997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137183505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123178931 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09387588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121726174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099184321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129119432 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095325396 seconds)
  done (took 4.879408147 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14224985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185092012 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13007037 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127788232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170864358 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124533133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201371425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119246898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184777742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124487955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140781327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093581146 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158541324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123741158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116058727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122410897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09735866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12366626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092797169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124422674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140935406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094103732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123498313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093392436 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12432777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108855286 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124271065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122065678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094033437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128034975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100125315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125215155 seconds)
  done (took 5.207450108 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09838933 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1268268 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109551716 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13939976 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095956038 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128134403 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097723125 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125718628 seconds)
  done (took 2.045480987 seconds)
done (took 30.387610569 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112326683 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128245529 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108011728 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136389721 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10359808 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133980065 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091857423 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136364256 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135344219 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102852161 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139362968 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092309361 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12445766 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092955117 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136665965 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097789158 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134281601 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102121079 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134855949 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133874299 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09469354 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134087929 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10351579 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134736832 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104409377 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135868771 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139329772 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099944406 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12431869 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096006145 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124942383 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104154605 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125637111 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106913299 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128184222 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097366901 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124982155 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094976609 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134930587 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134163094 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100830883 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134836559 seconds)
  done (took 6.071930512 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108430633 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.142859866 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105915554 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081871849 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118732982 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081288685 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139549286 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079231938 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111025296 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108654655 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074828256 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108089469 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078719456 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10258438 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077646677 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075903694 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110106248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076512784 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077159881 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106861524 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080127556 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07373913 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10928184 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078781541 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075798971 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111026098 seconds)
  done (took 3.623128888 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100344489 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13713165 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112581241 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185892538 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162287598 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099751913 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13361356 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141596602 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109297999 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121361744 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097761753 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150872092 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111152474 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130337872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0930264 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138554357 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136391013 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094787543 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12928538 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114070795 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139283132 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102616238 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14515473 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134169642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092869702 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124317308 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09662299 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136556781 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098670049 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132221958 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096967859 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127043642 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124446684 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105023796 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126836414 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09431452 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143238548 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103082483 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132069322 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092665422 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126347856 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122883693 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115039445 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169649421 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092720195 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130687371 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131392042 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104098383 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123490177 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111228271 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133054342 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092134325 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126604856 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09243097 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12548257 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106964531 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125637618 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095308714 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131656735 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125531601 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106728779 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12639277 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109519712 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122905914 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100905939 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122894722 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093534089 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121573179 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144577675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094965317 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164931374 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094507945 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124911372 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102520811 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131470541 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129181607 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0935478 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138390714 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103736712 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126894478 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10236898 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127257338 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096547235 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142085118 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125016779 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09603586 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123503026 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100501811 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125227225 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094701124 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137333026 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093782476 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126746326 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111871361 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122824803 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124650734 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100902896 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127974709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.0931266 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137253243 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098745852 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124759604 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102949373 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124075671 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12610773 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104496073 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127671987 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092745939 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128194184 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09984552 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.133016034 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094711373 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126763487 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095463439 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133104597 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129507721 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098536807 seconds)
  done (took 14.971892356 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230882864 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217950507 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.240068325 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.26352781 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137215912 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114861908 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213008439 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157230877 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124250418 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162113833 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164253866 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182170397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140402748 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180782029 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141868399 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122918845 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113430487 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166235089 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215235024 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293105964 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113549509 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.132942189 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163614784 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162418089 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107427844 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134007444 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141289194 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106294423 seconds)
  done (took 5.791403753 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109054942 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158336767 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098613196 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145733414 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150196987 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09390524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129407089 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094886786 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13692198 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137627507 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093257635 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130709606 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10155163 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133438568 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124148808 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104019728 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134131706 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095029139 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127429849 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097683599 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131414168 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102874948 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128024146 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122034282 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10310203 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122146542 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087091538 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144251896 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122230266 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116833741 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121714383 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100375619 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134264672 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093963311 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124382271 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096005995 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126825036 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095421371 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125949542 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092278477 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123320768 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078009826 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12332076 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136756177 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100581209 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080069684 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130584501 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128767181 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095614198 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121536175 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096721779 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126573053 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097941531 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131481124 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098907446 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125698727 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096750601 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117041978 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100851424 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126297052 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085447873 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122540051 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.09954704 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119930887 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103019686 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129443903 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092980764 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126955151 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098575392 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131151222 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096679347 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127987739 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091305674 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127466565 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096793675 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128270166 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096887387 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123045633 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123224907 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095318277 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076239961 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125042029 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07426461 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12854874 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09240833 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123786391 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096185734 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130855599 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139395784 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096173042 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133474425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095152435 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123467086 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09706589 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114482026 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097509954 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140381838 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141947781 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094695507 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123084907 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10846934 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127160201 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093335602 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107312228 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101322724 seconds)
  done (took 13.077822437 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128117951 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154814527 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095576637 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143989673 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157858612 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158696163 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102103365 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132419129 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095631625 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143375198 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09432484 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133834431 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097596219 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13873204 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157651389 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104061022 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126815211 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106981753 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133273271 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171963292 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113194281 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143514617 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108882089 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125382587 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130039261 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111779485 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162962419 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108547092 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139412986 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142673847 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108931031 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163566306 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14470591 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100168162 seconds)
  done (took 5.541942849 seconds)
done (took 50.200290342 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.228099316 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.4540341 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.226262754 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.213856948 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.232147664 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.237648948 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.235520077 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.218937132 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.859722003 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.223342505 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.451458834 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.852717452 seconds)
done (took 60.584233099 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.31244004 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.353642427 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48548333 seconds)
  done (took 3.983551798 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.578611796 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.17674273 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.485752752 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.218160571 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.222411798 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.517166336 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.851426594 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.561414356 seconds)
  done (took 28.178076835 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.217709511 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.61374562 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.91718546 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.973485254 seconds)
  done (took 18.869277949 seconds)
done (took 61.068861706 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.244129416 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.289252877 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.233922189 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.201351978 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.328332299 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.241262829 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.552007566 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.231039009 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.245013164 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.20484451 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.239299407 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.223987403 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.250034048 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.561550232 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.223830211 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.223324285 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.277595602 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.70618531 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.63394567 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.227341432 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.224484505 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237851233 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.229489923 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.22527525 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.242880064 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.219827233 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.241918471 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.243642644 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.779924815 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.227997986 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.231305249 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.775729887 seconds)
  done (took 191.364001187 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.220043337 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.097360022 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.226249811 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.282376071 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.565410512 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.420456653 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.352985329 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.680114711 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.242218031 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.233640765 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.420723713 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.217553021 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.475939319 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.192501393 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226155653 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.300559591 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.430971798 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.482185944 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240678019 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.445518765 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.24540397 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.317592516 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.246371343 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.381988403 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.226124414 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.311553291 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.248276349 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.265573804 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.407796915 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.354371389 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.263213518 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233481778 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.823712681 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.0802803 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.230291611 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.250849071 seconds)
  done (took 149.787852811 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.504383492 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.218889145 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217761285 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218757074 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250291516 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.218570137 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.779154553 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784989349 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.721364359 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.540760789 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.281711599 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457579028 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.217227746 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312423583 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.23017538 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.219145681 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233672546 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.26113252 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21876918 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217741415 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.771398347 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.235009912 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.377017581 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.221896673 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216513735 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246833633 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60482396 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216973845 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246984588 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.182420564 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.541155667 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.263115151 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215911085 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.215955198 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.553379049 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327758677 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218256722 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246643906 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.21672755 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216373808 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.494080491 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.218074774 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.217906368 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.220751036 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.834872057 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.218064715 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.761186591 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221804191 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140906226 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.21738756 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217886654 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.497932139 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.796392952 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23368532 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216738166 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219319734 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217807953 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21843152 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.246931714 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.488205051 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309377502 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.231993374 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220395385 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24627454 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.216197505 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.234172443 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220615575 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.681549696 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.277215592 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327320037 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736789169 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218589755 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30861732 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33255991 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214713695 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.21427038 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.214444185 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214098698 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32279424 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214959272 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214397019 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.602689022 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221510002 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.215490697 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.214507124 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.271632721 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30914423 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214842721 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563283975 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219162283 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21433089 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931395484 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309041153 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.213995868 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213807394 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214544754 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602432813 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730199903 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.436737307 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.218729647 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.429478646 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.217235443 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.614188923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.710193846 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.815643429 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.213639606 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321928308 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.217232443 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.213993529 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212721689 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.240709983 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.231114234 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271474941 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.213556224 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607034465 seconds)
  done (took 346.604903255 seconds)
done (took 690.408270482 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.866070957 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857555651 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.966031272 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.851872989 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.840101673 seconds)
  done (took 10.521346393 seconds)
done (took 11.66108972 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.387636859 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.38649696 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272036123 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.388566948 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24437385 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402296497 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369038334 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.23795696 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.309747625 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.287842348 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30735186 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264578682 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239116486 seconds)
  done (took 18.237228 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517984132 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526133983 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280202111 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515037348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255818039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551765954 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412191758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422622188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429697294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247773754 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227159197 seconds)
  done (took 16.526752671 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516717349 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.525717698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282643954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.514707765 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258419371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529813994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411814709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433269243 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42477599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246956413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.226158697 seconds)
  done (took 16.511136026 seconds)
done (took 52.415265981 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.222124585 seconds)
  done (took 2.362079982 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256332263 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416902216 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239075549 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227530215 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.223838624 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.224122565 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227295315 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223497335 seconds)
  done (took 11.178889683 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.219213672 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.22245849 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219768464 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.223192567 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.221127161 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219506781 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.219760955 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222494686 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219372111 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.222693789 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.221859111 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220515256 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222967278 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.223224526 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.223751583 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.220802722 seconds)
  done (took 20.683958533 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.222310687 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221063928 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219293398 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.221600479 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.220275012 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220517049 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220675961 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.220088996 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.221866561 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220251099 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.222271754 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.222193167 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.221037435 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220365639 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220930819 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221470363 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220173065 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221095635 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224764694 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221605025 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225257683 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22078626 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.221597293 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222208879 seconds)
  done (took 30.458680051 seconds)
done (took 65.825919961 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.177893717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.784701805 seconds)
  done (took 9.105021684 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.22382857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.223616961 seconds)
  done (took 3.592399815 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224207985 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223522306 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223917013 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223875002 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223064782 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224406382 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.223205044 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224014282 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224113292 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223647926 seconds)
  done (took 13.380561429 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224869588 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223687873 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221279797 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22413154 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224983054 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.222280109 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223814697 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223452132 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.224249588 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222634348 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224861149 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.223476824 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224926946 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223581375 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224727596 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222849352 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222806663 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.22298872 seconds)
  done (took 23.168338204 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224444628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224056101 seconds)
  done (took 3.59190274 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.224853385 seconds)
    (2/7) benchmarking "second"...
    done (took 1.222756248 seconds)
    (3/7) benchmarking "month"...
    done (took 1.222895309 seconds)
    (4/7) benchmarking "year"...
    done (took 1.222903131 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.222087499 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.222823481 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.223148537 seconds)
  done (took 9.705713014 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227321775 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.40060994 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.475708059 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.801726426 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.227089359 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229207676 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.096406945 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229972761 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.233312623 seconds)
  done (took 14.065355218 seconds)
done (took 77.752122813 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.199721547 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.23958031 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.353535296 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.230253909 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.240915741 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.52150491 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.277484182 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343212103 seconds)
done (took 37.551572233 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.235126361 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.929237046 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.938435214 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.222513049 seconds)
  done (took 11.23563463 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205253342 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.075022617 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.219558063 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.167387363 seconds)
  done (took 17.813589224 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.165971084 seconds)
    (2/2) benchmarking "read"...
    done (took 1.559571316 seconds)
  done (took 4.870382362 seconds)
done (took 41.299441507 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228798413 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227420401 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.225301175 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227969269 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.225835347 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225441586 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228779543 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.228517847 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227879578 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.22848195 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.228252471 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227996124 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226903816 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226588788 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228489609 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22764842 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226467212 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.226867119 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.229760644 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226721916 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.226935329 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229448587 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227599376 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226609687 seconds)
  done (took 30.607728292 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.229825768 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.228595867 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230254355 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229680822 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226460355 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229670574 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230107844 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226150783 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230543074 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230110012 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226047659 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.226345595 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229925973 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.226414256 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229638844 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.227420871 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230439123 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227660501 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229946479 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227323692 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230373968 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228658246 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227195765 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230492467 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227653722 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227784713 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231318422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.228156835 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229557201 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.227555757 seconds)
  done (took 38.008842485 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.234825302 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236029664 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.23142922 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.230353637 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230484298 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230811741 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.23192429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230992858 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.231652895 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.23050633 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229653105 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.231643662 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231141551 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231775504 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231425096 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230461334 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231650225 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.231650408 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.230621092 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23266213 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231213118 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.230976543 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231328239 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231347949 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231618394 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232073313 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232049606 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231996845 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232418621 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232630863 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232816083 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232276646 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233112215 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232050623 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232874823 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233021654 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236207122 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.238596546 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.234092558 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.233379192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232960652 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232438912 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234045049 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23391653 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232915835 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233307798 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232983836 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234412646 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234518266 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233691299 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233617676 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233112188 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.234237054 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.2347419 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.235030607 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233556131 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.234130099 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233922854 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234189777 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233711051 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234521283 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234549716 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234116299 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233844208 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234178739 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234000679 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233660865 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23481497 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.234195675 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.234295169 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234989245 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234970352 seconds)
  done (took 89.926429875 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234328497 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232533168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23218038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232465075 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23325106 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234615675 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232925897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235144673 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232713811 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235799472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236058881 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234303785 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233291096 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235207995 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237087089 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233381216 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236349153 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233952687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235754398 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.236452586 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.236645357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.233394948 seconds)
  done (took 28.311169878 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235893834 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23854251 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233686537 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235870771 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234812595 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236131833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236822233 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238701056 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236841717 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234885866 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233862202 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236297303 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234564724 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235344123 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235086321 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236169624 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236944683 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236534232 seconds)
  done (took 23.401329467 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.234020156 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.234775407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.237355092 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235475399 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.235052381 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238186514 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236428492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238642782 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237567152 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.236437488 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.23899137 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236743627 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237667119 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23678789 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238509093 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23477293 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.238891074 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235495676 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239026031 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236147251 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236895118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.239116501 seconds)
  done (took 28.368208068 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239073757 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.239013037 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235673954 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236643487 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234971899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23713228 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.239112724 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.236168297 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240693901 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238578706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236087096 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.239456182 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.239183802 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.237719707 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.237036103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23708289 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238737322 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237108176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239232939 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236893303 seconds)
  done (took 25.912316683 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23975524 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240968945 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240607817 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241566841 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241061419 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240343361 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241092635 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240928354 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241514674 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241753373 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240627005 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.241765414 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242376552 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241861435 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241585359 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241710148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241824539 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242510198 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.24183232 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242869332 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.242248447 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241357456 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242057661 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2418279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241690455 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.243284297 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241802531 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.242503699 seconds)
  done (took 35.92366136 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242450674 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241802676 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240037018 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.240177352 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.240452779 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.240235988 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240490314 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.24102791 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244517422 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240192696 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.243775297 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.243499164 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243785293 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24347294 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243284558 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.242849353 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24374283 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241207959 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242425378 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240786967 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.244036631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243947165 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.243955464 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240880536 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241353113 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.244566271 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241519598 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.242253787 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244369712 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241678331 seconds)
  done (took 38.428953246 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.26265532 seconds)
    (2/2) benchmarking "in"...
    done (took 1.262536169 seconds)
  done (took 3.687533958 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.242422471 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243246103 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243697545 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.242336027 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241886783 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244208747 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244930404 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242146793 seconds)
  done (took 11.106641621 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.245203971 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243495393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.245110045 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244843042 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244869088 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245491699 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252713895 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263421684 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.246324293 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245530739 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251594426 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250436944 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.247633128 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246000608 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244695548 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247473724 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.245860548 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245941082 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.246629491 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.24896769 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24785082 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251775838 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248934462 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244312953 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.248135308 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255836466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.267615316 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246932538 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245531541 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.250227067 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.247250514 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243110173 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.247220612 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246818337 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.247627909 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.246859644 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255555078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265136479 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252317568 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26531642 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248867595 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244443091 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.247941567 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248343197 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248797165 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.248204298 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248277333 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.245257659 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.247320938 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.250359217 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251469388 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248549284 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.245814195 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250647198 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.249237678 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254555425 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26407916 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249963557 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255958291 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257274757 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.277608877 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271485125 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252052452 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250115501 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25885056 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269583648 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256321617 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264704935 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.248421874 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25095883 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.256842121 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279569267 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273288841 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.2486244 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249613474 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.250434404 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249944524 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250392455 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256663617 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271035828 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.249850296 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250937819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260733212 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270202771 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.2512743 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25035924 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250670208 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.251156909 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.254004348 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261482442 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268857318 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.252614894 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251714707 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.253080627 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.252724534 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250821033 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25155126 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252403611 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.249077094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252235097 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250185112 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255307742 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258451545 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251033708 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251622492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25884574 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270470994 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251631567 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256882722 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.251483716 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251499445 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254967337 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257022789 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249507487 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254951185 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.260153658 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.252617174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.254337853 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.252662489 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.253793449 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262069783 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274059564 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.254156115 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25277644 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257368647 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263175161 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253116139 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256314508 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.254572637 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.250707672 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250028587 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254440726 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.253996854 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254804108 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253470431 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255457554 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.250523807 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254984396 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.25395334 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255580296 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.255194349 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.254004417 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.256387907 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.25629403 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.254144424 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.256996063 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26085555 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272667674 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256175263 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255991457 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.25269752 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255204961 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255605379 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.254906062 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.254900406 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254726593 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.256126356 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254029325 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255645503 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.255288534 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255823308 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.256011419 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258268847 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.256125689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259022621 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.254635352 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.253883254 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.255458414 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.256407088 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.256076336 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.257255255 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.255157943 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259210996 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.26221062 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.256499028 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255559728 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.258901352 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255635845 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256489995 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256371487 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.25964495 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263080574 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.256279039 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263299125 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274753071 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257206999 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.256826963 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257239632 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.256106845 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256909567 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.260217125 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263094307 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267784534 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278931978 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258936724 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260523364 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257976881 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259618419 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.261137716 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256606671 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25862064 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258357348 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258619775 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257876695 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259909031 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.2566399 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258395926 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.258101692 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.257389313 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257371906 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258391297 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259153773 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25790361 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256033443 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259366071 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257928984 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26006796 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255801655 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.258132198 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.259164086 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259218171 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.259404365 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265887314 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256656053 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260847456 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260879104 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260576608 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.259219726 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259224417 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260932182 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259537084 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267038445 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.2767551 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260857244 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265724732 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.275807364 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.259732864 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262276012 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.260087468 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.258242081 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262705472 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.26698564 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.261755201 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259833847 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.260068002 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262104811 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261180531 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266324729 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.275861496 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261006186 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.261693755 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.262771363 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.259563655 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.262803235 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.261544568 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.26154397 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263041185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262180858 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.263455686 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262641186 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.26073706 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261500365 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.262088792 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264511553 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.268116184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.266817756 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.261615997 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262884428 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262895126 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265039916 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.262745043 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.263192525 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263433274 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274100637 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283642281 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268575371 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.282340297 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.263440777 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268606182 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281990882 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265874458 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263499497 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263734038 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.263572036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.264009708 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.260789779 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263801533 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.264067758 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265807587 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.26664875 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.267620861 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.262790541 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.262856557 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.262856687 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.264251065 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.263926651 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.264052801 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264136555 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.266373417 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265728258 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.264148388 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264433723 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271416662 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282483194 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.265859941 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264050721 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.265113532 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.26621744 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.266053514 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.265574374 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26909903 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269808498 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.267343742 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272854895 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.26599632 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273305692 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.265538293 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.26914206 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.272093663 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262773315 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265343894 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.266433719 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.265578693 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272076235 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283349682 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267507244 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270510879 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265308009 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266317437 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268337975 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26593316 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267332578 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.265431604 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.274226671 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.284220226 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.270553191 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267446096 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266380735 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265832682 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267640327 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.266944345 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270307723 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.267314771 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.268292602 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266778184 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.266972488 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267944642 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267146097 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.268605856 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.265849276 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.268045116 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273998373 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285852935 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271349986 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.269495079 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.274798602 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287150847 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27489846 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285452556 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.269254108 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.268272703 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.268679398 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.268974091 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.268500405 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.270248422 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.268562258 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.270660689 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272946801 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.267998292 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.271378182 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.269954223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.269594323 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.270179111 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278434325 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289344903 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268878251 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268339477 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261942624 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.264543852 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.268427438 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264417022 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264599792 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268825425 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264198987 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263805289 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256294589 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.256878781 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257465118 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256568238 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.256467336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.259174833 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249191204 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250208092 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249815951 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.248407022 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252655334 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249537315 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25084873 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.253033224 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247734653 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.256217365 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.267005624 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248229565 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247938098 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249939558 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248283987 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250667829 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.24438952 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245846043 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244770363 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.24581529 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250597592 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.250895457 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.247618728 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.247330446 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.242459984 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.242143959 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.242859265 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242609038 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.242775463 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242205201 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.243790898 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24348553 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.241728627 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.241928889 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.242640634 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.242536763 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242731902 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243969553 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.248327041 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244183285 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.238501453 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.240968671 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240596215 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.240628939 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.241476886 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248005556 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263337514 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.251846461 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.24625265 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242267334 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239939542 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.242094541 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.246325594 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.239347189 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.240986967 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.239536835 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.239089473 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.23775328 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.239939428 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238031983 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.243049711 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258137812 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.237729806 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244748079 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.254167757 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23671195 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.237947199 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.242028115 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236254053 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.233169718 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.235957695 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.237275493 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241552745 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.251531332 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233004086 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235032635 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.232698162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.234816117 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235901291 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233440292 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.234305221 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.227545768 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.230941146 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229867381 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231283586 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.227954699 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.23082947 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.231530237 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.233319942 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.234594683 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.227564993 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.231379193 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.229730859 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.231499346 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.230343749 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230260089 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.228268443 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.228128389 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.229665767 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230962321 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.23022026 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.232347075 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.230094187 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.231301851 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.231996533 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230536931 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23275067 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.238784223 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.23717101 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.228646218 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.230594267 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.231960879 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.234022135 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228592976 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.229527776 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230214318 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.230401393 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.229484992 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.229327824 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.229837623 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.233878322 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.241058362 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.243972206 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227812903 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.227102995 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.230936711 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.228458471 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.225155161 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.228980564 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.227423661 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.228481562 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.231518921 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.225387222 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232289788 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243013675 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.227681055 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.229429059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.228518557 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.23065311 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.226854268 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222974698 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.224882306 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.228146677 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.237782768 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.225180909 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23433523 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249934984 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.24346024 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.22519749 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.225023014 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224330632 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.225380859 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.226144998 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.224251552 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.22488492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.224719435 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.226016994 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.226458925 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230230758 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.226195463 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.226489672 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.225592364 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.224568779 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.226226169 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.223790176 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.224593634 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.22569907 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.225527119 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.225862976 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.226372564 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.22631065 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236369641 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.252087904 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.226207297 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.225795892 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.223755944 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.229575458 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.228493269 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235247363 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.233875601 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.226144835 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.226014773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.228876183 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226559445 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.225604913 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.227782288 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.226705314 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227060663 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.224520453 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.237702653 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250273314 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.231313446 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.226975821 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227246954 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.227858515 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229037728 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22769746 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227234931 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.228386279 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.228932721 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229770458 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.228088101 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.22862824 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.230387808 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.234383476 seconds)
  done (took 747.182020441 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225366477 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226121733 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225826864 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226538876 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226723706 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22529783 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225841462 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225756716 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.226870372 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226516542 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.226347886 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226198569 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226409687 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226996091 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226321563 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226906967 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226636468 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226321266 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226444481 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226323617 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226623562 seconds)
  done (took 26.897646183 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.228990495 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.22661632 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227640501 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229733683 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226648138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230755617 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227851078 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229538407 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230090371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227152874 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230999175 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230236631 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.228844366 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.22785564 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227037848 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230314845 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230720883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229240302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.230054362 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228531608 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230594292 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.229005934 seconds)
  done (took 28.185086822 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.230566613 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.231008543 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.230190202 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.228044273 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.229987689 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.228428319 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.230167233 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.232634972 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.23284524 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.23276323 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.230824092 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.232775355 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.236768464 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.235298788 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.232559374 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.231663857 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.375799967 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.230316978 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.231742513 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.231914258 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.229252553 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.237362746 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.249718948 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.229726175 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.2313414 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.232483954 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.23237066 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.232254849 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.233392169 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.233778474 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.235574703 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.232646454 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.234001113 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.23413141 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.231451203 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.233464301 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.235962599 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.23372329 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.230464165 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.232380298 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.242833967 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.249784287 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.232569551 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.238882826 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.252635462 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.232877318 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.23631153 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.239758538 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.231419885 seconds)
  done (took 61.75637656 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.231205535 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.231368689 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.229107507 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.232445156 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.231159488 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.231344379 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.233580384 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.228500734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.224255105 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.224567945 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.227477241 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.226059745 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.225964825 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.227603576 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.228915832 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.223749496 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.221132937 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.221388573 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.22123943 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.222039757 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.222789826 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.224508563 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.223843343 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.222689606 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.221787536 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219533044 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.219483913 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.22145721 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.219034571 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.219564713 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.221698621 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.22200076 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.22065074 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.219611698 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219023402 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.221381907 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.222821163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.219205578 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.22151074 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.220434085 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.223027333 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.221506538 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.222366706 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.222895655 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219170536 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.220769703 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.219491299 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.220444414 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.220476042 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.223143535 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.22278535 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.220020458 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.223801504 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.220189668 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.223546074 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.222856564 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.220498847 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.220356295 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.222647644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.220429467 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.220391106 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.222701916 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.221901127 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.223438758 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.223837547 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.221284223 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.221124921 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.222825164 seconds)
  done (took 84.32367265 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.22316807 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.223110124 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223555157 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223513873 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222621025 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.223564499 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224113445 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.222897131 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.224004797 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223672561 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22431388 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.225885938 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.224175754 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.224153835 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.223934421 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.224886582 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.223756088 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223177436 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.224726735 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224768217 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.224388273 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.224518252 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224331236 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.224902691 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225129466 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.223611934 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224027895 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.224638357 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.224599964 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.226149124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225499264 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.224420205 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.224899137 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.225895456 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.226936517 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.224755854 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224985256 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225299176 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.224572694 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.226512663 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.224423779 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225288809 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225418347 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.225312428 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226184983 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.22424007 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.225795959 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.225871988 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.22534928 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225927386 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.226015458 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225899315 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226542863 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226427489 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.225190579 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.226731032 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226305401 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225462187 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226069619 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.226148192 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226456508 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.228167091 seconds)
  done (took 77.088980642 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226659476 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.226999456 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.224304137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.224490181 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226251684 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224846378 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228180043 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.227655912 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227088854 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.228041573 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228347433 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224795875 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225334686 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22759562 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225365882 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226361959 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224677484 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225545804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228589423 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226221199 seconds)
  done (took 25.670424027 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.225218208 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.228740081 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.225782843 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226346617 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.22808905 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.226430038 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.228629329 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230023497 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224998656 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228775696 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.229287091 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229315707 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226597552 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227102838 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.229433484 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227192542 seconds)
  done (took 20.786490706 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.226230182 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.229357454 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.228745175 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.228637772 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.227832554 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.227566092 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.230119988 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.226588498 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.227242348 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.23071447 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.22999566 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.230785355 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.229900135 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.230110131 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.227500716 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.229621301 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.229182112 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.228877276 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.230883613 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.229334384 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.228603891 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.227798848 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.2313416 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.23023548 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.228626731 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.228908856 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.227850348 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.228250441 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.229054503 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.231699647 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.228558336 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.229881077 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.229316159 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.227653456 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.230661346 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.228711544 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.232172205 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.231434317 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.231621908 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.23131944 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.232158361 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.22901832 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.231862419 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.232067391 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.229162795 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.23121687 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.229955897 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.230441619 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.229074467 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.231443297 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.232254317 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.232698137 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.232544189 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.232339572 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.233582361 seconds)
  done (took 68.78911829 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232060577 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232411831 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231163972 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23318752 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.232912261 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.230635907 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233246327 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.231944591 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229965162 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.233646913 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.231854622 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.234012597 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230548017 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233535032 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231422641 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23331358 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230816343 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.231959908 seconds)
  done (took 23.326930975 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.231723635 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232506053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.234600358 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.23168387 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.23206989 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235026758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23156809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.234020195 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234840343 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.232987428 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232125657 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.23431384 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234742552 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.235861713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233013303 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232106722 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.235705793 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234784553 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232301113 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232434715 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.235268113 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234185501 seconds)
  done (took 28.287866629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.233908629 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.234800703 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.234210138 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.249409504 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.251721583 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.255628571 seconds)
  done (took 8.609308722 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240325677 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236040655 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.233575257 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236360609 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234865392 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233632947 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232934783 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231460448 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235598952 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233928522 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23380606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235588962 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.235724679 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233059039 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235623604 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236086518 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233221982 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233627982 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234775791 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236195026 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234337995 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235954546 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233857472 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234173304 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.234573931 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233294785 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237082424 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233924222 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23438333 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237660111 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236632917 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234877877 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237345623 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23376581 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238273137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237731581 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234114893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237618431 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237504811 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235523886 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.236705006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237389463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2379508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234917571 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238004401 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235575248 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23612845 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235274729 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235616318 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239117753 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238011712 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235904523 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238629791 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239177566 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238019554 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238745898 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236626954 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236696646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239165136 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237802891 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236678962 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238952609 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.236536976 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236980741 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23864116 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237299889 seconds)
  done (took 82.753300947 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236404574 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.236855885 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237555489 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238149222 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.237391915 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238096844 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2377997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.238107557 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237741886 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237864459 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240553191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238399689 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237873007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.237905642 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237101905 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.237800873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.237636101 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23804763 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23790117 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240560476 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238883024 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238099543 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.237675575 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238171226 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238457442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.240098835 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239747141 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.238886903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237564997 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238123492 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238951993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.237334623 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238740555 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.239305117 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238901361 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.238800586 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238362627 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239654777 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239128728 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241798924 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239333417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241573463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239359313 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239637255 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239019561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238915604 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239624726 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240141917 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239121282 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239800844 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239586318 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239570209 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240260676 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23949005 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239595974 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240349241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240181953 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240036664 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.239584188 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.242394023 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240676216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240820242 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243335708 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240615166 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240629903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241046712 seconds)
  done (took 82.938253707 seconds)
done (took 1721.425371495 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.281238621 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.309598704 seconds)
  done (took 13.748674394 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.404290514 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.358610476 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.241834766 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.29514988 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.242281959 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.263117185 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.259392666 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.241611263 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.242428658 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.242698665 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.242797004 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.428993822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.240251915 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.241972341 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.242770529 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.336596339 seconds)
  done (took 41.68494658 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.265956756 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.25161607 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.354732564 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.274075096 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.273228688 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.423809266 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.306155115 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.25711649 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.408341785 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.295408515 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.733824201 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.278445038 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.257157882 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.306551767 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.272740853 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.42883829 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.485755516 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.738644835 seconds)
  done (took 28.772255118 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.664125078 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.263635697 seconds)
  done (took 9.091586305 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.243130074 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.287091178 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.248592967 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.278952212 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.256507249 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.295215808 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.309654578 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.30888732 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.277463388 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.292281217 seconds)
  done (took 63.964764991 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.269371169 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.258207429 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.253168217 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.251879163 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.244169467 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.249340039 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.251216122 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.256232317 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.629856513 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.372077723 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.259765568 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.260386226 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.27013183 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.253348366 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.249824823 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.287208546 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.407245132 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.25733535 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.248732325 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.259192717 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.254303685 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.354295203 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.295772158 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.255940557 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.367950016 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.641357065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.260341326 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.261247066 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.433070147 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.257617793 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.252697781 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.255036523 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.256370056 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.853994253 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.718769509 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.265942238 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.275538853 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.268166914 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.251764096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.410031801 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.26234653 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.260867462 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.246885537 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.719959737 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.381877713 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.36700558 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.39158552 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.275713972 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.255686089 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.312678905 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.26068055 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.254804832 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.28277415 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.992093205 seconds)
  done (took 106.410444653 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.246048614 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.634568405 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.414326384 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.263989589 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.059827803 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.930569645 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.266315042 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.514553014 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.286385997 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.247858076 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.534142983 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.743505278 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.273618935 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.307976777 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.770878442 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.282543166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.248242214 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.956031626 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.268581256 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.248130636 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733877415 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254355676 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.268174563 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.503274701 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.285179901 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686957092 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.563038072 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.64474537 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.271406723 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.249646084 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.701202193 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.271719473 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.298391571 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.251441658 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.50079158 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.583480935 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.573996735 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.27136034 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.269368931 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.252127283 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.26771948 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.679800194 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.589717712 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.266653047 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.249439764 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.686127448 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.26795036 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.250448975 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.252504048 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.454530467 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.102931848 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.252599245 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.547481848 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.255571978 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.608299352 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354612392 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.301036119 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.716159252 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.268476913 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.422826818 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.283995449 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.250788644 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.256871203 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.251400755 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.259679509 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.581780492 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.564610734 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.25262901 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579735968 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.713600399 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.271557497 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.767073106 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.146433728 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.264083324 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.314282489 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.261563715 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.805245565 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729769766 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.300896789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.252826604 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.568849813 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.27324611 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.524105697 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.272181559 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.257137043 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.763399893 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.263439944 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.285335259 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.252106366 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.257825339 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.018368931 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.259691403 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.530517837 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.295534525 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.252530255 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.253239514 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.287262018 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.252801634 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.273299157 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.253870175 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.763717693 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.282205239 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.214917481 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.275951509 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.259275351 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.258936306 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.255474592 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.254472015 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.476090405 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.809733928 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.279838003 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.2542573 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.254288833 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.263472201 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.488652213 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.256736854 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.545426889 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.276549013 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254444609 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.276250311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.919225459 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279060241 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.254847905 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.258386194 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.123922234 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.462858101 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.275065937 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.258994915 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.25588948 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.275442717 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.439995035 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.279702751 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.348828422 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.254990426 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943613941 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.309763236 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.294458247 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.76536225 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.268819274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.191238472 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.284468286 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.255166889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.539618354 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.517466031 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.431315882 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.255052283 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.278396971 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941943597 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327583973 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.400603467 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.27324617 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.258854989 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.453570758 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.399161416 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.258754411 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.882768879 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.257445565 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.472669205 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.259102691 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.56361271 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.735503158 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.276595966 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.264256114 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947754174 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.953119764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.922124383 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.263231484 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.524516946 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.236314288 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.736945239 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.260092014 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.257674582 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.818499891 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.262745621 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.269469855 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.257952659 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.258791234 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.404625662 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428582148 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.437308357 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.266041489 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.692496048 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329956814 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258418939 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.286005818 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.259972407 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.604516272 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.306130629 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.258540314 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.306442534 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.258503337 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.263666891 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715171875 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.188484199 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.264470896 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.410941436 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871573117 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.279450584 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.261972649 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.957459437 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.492818264 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.7890015 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.306444598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.550417861 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.278096269 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.295192115 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.009925851 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279875653 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.716655159 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.281013688 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.260193939 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844767334 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.285226095 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.351795262 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.261144203 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.261295705 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790695137 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.280014957 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.262597001 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.436667711 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.280141844 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529034452 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.267161364 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.273548148 seconds)
  done (took 1093.119544345 seconds)
done (took 1357.949973198 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.260959896 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.265194603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.248843082 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.263727115 seconds)
  done (took 26.220830324 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.268864253 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.265837291 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.266810506 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.264758998 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.26805713 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.265208876 seconds)
  done (took 8.778456573 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.326870089 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.262714661 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.26570638 seconds)
  done (took 19.034816394 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.454804122 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.525092051 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.599839336 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.381448372 seconds)
  done (took 10.141182351 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.267601755 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.266305512 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.267017247 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.269223751 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.26924467 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.270711722 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.268949998 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.269641599 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.271073585 seconds)
  done (took 12.599968647 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.003830592 seconds)
done (took 82.960149559 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.629372777 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.245310831 seconds)
    (3/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.386215241 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.070540369 seconds)
    (5/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367693263 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.394434046 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.025468032 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.525832874 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.020899883 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.834429409 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060941106 seconds)
    (12/309) benchmarking ("sort", BigInt, false)...
    done (took 6.266380664 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.322029822 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160317772 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.247584834 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.348354768 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.294778519 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.517968178 seconds)
    (19/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.246169294 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.292780909 seconds)
    (21/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.605973972 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.613019872 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.625001143 seconds)
    (24/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.352748757 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.261906162 seconds)
    (26/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.273282108 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.242301169 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.726265831 seconds)
    (29/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.292719231 seconds)
    (30/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.637634822 seconds)
    (31/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.470632923 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.283479938 seconds)
    (33/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.980648824 seconds)
    (34/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.262415738 seconds)
    (35/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.36124136 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.053871033 seconds)
    (37/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.493696896 seconds)
    (38/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.635127914 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.071820557 seconds)
    (40/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.813576669 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.371150116 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.642680712 seconds)
    (43/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.5703311 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.281351903 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.780958932 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.268876258 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.245599263 seconds)
    (48/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.346003762 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.666025195 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.446903806 seconds)
    (51/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.248605102 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.289838036 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.89180453 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.377411685 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.521886108 seconds)
    (56/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.839497716 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.094367432 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.243430576 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.306670908 seconds)
    (60/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.382088677 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.091402536 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.296596955 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.245752356 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.342273908 seconds)
    (65/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.323417367 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.244869204 seconds)
    (67/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.266146907 seconds)
    (68/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.510184624 seconds)
    (69/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.794247995 seconds)
    (70/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.448689224 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.361421328 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.266341886 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.450835501 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.535761765 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.65783266 seconds)
    (76/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.332269048 seconds)
    (77/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.265058033 seconds)
    (78/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.367964449 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.392729615 seconds)
    (80/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.272221702 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 4.279678494 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.147013564 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.795412027 seconds)
    (84/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.276541175 seconds)
    (85/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.957398078 seconds)
    (86/309) benchmarking ("sort", Float64, false)...
    done (took 5.553483495 seconds)
    (87/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.245445224 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.426652497 seconds)
    (89/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.549940151 seconds)
    (90/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.371949338 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.831938542 seconds)
    (92/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.625132 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.251645509 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.279710958 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 5.267503357 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.368306794 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.267279001 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.297899089 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.266031042 seconds)
    (100/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.327457731 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.24720088 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.524770578 seconds)
    (103/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.312958713 seconds)
    (104/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.247032852 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.261361888 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.252475042 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.977312916 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.313358703 seconds)
    (109/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.291681942 seconds)
    (110/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.289610029 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.329075126 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.293415993 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.481746022 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.378982715 seconds)
    (115/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.351324279 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.268737731 seconds)
    (117/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.865993927 seconds)
    (118/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.275366782 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.275052133 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.21544934 seconds)
    (121/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.392162953 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.307489406 seconds)
    (123/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.61015857 seconds)
    (124/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.248314563 seconds)
    (125/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.250923127 seconds)
    (126/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.316462439 seconds)
    (127/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.446627289 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.315375124 seconds)
    (129/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.990098837 seconds)
    (130/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.332215602 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.248666664 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.780721838 seconds)
    (133/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.036071764 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.31351374 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.164619186 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.255173335 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.549970234 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.802842547 seconds)
    (139/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.67206908 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.910042771 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.599392782 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.974643408 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.007443747 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.25015421 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.549928338 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.679609274 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.269713504 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.467744683 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.306871407 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.997949708 seconds)
    (151/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.355098582 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.374504767 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.772015876 seconds)
    (154/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.367083405 seconds)
    (155/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.287502231 seconds)
    (156/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.330891761 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.015016374 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.297371428 seconds)
    (159/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.625150111 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.254409822 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.180062343 seconds)
    (162/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.294700636 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.673987842 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.309830172 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.356187151 seconds)
    (166/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.252045812 seconds)
    (167/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.373681433 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.708371032 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.252968802 seconds)
    (170/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.27138361 seconds)
    (171/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.776552839 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.165073239 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.153683589 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.27124143 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.285239348 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.547795845 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.339059052 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.297943407 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.449687736 seconds)
    (180/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.255813584 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.81147067 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.257718632 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.726603687 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.625115834 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.659453489 seconds)
    (186/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.310113781 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.297801811 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.108214091 seconds)
    (189/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.447922708 seconds)
    (190/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.877087966 seconds)
    (191/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.064465904 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.298341777 seconds)
    (193/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.292993419 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.289726696 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.314586936 seconds)
    (196/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.99780528 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.32121989 seconds)
    (198/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.380536483 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.252607905 seconds)
    (200/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.641540054 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.91204312 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.814551622 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.157871335 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.342929512 seconds)
    (205/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.399797193 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.253853658 seconds)
    (207/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.258155994 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.944055089 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.729452302 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.6466302 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.336424435 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.254043376 seconds)
    (213/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.553456112 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.025723594 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.279065792 seconds)
    (216/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.56108418 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.375371787 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.29948044 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.254793271 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.392237659 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.270642316 seconds)
    (222/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.970898938 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.499816088 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.261067426 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.30784847 seconds)
    (226/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.300030389 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.261022293 seconds)
    (228/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.260553615 seconds)
    (229/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.930932721 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.493951839 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.059737822 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.620884646 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.400064344 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.232179852 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.319561295 seconds)
    (236/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.375465793 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.147794259 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.614587681 seconds)
    (239/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.281905768 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.272400365 seconds)
    (241/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.299644411 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.276324669 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.33537506 seconds)
    (244/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.275496804 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.688244847 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.67889176 seconds)
    (247/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.271395754 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.276964737 seconds)
    (249/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.400562258 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.27587873 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.276003152 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.703969861 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.338015728 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.298176807 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.130004589 seconds)
    (256/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.281669249 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.316477367 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.103407759 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.27514378 seconds)
    (260/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.359801706 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.295904419 seconds)
    (262/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.957525335 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.504404082 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.466592511 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.283784003 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.355309402 seconds)
    (267/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.482707453 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.448203073 seconds)
    (269/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.883706095 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.368233181 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.342046196 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.257814236 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.320617098 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.665950427 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.315045335 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.260001345 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.279230288 seconds)
    (278/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.668517942 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.265082457 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.286037724 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.278202867 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.677068042 seconds)
    (283/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.31035435 seconds)
    (284/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.369345115 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.726417494 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.013164936 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.285146946 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.365491411 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.64553393 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.31099407 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.360674371 seconds)
    (292/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.209478691 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.275872843 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.400291642 seconds)
    (295/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.360922698 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.127170396 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.393394798 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.347383571 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.070037244 seconds)
    (300/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.515774599 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.288569497 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.323130898 seconds)
    (303/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.307188865 seconds)
    (304/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.362245453 seconds)
    (305/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.280346264 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.30272444 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.280909489 seconds)
    (308/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.869351428 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.451152893 seconds)
  done (took 1012.306883058 seconds)
done (took 1013.488527502 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.311975785 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.308070865 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.290656369 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.311160091 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.402401882 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.314810046 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.30202824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.293735901 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.339406646 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.340668968 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.289869742 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.313727372 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.292386654 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.290440985 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.290296447 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306845752 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.301725732 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.298403657 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.308928929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.301649227 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.307886946 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.289743635 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.340957956 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.312662625 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.296673579 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.295183533 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.295373558 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.311658472 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.403244926 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.295598837 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.296439692 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.303319414 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.300393305 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.297832571 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.287912222 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.312507277 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.304507832 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.303107876 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.296213943 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.32538043 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.682715671 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.312530874 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.294958716 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.294606538 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.294380659 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.298302584 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.295203517 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.300895137 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.308818107 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.309450412 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.682616603 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.326618741 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.296988037 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.296374961 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.306779483 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.295736182 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.299691838 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312920963 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.314049731 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314239825 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.288507059 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.303156864 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.297892357 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.310669251 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.302629563 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.718189661 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.310209497 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.301032398 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.686473881 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.323725153 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.727973195 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.325484654 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.297656491 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.309679475 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.327018446 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.30488864 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.29700824 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.295291855 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.303016055 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.294468528 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.306427621 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.309779825 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.301277056 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.296973712 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311002206 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.319431662 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.305947182 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.296870675 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.305880819 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.316048602 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.303751264 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.306837218 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.300287823 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.292128631 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.307133016 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.30096305 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.299932859 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.299549912 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.302476864 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.308176634 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.686575815 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338106627 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.29471191 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.294878871 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.296749703 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.311946103 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.687100202 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.32064427 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.320587288 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.346038555 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.299320162 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.292399866 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.307129948 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316334245 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.307689714 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.30203902 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.294420035 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.295376064 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.696149113 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.334648442 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.30186199 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.2965807 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316237415 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.30078638 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.296660273 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.310355466 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.305625224 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313562993 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.420106164 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.311364375 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.330377867 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.297424971 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.303525379 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.322166675 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.31731061 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.330526422 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.303325962 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317129669 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.315210538 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.296296934 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.310046001 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.310540309 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.301789715 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.306728974 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.294466529 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.322467881 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312854134 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314390341 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.322041723 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.420684634 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.297672953 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.296612802 seconds)
done (took 219.303699787 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.359232459 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.296852419 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.379632942 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.297691906 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.396531906 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.397331532 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.295234714 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.294917476 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.294183988 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.671647007 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.295761906 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.295781106 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.2897029 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.295332346 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.378406125 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.298424204 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.295171664 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.635261687 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.298368496 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.368354857 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.296219927 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.296146391 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.297843444 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.67622259 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.296310954 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.292960789 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.368253826 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.298195918 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.642555419 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.293926854 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.296295982 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.644656841 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.388625519 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.316339576 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.308133083 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.305540801 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.398837901 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.316625384 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.383205238 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.382791629 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.381574372 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.337241436 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.299917641 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.298439108 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.300966135 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.299824317 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.296957405 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.326640059 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.297684665 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.29926313 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.636496392 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.309032005 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.297406258 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.297642357 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.29835315 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.328215455 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.297964009 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.299869871 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.38961554 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.300586708 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.362976561 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.678440153 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.676443998 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.301039646 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.300828833 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.298636845 seconds)
  done (took 146.055028682 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.367637983 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.373995301 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.410516798 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.324034748 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.352224936 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.413876 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.322512382 seconds)
  done (took 10.777037698 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.30704832 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.302512191 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351017342 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.351793955 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.302398212 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.448657663 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302886406 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.313390038 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.300381715 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.353921539 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.304082162 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.303696137 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.30960761 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.296112523 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350364266 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.313150915 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.416831947 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.30363228 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.302850743 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.452697304 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3010369 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.309057077 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.354174579 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.313870828 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.304886795 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.308937403 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.866635301 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.30344546 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.300465037 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.303097769 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.302073869 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.341982646 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.305405495 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.303317889 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.302499799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418237542 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.305499903 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.301910372 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.305414068 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.301887422 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.304174237 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.304551362 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.304554916 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.302072085 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.305150788 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.326451285 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.305030898 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.304823711 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.305003471 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.304190795 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.354773533 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.305494789 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.302312556 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.30211006 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.359693899 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312037962 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.305542047 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.301733228 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.305723949 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.303723874 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.457060724 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.352958369 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.307186743 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.353205229 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306430643 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.306355537 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.306201757 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.305901068 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360703645 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.306363291 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355289015 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.304155651 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.458966647 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.329067867 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307823027 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.307774373 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.309283704 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306653964 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.307450084 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.312038237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.3044588 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.307016744 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.312620904 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305621672 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304484472 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.408824369 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.416552401 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.304664526 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.318983656 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.314219495 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.305311029 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.359820284 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.307941944 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.304944403 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358857587 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.421507569 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.360395731 seconds)
  done (took 150.352409394 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.312035976 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.315259861 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.309845612 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.323402904 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.307751445 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.306706819 seconds)
  done (took 9.092386432 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.309393241 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.308957031 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.307695866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.308760164 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.307467082 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.308406788 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.307373355 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308702372 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31038914 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.309567292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.308638591 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.309156994 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.309062328 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.308043045 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.307357182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.308953306 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.308622083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.306708803 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.308687454 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.308719493 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.403401904 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.309155218 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.308748217 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.310209719 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.312441307 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.309734048 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.317189479 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.310272572 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.310494794 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.314317789 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.32772616 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.30994535 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.310930786 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.315186107 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.313306904 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.312069178 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31445626 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.311199275 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.30954897 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.311155489 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.311358006 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31193917 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.311345203 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.310614672 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.313219133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.316351044 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.31560082 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.317928833 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.31221994 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.314158165 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.31326679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.312367848 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.312981055 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.313352586 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.314847503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3322198 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.317138008 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.311730894 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.311359092 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.314506228 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.313421927 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.312248199 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314024593 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.316209842 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.3198896 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.314206705 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.313753474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.31746075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313554027 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.313028808 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.313784242 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.313654027 seconds)
  done (took 96.796274071 seconds)
done (took 414.279438836 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.616749211 seconds)
  done (took 7.840947496 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.340831876 seconds)
  done (took 7.566318885 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.342364936 seconds)
  done (took 21.56846059 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.363344576 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.364476421 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.342626215 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.32259734 seconds)
  done (took 26.616980857 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.464641284 seconds)
  done (took 7.689135341 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.316004014 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.305592963 seconds)
  done (took 13.848143612 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.713419507 seconds)
  done (took 7.937901863 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.865881962 seconds)
  done (took 8.090410202 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.319719291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.343633749 seconds)
  done (took 14.14612746 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.297539162 seconds)
  done (took 7.522879539 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.064508773 seconds)
  done (took 8.290664705 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.32149734 seconds)
  done (took 7.549329811 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.379997602 seconds)
  done (took 7.605391119 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.133326888 seconds)
  done (took 9.359381368 seconds)
done (took 156.854970891 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.309983184 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.313249592 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.313945471 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.312087697 seconds)
  done (took 26.474857918 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.348855562 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.350365322 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.350053452 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36080821 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35212338 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.348971395 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.340959681 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.342771796 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.360903392 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.351833933 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.350961175 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.352477058 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.350248484 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.342644276 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.352221 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.351773388 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.361271159 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.352457297 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.342615938 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.35291701 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.31707059 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.361524235 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.352600038 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.317907943 seconds)
  done (took 33.59285016 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.837509877 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.387116584 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.47077837 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.36954891 seconds)
  done (took 7.291402268 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.368736343 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.371494303 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.382601013 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.42173194 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.451437128 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.380876378 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.341831043 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.339282768 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.324852229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.37192418 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.446795219 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387156185 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.45480583 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.318783505 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.547624601 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.319093273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.318806066 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.370922785 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.422338932 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.4345615 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.320272683 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370270146 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.374927693 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.389065757 seconds)
  done (took 34.45880785 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.319218947 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.326927055 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.317333176 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.318381161 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.327433292 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.318249134 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.319305425 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.320242375 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.3194452 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.325632849 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.31705311 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.331583419 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.318751217 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.319135779 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.324943805 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.320621155 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.325498383 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.317405738 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.319895156 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.32356985 seconds)
  done (took 27.660522125 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.312821099 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.238524839 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.665548208 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.569304433 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.31282352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.320493708 seconds)
  done (took 27.651164528 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.386982554 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.539630836 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.320279635 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.666848294 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.758249629 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.336125186 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.321468584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.553676226 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.864631083 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.860529053 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.381237938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.385684519 seconds)
  done (took 19.604967224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.327667792 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.320880489 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.321149165 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352849188 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.373795397 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.346165651 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.327793046 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.315221397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380016535 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.398604763 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.34731384 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.375807053 seconds)
  done (took 37.418706631 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402565961 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363399134 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.200873303 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330000622 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035327678 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526880996 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398424206 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.766664212 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.326267722 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591073295 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323622814 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41205025 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571395678 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318443935 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320056041 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.270604754 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565553491 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773653991 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322220724 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.178279222 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349805548 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.316690254 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.282365099 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352750802 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527881584 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458821752 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.57882253 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.09422268 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602820425 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334429316 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328185688 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316183252 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591721018 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980468652 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437252745 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327347638 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32159367 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.967806502 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306812075 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.183832341 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.106527944 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326802909 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328878902 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316926945 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.253088728 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323425451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759678298 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.324352769 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.030060699 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319273499 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330276243 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413042218 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.322297286 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.888871214 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320742959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.333204655 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.315798713 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344445299 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905565253 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.649416456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329700813 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.260274952 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317179491 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.260383555 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949725241 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.445270842 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.322784907 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323162498 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253694831 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.233967245 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343479645 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465839155 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.342086834 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969672911 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011111505 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.355672256 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256531338 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84338968 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333831228 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.260197595 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546667831 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.095600791 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256614399 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.267892373 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.253543678 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993490554 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332039511 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.65813455 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347018368 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.769854657 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.33869755 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336937989 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343988295 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543527331 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.198438623 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320210698 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.107626737 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474637662 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343391654 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.751727085 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262759132 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.323877078 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577299012 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.532198468 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333727438 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.2899196 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543496522 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334714626 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.347547679 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336120739 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.338448661 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.878864704 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356840069 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646454223 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34595365 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.097886059 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017243851 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341837272 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.430203083 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325091554 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568840868 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.045327841 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.209576214 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390245113 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327991888 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323471741 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.283308215 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.923037263 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.20434512 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.318436655 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329534633 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.339915661 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.323735243 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271641431 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.330714144 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342189232 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.110355343 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54640933 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323695969 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621463771 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.258797998 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470375599 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334183578 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.547153232 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.509257155 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.34684775 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583853034 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333030468 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342821476 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342022918 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343248193 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425742559 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3462949 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.334121911 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587619501 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.328214903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.32817062 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.306335522 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.108835134 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325956826 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.331283483 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329289308 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912109875 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325881756 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329649953 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21393656 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.338895065 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39356843 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330952548 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.335696981 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.083534693 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352854697 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.33811792 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.336803731 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556150184 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338137883 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.282553448 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413989716 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.52251146 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895548542 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362657975 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.261024589 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.037487715 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.019050372 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326583255 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.51634628 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.326187843 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336296919 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33806274 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330805694 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.892843745 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351432887 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.21133616 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.340286234 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337753279 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.333999862 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328550715 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.068366235 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.702508663 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347512685 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.345869583 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472055352 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342125199 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261886835 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.845725148 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334007087 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32863921 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.107453643 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363894354 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.21213616 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808060195 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587777387 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337024295 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348079415 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.380987608 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.368332959 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.330993671 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.158380076 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368470793 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.35422009 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344287794 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.34058188 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.272165528 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.698159238 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8956464 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020373372 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879136257 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263023284 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.337645038 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.246748038 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.763392736 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272217641 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986687185 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509991423 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786028702 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280707646 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527228699 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.52289744 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09203019 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348119646 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.556733251 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238544524 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.167423518 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367080109 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542022093 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364376337 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.330524404 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267213052 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.852315721 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568004004 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.157670789 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416080595 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771586569 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.173294612 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.136421977 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.364140705 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.632717528 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521262132 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883367271 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.718623372 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341613188 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345062101 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813367883 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336318779 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857263508 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943279293 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370361789 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.537082284 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274916813 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.34302717 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.343241754 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.328022459 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.586869126 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.339250528 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.592192454 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343342508 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26622467 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34373856 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852942316 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.211097944 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.338825642 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332946994 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039503878 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341985995 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626310931 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.341735547 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.083199714 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360111331 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267895022 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266607369 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.027401338 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342494672 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309056324 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80559882 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.340207948 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355726219 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34137818 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183040138 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589709489 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.347649092 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.89994295 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579329024 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337865569 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357807588 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.434190286 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.204728699 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.337162451 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.228563105 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.569484925 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348562584 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558630033 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.256200241 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.235983642 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36776699 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546255427 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.240117373 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335016546 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591530856 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.067449298 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.337673989 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02627629 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379546524 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33890433 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354061762 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33972221 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363202834 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424803689 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346019582 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.346370037 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.346173858 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503620565 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358478828 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345452686 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.350416505 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429432024 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.701498532 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.079410865 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.117631223 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906316041 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075328308 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928007964 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373976874 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335531497 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335874264 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270434259 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48158483 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.857038755 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604671451 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461887898 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.325599018 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377263938 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.180840194 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359136454 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548439836 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603097847 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.300468509 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334327305 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.121380955 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.210582034 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340894946 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.540823084 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806548264 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880902427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448564443 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.328731389 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.768439949 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612618482 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421218072 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329280473 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919503562 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.33594039 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625685689 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.362428898 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345848621 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486435695 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.340664707 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991119296 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.366062182 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.49142414 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.104957995 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.320817965 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592814996 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.795267541 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350619802 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903306983 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.036818121 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602530225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401077588 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342188913 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.43753873 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479347699 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.334785598 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.234423743 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331627424 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176681323 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.043485519 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.341649828 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90107901 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61876137 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.330142798 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.335734954 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363014289 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.341987795 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555864457 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001620523 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563257901 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342820491 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343358135 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.903489768 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901692279 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369404699 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267565804 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336988577 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579460409 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594473057 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35622106 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.786511933 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.045997718 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857328318 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306642948 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355865213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338872625 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01958264 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908676004 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.100040863 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818577579 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.999093737 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.334086038 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615244568 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.338965276 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.34109287 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617798607 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.33798705 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333731545 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352416231 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.904943638 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115647445 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.341796802 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.262734652 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.278896296 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.560687659 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350266844 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281594717 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337529369 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.507671331 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34307325 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465275956 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347283604 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.339746831 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342584284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.107763193 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619798213 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.341867281 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.319888525 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.263671963 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357918611 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367746383 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592700643 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341823892 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.01038347 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.68682202 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592308132 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336532974 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.323873984 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.340186465 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336793035 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.054251614 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347643813 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356830283 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877408632 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.339104386 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.35516218 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340733796 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.553531573 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549276842 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.337825277 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359120875 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339522759 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361051493 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.238390519 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103937732 seconds)
  done (took 1633.687454113 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344336968 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.352527626 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.356245932 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.383177341 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.355435764 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388024721 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.397842652 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.37738333 seconds)
  done (took 52.20776008 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.337265853 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.517565815 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.369339161 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.34182343 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.355407029 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.345807761 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.786001259 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.36747161 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.347345044 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.348083211 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.350354432 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.351533186 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.972496288 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.356030945 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.352949221 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.334463871 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.349896163 seconds)
  done (took 65.437995084 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.342839728 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.866824886 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.426599705 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.342323788 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.318275192 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.372115296 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.05367058 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.351087463 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.350698641 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.638513438 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.008488145 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.349942941 seconds)
  done (took 84.676760893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.347880118 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.349205434 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.348694121 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.347436466 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.348722968 seconds)
  done (took 7.996218928 seconds)
done (took 2059.385780737 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.587559375 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.996697906 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.963468248 seconds)
  done (took 5.215755715 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.488119562 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.538633307 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.657083295 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.664790431 seconds)
  done (took 7.604172445 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.620456543 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.715334998 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.533412515 seconds)
  done (took 6.125627994 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.701103486 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.349757762 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.374762624 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.342403113 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.350076444 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.350666903 seconds)
  done (took 20.30094404 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.34661753 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.349581713 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.347064146 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.349449971 seconds)
  done (took 6.649742887 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.322381188 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.021825167 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.324197713 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.343662717 seconds)
  done (took 18.270032402 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.091333433 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.107318407 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.090572527 seconds)
  done (took 7.546494407 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.34380659 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.193713766 seconds)
  done (took 9.795529464 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.633717257 seconds)
  done (took 2.89205546 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.479157739 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.673030713 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.35412226 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.269301211 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.38839875 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.030052831 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.934833335 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.512983998 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.241073005 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.442359902 seconds)
  done (took 27.583792243 seconds)
done (took 130.252650144 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.091890546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.729218835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.550429768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.063785798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.571443516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.551357479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.552158665 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.027804515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.574570165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.571590208 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.106506305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.574100479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.501318661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.730263669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.50226093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.34963007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.573668965 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.146337472 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.748783576 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.945440948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.549943638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.706150372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.933175244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.72817527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.585289226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.504646043 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.27861271 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.346962224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.923818645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.340198586 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.512448992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.123016956 seconds)
  done (took 189.254128571 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.347004934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.36100263 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.347652311 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.36941489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353441711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.35302617 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.3711482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.369202645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.347465395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.360636718 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.346389727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346903092 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.34737807 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.346765192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.347554564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.346962678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.362361386 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.362100267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.348254601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.347789023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.348790092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.362345436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.347706313 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.346835815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.351995114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.348184497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.348127839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.35716899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.348196973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.362658402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.351638913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.352496422 seconds)
  done (took 204.569969948 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.347264549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.358687889 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.347651371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.357748263 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.362386844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.352205402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.349760353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.348969663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.360088961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.354821961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.347710627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.348155024 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.347617468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.348749921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.366475571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.348578397 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.349165463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.35635767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.348052579 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.350104328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.365096183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.358451714 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.349614445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.349987759 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.351659414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.349162181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.36421701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.350099135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.349320883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.353240312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.354912829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384778121 seconds)
  done (took 204.594072039 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.552072335 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358124674 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.358216207 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.316105242 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.356893825 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.357509754 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.351695225 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.547437212 seconds)
  done (took 14.462410979 seconds)
done (took 614.139142187 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.604050922 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.332207584 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.558733483 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.378824245 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.127026512 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.396601759 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.378955885 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.540342121 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.274846911 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.54825311 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.572294126 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.393406969 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714861213 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.3839888 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.624538823 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.474709894 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.227459215 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.352290117 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.690516454 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.912338769 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.647301125 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.8177967 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.563611782 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.26880681 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.733999303 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.815570145 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.067457426 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.221642699 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.393519162 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.692613708 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.908922539 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.306460051 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.442627066 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.442374117 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.498517949 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.480139516 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.28797631 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.439126901 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.59086171 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.569018937 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.894378559 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.087529217 seconds)
  done (took 91.922178946 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.342388652 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.341924499 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.341827547 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.342484444 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.343865235 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.342524864 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.341389623 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.340637929 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.341806145 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.342709911 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.342157685 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.343105596 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.342047058 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.343611612 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.340992215 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.341955484 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.342432287 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.345236893 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.342536442 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.341880702 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.344451862 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.34278679 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.343310671 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.342846934 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.343367232 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.343525117 seconds)
  done (took 36.176853782 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.362382431 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.611463271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.769679839 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.375548032 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.362595173 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.366430786 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.43831582 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.366869072 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.365056645 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.3661499 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.533970677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.367631426 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.397539655 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.79005029 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.368735753 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.363977415 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.362365558 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.360779611 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.61806864 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.376243114 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.4606076 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.365753147 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.437257625 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.375693346 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385441505 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364125601 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.36915391 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.880611133 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.387539605 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.534249874 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.133537005 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.443395832 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.839259151 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.798058062 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.14183906 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.372434299 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.364918421 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537741479 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365482087 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.363820337 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.439472876 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.364612676 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.773610773 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.988317665 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.389051691 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.365605132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.899658365 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.555815427 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602745827 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.373934507 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.795121837 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.367972888 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.367740918 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.366785152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.602207433 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.374956347 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.366648339 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.897650325 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.39578145 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.440398493 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366390179 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.36644679 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.625955098 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.370203352 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.617891817 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.371782914 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.374495267 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385220693 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.775491138 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.377668283 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.003619952 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.391907147 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.367643341 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.536208941 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.617819928 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.942415081 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.395307492 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.629300384 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.851651354 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.465290113 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.377432823 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.87177116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.469577765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.377637784 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.371151139 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.369153569 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.368623224 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.418442746 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.439546202 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.939778543 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.01794338 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.921831591 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.470351373 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.383843594 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.368772801 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.898563784 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.394385113 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.3684483 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.77049504 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.008009602 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.390385419 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.377325807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.008540665 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.394150665 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.444161653 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.379206935 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.784220801 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.376691698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.41857514 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.368579582 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.379830415 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.390417955 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.443857691 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.382005676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370739649 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.978465817 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.570562056 seconds)
  done (took 179.741173695 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.363066598 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.363316646 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.373599287 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.362654358 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.36301087 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.370942704 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.364414771 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.364576363 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.369455744 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.364290992 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.363568899 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.364684651 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.365955846 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.371413298 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.379538769 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.371281847 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.974808194 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.364182757 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.374415934 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.368256279 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.153377884 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.373676743 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.364621352 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.388302158 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.365047435 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.3668037 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.367801759 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.387907464 seconds)
  done (took 153.001547304 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.371504378 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.919706638 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.392189709 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.497118203 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.399711678 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.369649154 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.496583558 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.434456145 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.390869075 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.370436699 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.369754233 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.664799767 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.380174525 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.87462428 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.562010344 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.519961204 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.882482281 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.396038164 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.370933485 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.370739582 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.500092911 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.382244124 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.666253281 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.930345994 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.395017795 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.924335404 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.364785454 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.374883238 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.373066487 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.926192454 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.395110665 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.667282099 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.454581441 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.437948865 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.948702482 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.901554534 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.900445886 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.51829427 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.381386253 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.371465948 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.371737932 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.357193601 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.927051881 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.39919438 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.373812272 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.912831911 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.39889039 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.374058368 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.380396353 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.372744732 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.430976352 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.455931659 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.69697946 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.939485249 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.47143373 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.393700621 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.501136355 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.750162599 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.384313388 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.878010372 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.364763385 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.930552153 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398858214 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358581278 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.373806835 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.380293367 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.517167918 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.507699767 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.884970865 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.39664978 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.880325705 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.536747193 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.381279941 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.374270639 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.376185962 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.930881984 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.903989364 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.542989712 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.511843584 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.569899485 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.363633695 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.375426621 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.360088873 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.449715849 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.382816965 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.931555789 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.904333971 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.402074693 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.377783358 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.376906069 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.376824015 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.545931363 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.956286132 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.47494437 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.872322402 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.698548991 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.682222132 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.386365742 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.434039206 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.398330752 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.676314947 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.386906411 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.432129943 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.813450849 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.677005818 seconds)
  done (took 163.75775079 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612093238 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.552927064 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.469105319 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.51049705 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.963118376 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.942374965 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.590052791 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.517426586 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.481779394 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.63867694 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.514274549 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.471074109 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.543060759 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.455654226 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.090371552 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.462332662 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.486226439 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.538331874 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.492512532 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.383261322 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.023032723 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.668546531 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.557060791 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.223602746 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.474637363 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.124879412 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.930832023 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.907042175 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.558473316 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.679739297 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.895184723 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.495042445 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.335764537 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.059569916 seconds)
  done (took 65.932642832 seconds)
done (took 691.796601905 seconds)
SAVING RESULT...
DONE!
