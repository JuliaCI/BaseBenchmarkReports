cset: moving following pidspec: 3515
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.372062514 seconds)
loading group "string"... done (took 0.565907257 seconds)
loading group "linalg"... done (took 7.7488546 seconds)
loading group "parallel"... done (took 0.173273084 seconds)
loading group "find"... done (took 1.190898404 seconds)
loading group "tuple"... done (took 1.879219567 seconds)
loading group "dates"... done (took 1.279634935 seconds)
loading group "micro"... done (took 0.236885854 seconds)
loading group "io"... done (took 1.10972587 seconds)
loading group "scalar"... done (took 42.479275225 seconds)
loading group "sparse"... done (took 14.221646005 seconds)
loading group "broadcast"... done (took 1.066766056 seconds)
loading group "union"... done (took 14.956001269 seconds)
loading group "simd"... done (took 4.852445413 seconds)
loading group "random"... done (took 9.860441184 seconds)
loading group "problem"... done (took 2.034455105 seconds)
loading group "array"... done (took 23.085066261 seconds)
loading group "misc"... done (took 2.13070521 seconds)
loading group "sort"... done (took 3.567286979 seconds)
loading group "collection"... done (took 20.005716455 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575786782 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143340288 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149877835 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130546663 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206618522 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157880148 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158564008 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098625561 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.990505747 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180240645 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15460239 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525844198 seconds)
done (took 5.230347663 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219600639 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094719753 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104028819 seconds)
  done (took 0.902769447 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078459068 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146212693 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094605133 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078948512 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097814277 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079431882 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097905087 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078947944 seconds)
  done (took 1.383930889 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087676199 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09835302 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084509365 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099142809 seconds)
  done (took 1.079993028 seconds)
done (took 4.377235168 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741601017 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281431472 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205429914 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.471324952 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.20281686 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222461524 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687849544 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.398983018 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254444103 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098605234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143192526 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38870803 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137839538 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.700287496 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091454984 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127961134 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.190110166 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.460100626 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083937421 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111569321 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118980215 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142733207 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132416308 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094479863 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187455716 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081545041 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195645652 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.112700153 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080707468 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275440996 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202519005 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693430162 seconds)
  done (took 11.066696807 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113246144 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137339852 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100025112 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13966335 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139182386 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.102165015 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085527958 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098601967 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124705732 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179744256 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133002003 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.123733995 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096592901 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084616797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11819054 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249473966 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122267277 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101835932 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102901761 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090009121 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141927007 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115304184 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111562934 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096188054 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170384538 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224261078 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114077075 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.13003606 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099909119 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114992235 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146524361 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145915374 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096378835 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081815861 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176851017 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127123574 seconds)
  done (took 5.257325804 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.099002363 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192583255 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124051332 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176041604 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082268626 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114221166 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147786997 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.098447213 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118360313 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263150097 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.161632821 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.496206463 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143723136 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099343884 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099650931 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084240168 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098969645 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.575636416 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.160694294 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137862583 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098162991 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105832128 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.106273771 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124725328 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082234514 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096405024 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084360155 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095217844 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10973036 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.680760252 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16723717 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099274984 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140071051 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104340164 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104019402 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136280208 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199970883 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1244837 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137216954 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080994496 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098453859 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179764877 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088652926 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100551692 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123357449 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135498258 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120558965 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100221736 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098717746 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207113164 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095971155 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099017508 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938486767 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183523856 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105132238 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098125135 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295980547 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117813606 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098142958 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078974092 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.280618863 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.194971257 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100143321 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080427397 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098674635 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082369683 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.755555632 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082802326 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.698060587 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084531672 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107844141 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084474343 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098645535 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105309354 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089966814 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11732245 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080989501 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10140776 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080537764 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09887717 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082619374 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111205245 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.218685345 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100605128 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080211569 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097607114 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117887725 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114017663 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.1013751 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096265481 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117565803 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098823818 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101404195 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119068905 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102412244 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109631047 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085328786 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146196757 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099524516 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138847062 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096195381 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.1253194 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102504271 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117007283 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114426091 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095556381 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083403627 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1714808 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097281546 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079609643 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099461335 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080441015 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102148752 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083258798 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113302285 seconds)
  done (took 23.730349113 seconds)
done (took 41.860612068 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.333812528 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106725042 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105357526 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10638711 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104230656 seconds)
  done (took 1.537413043 seconds)
done (took 2.290168839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289101246 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177059056 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096382153 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169476175 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095030279 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169394634 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161367148 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094813458 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.226939688 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095624647 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166809531 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077736425 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097407801 seconds)
  done (took 2.697996002 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096008499 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117580715 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084569116 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113206796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078292284 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113165593 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094579052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119852902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112241565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08769488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0963311 seconds)
  done (took 1.867656151 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095355152 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115991748 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084543801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114056998 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078809463 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113896561 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095288517 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12037654 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115288745 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088767311 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096826876 seconds)
  done (took 1.870772029 seconds)
done (took 7.179033886 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09292375 seconds)
  done (took 0.841384905 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.951103924 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.850003189 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113049692 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151389146 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301812815 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194815361 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.47783034 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124804921 seconds)
  done (took 11.123897223 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.147068373 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088104432 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.106391645 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088604057 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107288727 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084734525 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102080387 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102508493 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087635046 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102894046 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086981451 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104441631 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101398365 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084552885 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102584155 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086448324 seconds)
  done (took 2.397671818 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120663808 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121401297 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11132408 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112224577 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089090143 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.109742361 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108309001 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091025918 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105394223 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106289573 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093253591 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109641594 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105836602 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082562672 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108883619 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109634579 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087532899 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109299789 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110765924 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092544249 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110094736 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097334592 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089051163 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108986999 seconds)
  done (took 3.357287349 seconds)
done (took 18.471947948 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160145373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111273434 seconds)
  done (took 1.026268515 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097213596 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11609647 seconds)
  done (took 0.971920128 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099210525 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097410283 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124542097 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112961664 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083295556 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099280647 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123128989 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082041016 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100111107 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082419793 seconds)
  done (took 1.766212008 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083848234 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112418865 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103474297 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098496936 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109123157 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097620277 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091570847 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101905085 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113289841 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079428128 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104449467 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116133292 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088528555 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119188044 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108094403 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085057749 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106541274 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101317674 seconds)
  done (took 2.586094244 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081685233 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09868648 seconds)
  done (took 0.945733384 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084191829 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09621087 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082856446 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101507393 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096132487 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079459171 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096230916 seconds)
  done (took 1.401142459 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.495128908 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138570538 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267229236 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103722594 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106346553 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307849693 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.101808291 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086800574 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107905567 seconds)
  done (took 2.542726853 seconds)
done (took 11.997961186 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094871731 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118291903 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115872679 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.479308871 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11061024 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102078432 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148947117 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257871448 seconds)
done (took 2.195629316 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.14481331 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.605806999 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.440045583 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.239247881 seconds)
  done (took 2.056212887 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40530649 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101490814 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085241792 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08414968 seconds)
  done (took 1.447917195 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081143634 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10148346 seconds)
  done (took 0.955143982 seconds)
done (took 5.375849995 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081926277 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130406592 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079139327 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.102098988 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079093873 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102581607 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.079560488 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099467098 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081411186 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100061127 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098043799 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083290149 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098115397 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080934476 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096488363 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082558552 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096900232 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080659607 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098555845 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082681079 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096682501 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083082957 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097255523 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080591073 seconds)
  done (took 2.997941528 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100871788 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099507455 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105140753 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088477158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105514073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087980811 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105891972 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099759358 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088588876 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103654575 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103568625 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087863039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102542017 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086837887 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103223852 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104259979 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08945603 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100869816 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084922392 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104686762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105224881 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083742574 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104031324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103906446 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087551896 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104696014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084596434 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101079174 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105471336 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087534514 seconds)
  done (took 3.697363902 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087371236 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096787274 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081840887 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105032411 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080249211 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099695761 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080176893 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098225773 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081605557 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098227538 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082492485 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098835457 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079582946 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099716692 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080862584 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102830133 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114624202 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082236374 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097560644 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08154369 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101392446 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080069993 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098434349 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080771893 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098106345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080057235 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098573066 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080236871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098944293 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079426133 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101535632 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083257363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099400507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086260228 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102775909 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079365266 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102369878 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078780203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100499361 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096902657 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080838004 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096778864 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081433149 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104329643 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081071593 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099590474 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081407694 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099717329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081552863 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102172342 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07991427 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098542538 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083125284 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099994921 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083351197 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098162529 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098363665 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081137024 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09845789 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080766908 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096685044 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081165906 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099922209 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081324696 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114198792 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087360626 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098693046 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082337948 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099988413 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082440617 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101819015 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112138912 seconds)
  done (took 7.384687062 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084999322 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108011441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083223379 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101414699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078229208 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100207568 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101771806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081862385 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100253997 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088245834 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099531434 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082059452 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101512151 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109693925 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082559353 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100222636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088076975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097598569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080534361 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102961302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081208406 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103535542 seconds)
  done (took 2.839953341 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211852039 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107320012 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147288344 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110613138 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08629865 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109712444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105199422 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089566407 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10582241 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.194280012 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104059283 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105461589 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087061794 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103601088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103473205 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087806384 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105786413 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087376533 seconds)
  done (took 2.838145236 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095480261 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102168146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105324369 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.103831939 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103040831 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087230231 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108485139 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111371752 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086706353 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101902865 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092917027 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105439253 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103873793 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084582289 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104249916 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083130882 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104413528 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08359423 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112016982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107737717 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106189297 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09412783 seconds)
  done (took 2.975679407 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098879887 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101622481 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121218256 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087960779 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098896689 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082822729 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110598082 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083310161 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111184409 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102732724 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084154286 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100843456 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090757692 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103032559 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108695056 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08505715 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103875655 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084185578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104514011 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079724973 seconds)
  done (took 2.734338729 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105133042 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104313621 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102486119 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095914177 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104491558 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084358908 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113042006 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104181606 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084117019 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128967264 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103966135 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084901446 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112993361 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109882946 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10219783 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095340355 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113725238 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11295798 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084695344 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103483438 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128184424 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085412729 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113225789 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104731167 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084387937 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10416339 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102729246 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092033811 seconds)
  done (took 3.655395527 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082689408 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101271451 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08471833 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09977077 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081668947 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09898913 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082304128 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099177604 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083884039 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09921197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084143327 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102293081 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083619548 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102585581 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083788866 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102130245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083998622 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099594477 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081415496 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100390223 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083842081 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102065288 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084005728 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100694556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080466553 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103556923 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081067902 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10030664 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083075313 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100254556 seconds)
  done (took 3.547764972 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09219249 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109020402 seconds)
  done (took 0.990979086 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081283758 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117796036 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081841225 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107969365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087934442 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105270438 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111394984 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089517203 seconds)
  done (took 1.574162441 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097388367 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114396381 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086018404 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117981707 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113801309 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100237703 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175656126 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10598495 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108745027 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082819289 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117060389 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084034774 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110173964 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083996693 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10950589 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090161913 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101153247 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108954494 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090863164 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102201124 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086081165 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113546445 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086193124 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100537386 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104217686 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095752292 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.117788332 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085123514 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108113914 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110491242 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09079181 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097697743 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08493459 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104922379 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082467653 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114403224 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121105538 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08733752 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113997047 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103716573 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097311486 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098690427 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089487596 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109735638 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113615607 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087153879 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104286408 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080755471 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101062719 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086847349 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099847345 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084285136 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099517094 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091564333 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108282941 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114672604 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083992396 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10523465 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087772899 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108515501 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.109274222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088642069 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105902848 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085770864 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110651122 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089405446 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115866123 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097986416 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079900571 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101403465 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096678371 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128966924 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109444708 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087780395 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105030352 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083204845 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108335968 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085706513 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110975678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110623356 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086329965 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111749116 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092721647 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104672418 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105612713 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095252603 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102071193 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087546443 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102070967 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121251409 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084174301 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102153391 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082709164 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115998616 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087837365 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104610617 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081305528 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112993317 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097301485 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086268805 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105268326 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085443283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116935681 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109740666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092051327 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114527486 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110600235 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08669571 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107049854 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082068299 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106038886 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087497082 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111171682 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079159164 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107681118 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085002725 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104913003 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114177061 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083282785 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104888137 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09342912 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111087958 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101092401 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082645628 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107048855 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086359185 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10743523 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093016487 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103485881 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079579774 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101214118 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10679697 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086273995 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108799748 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091436502 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107948414 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078698717 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102761049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108421985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094665799 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104984378 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085039073 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111356018 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.104882101 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084821769 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111852902 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087881777 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103658964 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091651879 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10523607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080234782 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1093117 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106647856 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083322264 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107898748 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088475514 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107865523 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104455428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084699315 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111380988 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086025668 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.1040065 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085381053 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.104007478 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115631925 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088361343 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.099108351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083135871 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112454473 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082826734 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104287049 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083089081 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.108084325 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105073501 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08498116 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103883149 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087596104 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118399237 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108995107 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087572643 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110776184 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096779051 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105579794 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088335127 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106049661 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105871701 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087419084 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.115290441 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0906768 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111548417 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10761602 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083106032 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110993401 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093999638 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104745849 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083816933 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10453865 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.108264265 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092773917 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109447431 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087425411 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103253762 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086351218 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110402719 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106722576 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086515765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104009378 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090812335 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104936886 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.111010255 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087786382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115997708 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089310491 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100476997 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088907837 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104579503 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.110630548 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081912581 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102826395 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084548715 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10660227 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084199904 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10943053 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079579819 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113606214 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112509519 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086409695 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103612118 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08769091 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112606503 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087334124 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109808084 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088362209 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113303109 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116404003 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085480994 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108778589 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09714009 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106068334 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098291307 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092682528 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103506442 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085733118 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103694124 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084152341 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110101108 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114414034 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094528703 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099156903 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089984179 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103732132 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084353862 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10083452 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090164332 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109498775 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105589133 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094081819 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106304184 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089170652 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109495204 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085403882 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106720695 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106123939 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090093031 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106914339 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087959681 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105213045 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089742477 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104635397 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083863586 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108056278 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105685709 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086695879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111039914 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085029242 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105402509 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088131524 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107521335 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104924206 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087184256 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103716354 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090453815 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106280258 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085864574 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108429886 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081213511 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113533526 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085181261 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114440037 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105448075 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083375572 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111352439 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088747781 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111817499 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105372435 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08774567 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107080658 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085684327 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10900603 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09294297 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10354065 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.117216133 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095400311 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106758979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089067213 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106363651 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087104195 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105634948 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105486239 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089279766 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105169138 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087242657 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110733253 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090121411 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106796133 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088014323 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107779055 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10510959 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088932446 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100502053 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086548373 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105502166 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086497719 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117648071 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105670121 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091323447 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104856539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0882435 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105047638 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.083137787 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.115857399 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116011388 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087975642 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114566014 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085560228 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109090863 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11719457 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082030969 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104870951 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084653456 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103737145 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103402645 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107946541 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095764165 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107627761 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.104607191 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085005229 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106761681 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08520305 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10059828 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085635817 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111147348 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088174323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105387143 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086302416 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110490918 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106930986 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097922814 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105876797 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086696803 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107187033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083348419 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106279506 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104221291 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091026065 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.1076152 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085107744 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102909479 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086629351 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107734917 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087688159 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107204769 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087389983 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114200395 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105958063 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090192268 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110650141 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081364888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110179278 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086356982 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107891383 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105039143 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091727245 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110154746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089096505 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.117529962 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086257313 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108818129 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106027118 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086416048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.106402392 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086602864 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10689197 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086497776 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109415664 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114550351 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086608456 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109558347 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086857348 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107414074 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095183494 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108291928 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090357172 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116111915 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10910087 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089349215 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.116226629 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090767539 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111624367 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107457786 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088783103 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113693739 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086446211 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113894157 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086602033 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10896541 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107440394 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085754941 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10648076 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087993273 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106591752 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093163296 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108594931 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085885466 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107851903 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.103920288 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088933708 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111170259 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096237136 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109907546 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089959255 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102479798 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082965938 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109141239 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104218018 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090123642 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110608593 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093674924 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11035054 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087247383 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106747739 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116018258 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094694222 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111251048 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085751515 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11167987 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08830702 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110662914 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.107382071 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088090326 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108905844 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09234071 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.109149774 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08747648 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115522523 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090495974 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10976782 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108991366 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088549253 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107921959 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083058748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108309297 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090204987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114114307 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.108586837 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088959032 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119252187 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086860681 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107106299 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091022195 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107594359 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110272449 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08329834 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108414682 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089511882 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109256934 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082895151 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106914461 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084719711 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111175044 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086474207 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104770079 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119485197 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097035099 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111678924 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086607358 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107316376 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082906943 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103177774 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.106724486 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090386864 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109537981 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098131315 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.107697354 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086433586 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103954965 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086811986 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111789335 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110675132 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085911135 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102693468 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086409422 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111253304 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093254877 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107259472 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087113124 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111172756 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109604599 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.087101008 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112549783 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083794019 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112277116 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121250911 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089219061 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10939088 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095480965 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116951599 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088543602 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103652227 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108800192 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09164468 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108491245 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089035698 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110091662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12435362 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09156079 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106388516 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087503206 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110685988 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087276903 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116968018 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107795325 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.090452954 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112634949 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090289493 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118319591 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089579727 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117919972 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111658817 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091882179 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107765331 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087915872 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106689167 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085470474 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110709271 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108404422 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093518441 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117549163 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08636668 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120578078 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117956696 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092538414 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104667361 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087243696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108031969 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083197338 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11177931 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08498394 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107336961 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105757165 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087849361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107808722 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094521393 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109210026 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088880021 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108725565 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080939252 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110898549 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109264956 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090042979 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104319898 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088724864 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110179875 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091809469 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113620399 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087769651 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110766538 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108728646 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089647911 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102599429 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09624554 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107612643 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090521499 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10756182 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087742124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110032633 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09075722 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115725116 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110251886 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091508516 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121350323 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109346665 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08709483 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10437148 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094672458 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105873555 seconds)
  done (took 60.356860203 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148705087 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084369181 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103530399 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083986996 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118693127 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103900639 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084028109 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104142627 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085145172 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106911579 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083074024 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104788305 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113585634 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130415325 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0985865 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109676931 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083186815 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107052286 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103549007 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085962595 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114498331 seconds)
  done (took 2.998483861 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106618967 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123597443 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120987978 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12544203 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094545881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121095772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119746481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119629324 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104833146 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11664158 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125061643 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120899455 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096565765 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116696181 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117146045 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097240129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124387506 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11493275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121304851 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099898598 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119225906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120936734 seconds)
  done (took 3.368549914 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087142558 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107868207 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089589448 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.102952632 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087598675 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103969494 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09269876 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.107527046 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090898209 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.108223188 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085328615 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.108892505 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109372027 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.08407975 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.107370761 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086006465 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.159490948 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113068821 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086776793 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.112367914 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082148802 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112298404 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.103325215 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085128584 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.106680658 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092742949 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109639414 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085452447 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109082979 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085705732 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.109468838 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08530992 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.110640608 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.108117565 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088330341 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107113538 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088849971 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108028458 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083308722 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106852397 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088800109 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.1048748 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088625807 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111336092 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0855115 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.107447822 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088338701 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109985953 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.10223516 seconds)
  done (took 5.729612991 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10595087 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166282813 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090753518 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.150074696 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128033445 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118871079 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092488492 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148399867 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109989117 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086029527 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129288708 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127275994 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109358663 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093688256 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112762403 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10817724 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091284571 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108253989 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092626146 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110109349 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114613115 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095293902 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.126890115 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124746747 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113323614 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088776873 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109274971 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113296758 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103718866 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116390666 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114902961 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09446696 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.127335666 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.116421258 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087198911 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113818697 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128518743 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088689569 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113170285 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.106752479 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09134303 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115231556 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115967973 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107065531 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110911209 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115275544 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089063033 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107797237 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123232516 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091826835 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119428466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125223272 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092622612 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111572139 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114970512 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126511438 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08989409 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.107746843 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092143154 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124734066 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107558888 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092977727 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125372028 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112959427 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096087593 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126486294 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115770458 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113076898 seconds)
  done (took 8.534186451 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096281636 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116897149 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12683769 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126733177 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095208621 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117121293 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116920662 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.095152176 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117579741 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122816873 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116104723 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140534863 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091250726 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120838696 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116328786 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096481326 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11771975 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116822102 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096071834 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118074587 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117451808 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125781091 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095822478 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127212684 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.147877287 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.111803063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095447966 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118013887 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12619453 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116085403 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129061893 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096610608 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11777421 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12838539 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128631959 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095865506 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109098959 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115838191 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096980068 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117800515 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110277548 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106039123 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116840173 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111907906 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096385447 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116426013 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126933564 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130093238 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120370936 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102284857 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11708443 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126248383 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116001448 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09652182 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126851122 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153351351 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126688488 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127132041 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116747026 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105630331 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128024445 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134842703 seconds)
  done (took 8.041115792 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108564008 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.12062133 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124817677 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10499071 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088611451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115916918 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086676086 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108013058 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118684609 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100847887 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123593924 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113942377 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095846259 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122956068 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114187059 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117950343 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093868801 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115172812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120001635 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113739065 seconds)
  done (took 3.061850556 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095799355 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129572861 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08921311 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118606984 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114083341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096075166 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11298216 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112925577 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091211152 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113664441 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101531051 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122502168 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11172733 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096363146 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122382632 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.117642095 seconds)
  done (took 2.599821499 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100833363 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12226081 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126927539 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088957748 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110501416 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08439829 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112221151 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106259055 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08601316 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127736488 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088227385 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11530557 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109669215 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087916392 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107632263 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093311729 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107681807 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086407696 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11118352 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.1257209 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101437696 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110435625 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110488558 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.093208871 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111746998 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095962469 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112497494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108820128 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08900113 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111463787 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090439555 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11958228 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10769249 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089733975 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108605341 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086396601 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111601924 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089849722 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114189674 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110565698 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088811381 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110774826 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089809857 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113082139 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08485883 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112080393 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105504056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097342634 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109126677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.09002404 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111683467 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090648371 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113935524 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121562111 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093066182 seconds)
  done (took 6.562746094 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101893235 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11502875 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085069224 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109629143 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091858105 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114293504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.1133378 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094102951 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112892274 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086710388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114043714 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094048933 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115217993 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115093562 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092831858 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115602157 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086171892 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113583582 seconds)
  done (took 2.734778074 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092810712 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111032265 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096964225 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111680776 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0889373 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114262156 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085312281 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.111571203 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108842952 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090988062 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111482227 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091709921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109375224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.092059102 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111709316 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089547294 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115012312 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108280206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092113351 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106097347 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092470146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110549019 seconds)
  done (took 3.103753188 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119371643 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132008382 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096245387 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.241636974 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105388183 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.139146982 seconds)
  done (took 1.695610904 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111396995 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123245586 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110990216 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113323365 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121372942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090471078 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113653278 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114283789 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122928877 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10730392 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114067185 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123689063 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123431602 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101288873 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120827075 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1210029 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113378846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092454973 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112598401 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134512169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092351812 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12454915 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113747246 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092021031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115543624 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124225139 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12331104 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127647219 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093220407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124101484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120201604 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092892083 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124745358 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128689522 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1139324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103963916 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114686874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135528109 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119831838 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103390865 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116104133 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12081516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102398841 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120060413 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123733848 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114519243 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09817513 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114074543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113100341 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142196572 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099535552 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124070656 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124966914 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12449156 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102808881 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162070989 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107684672 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123577277 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121280111 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128478039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123284574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099501614 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123410799 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129152439 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12061239 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101181851 seconds)
  done (took 8.523868708 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103242451 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132393687 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114256775 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12842895 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103063011 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114474513 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113385113 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093431309 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11493732 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111655438 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158328974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094506189 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123491063 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124368659 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092466276 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114598179 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114452591 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123583913 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092680454 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142415264 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114776878 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123121518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121989678 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10263629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129423612 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120989811 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113932055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09315821 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114577416 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112935089 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10033749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114857345 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123692017 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091614848 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123786593 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11394857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09222637 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121085203 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114536129 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119926635 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102182331 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135228509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115360551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113745424 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107882484 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11530278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11452675 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091460839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115545705 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113349945 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107202484 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129317027 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128745704 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124470665 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114523186 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09335237 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115088676 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113817959 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093413706 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121986814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123267935 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092674369 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141537521 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115677624 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115377968 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125322893 seconds)
  done (took 8.428496002 seconds)
done (took 161.744194537 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218789292 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201666322 seconds)
  done (took 1.28728787 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089807746 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144114514 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102665755 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175337806 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085936878 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146271183 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138704277 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098774048 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.113694866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091572149 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.113092941 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093004064 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178013771 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085705196 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.11056541 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113510841 seconds)
  done (took 2.753716803 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120134568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.237089896 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130896666 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110960277 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095084075 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.116131138 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088494208 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11814991 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094485795 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.112685075 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.092827434 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.114692885 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088942911 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.114304738 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115638566 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.094577808 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111123456 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.093695681 seconds)
  done (took 2.923334944 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114039047 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148680931 seconds)
  done (took 1.14098915 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.246309842 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163779423 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.235718237 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.48472223 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.289347635 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.380185846 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.208051516 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.222690124 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.181642731 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209983087 seconds)
  done (took 3.493012821 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119778798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18463772 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321078144 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157097733 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107051893 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131379255 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161910323 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13429171 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.126405742 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101621359 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128192942 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.125450167 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145768261 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099988404 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121876882 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.124945551 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126507152 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120493554 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.120387288 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101173075 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144580745 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089413701 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123624887 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.120693548 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102448189 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126630748 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.112300696 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.091139674 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123360865 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09875012 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.121378335 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133288855 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12514053 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.165063504 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.129872496 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.163814798 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124673361 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097319529 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.12179631 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095796538 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125609031 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.126380938 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131322899 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103371262 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112446751 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102676516 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.113066509 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089700845 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122057664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.125549786 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098662684 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123498853 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.162339969 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126325361 seconds)
  done (took 7.712512952 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787704228 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157875413 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096594528 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882982691 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1351921 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103828947 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.777124861 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111822942 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254700456 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750460967 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138016856 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100875056 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232567957 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257412782 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.023313835 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292571303 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63512927 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126617882 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15335479 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152855873 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116791185 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115281238 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131404079 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451457591 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117577701 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092910467 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122807034 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123588753 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161549488 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123139251 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093161076 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203007394 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253255624 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20391126 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094996925 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115294836 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094447173 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196885813 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247443988 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217319163 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179984391 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10855283 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092601697 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127882199 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138351802 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091025865 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188767803 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174146611 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170424729 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114462904 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11838496 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098655098 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122557224 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166788274 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122210381 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322419652 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316648742 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09166041 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125722628 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129104296 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242058757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123357906 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225856658 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140725269 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194593483 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113012604 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810934839 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.172669646 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1115745 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096452125 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125419542 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121134697 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105203239 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172308074 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396479211 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124581619 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115405141 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09092802 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230154535 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103368205 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114500249 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164154508 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119083065 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124864541 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104595286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.127641798 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174461592 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.253354834 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102009475 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123646311 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11907081 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106508969 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122804822 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219394437 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219272067 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163621744 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228280243 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100898445 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184174866 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171283694 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118745746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172887327 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120508533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103241403 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124230568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219541811 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144623898 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124838635 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095787996 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120748196 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1509848 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128942963 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098084875 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190826501 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481660175 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167927659 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109710275 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130958288 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100066018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160398513 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11961382 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263348585 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121227618 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170994744 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121186251 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088567003 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123803679 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167497915 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122575922 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10361779 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123736861 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12061074 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238540086 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218750258 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124219272 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222048871 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185363473 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118216406 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175740394 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121499101 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170791754 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120898865 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104154768 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121355809 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791854005 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122466644 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099933452 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11806126 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197306887 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089657088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12578792 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125855731 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087329767 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782627371 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127365664 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120350471 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103891483 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119021373 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124330858 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097878927 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.120974323 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166380475 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232185631 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120988439 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10309082 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.13090351 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164112629 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116512272 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127964357 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10584 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126334061 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121883372 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117262272 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104397664 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18933178 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16340943 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222711853 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575200013 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112519388 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127151389 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206887118 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113653441 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292185186 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097821413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.22846844 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182876734 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099838932 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316790785 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16393038 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196629321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129657285 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172846403 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110594047 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.122977118 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16557329 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113200135 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096374566 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163991183 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125882288 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124025989 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962470034 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090396671 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225129753 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110794386 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171021405 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117397206 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120676693 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270358739 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113004601 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128745816 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167037186 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115380402 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104218919 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.723616031 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124723585 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10000307 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120606818 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223003326 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163552588 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119962457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119290091 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097573615 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183889125 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207851815 seconds)
  done (took 44.420243467 seconds)
done (took 64.602285719 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280887181 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219445266 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269739128 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171307596 seconds)
  done (took 1.924031772 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172518627 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150850082 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123769576 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11529386 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.158482084 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090475716 seconds)
  done (took 1.714475144 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363572796 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279732913 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24860299 seconds)
  done (took 1.800652577 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.324606014 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.254988857 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476372551 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32967862 seconds)
  done (took 2.394212095 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.216362541 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138322667 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111946009 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106766496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203996452 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248103922 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142944867 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205057188 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.120611729 seconds)
  done (took 2.449229176 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.176424816 seconds)
done (took 11.36604918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.252205277 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.166459529 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.241547777 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.259442969 seconds)
    (5/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.204636196 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107163816 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.187358851 seconds)
    (8/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.209842951 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.253556828 seconds)
    (10/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.178508788 seconds)
    (11/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.216100735 seconds)
    (12/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.129935201 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09250845 seconds)
    (14/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.201497398 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198465552 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.20567749 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094472085 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.149460341 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.196377134 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098995356 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127269425 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.197104987 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092277466 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.124354953 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.173585367 seconds)
    (26/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.07608438 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.1278545 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.217725993 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148356447 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.14758631 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.137687872 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.18312447 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116985447 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109344224 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.144059161 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.099258543 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119345966 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.188407675 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100657145 seconds)
    (40/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.246246428 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.122948132 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.195862603 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.11561439 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.122035663 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094878422 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.123196218 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112419188 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.186608123 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096948274 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.190892263 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.17221813 seconds)
    (52/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.07021211 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.180366709 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238882684 seconds)
    (55/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148404272 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.095565555 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.157047144 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095538596 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.160302021 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136431216 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086423829 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.178105787 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185647456 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089503637 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111458541 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.149265653 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.107589688 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14060584 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.13881643 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198227041 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091867019 seconds)
    (72/309) benchmarking ("sort", Float32, false)...
    done (took 0.178226545 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189291951 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06845894 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179275848 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095431369 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.139834606 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135070523 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125382324 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.194440351 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.20604896 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09059244 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.145523607 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199070723 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.087744796 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.121887593 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115535562 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117127263 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136832908 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066714477 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.140721776 seconds)
    (92/309) benchmarking ("sort", Float64, false)...
    done (took 0.172481053 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.189496453 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.187670637 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113789128 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.0675864 seconds)
    (97/309) benchmarking ("sort", Int8, false)...
    done (took 0.189764427 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092167834 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087092388 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069362225 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.122900793 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191783903 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183663402 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088458707 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125897916 seconds)
    (106/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08983656 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.144055142 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11596866 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130966851 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.138103741 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.11524716 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118171792 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087045226 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.405046469 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118452963 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14501348 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122228851 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117935337 seconds)
    (119/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.123315373 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18532358 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095844134 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.13481662 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139566275 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130857076 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.152258947 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.071493371 seconds)
    (127/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120307833 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191395369 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.185618944 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095265313 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093047501 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06784971 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.140313711 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091534635 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119829548 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095162119 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113173193 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154578904 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087970742 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213660469 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.125609419 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094652952 seconds)
    (143/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.144400118 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.220685455 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.216239339 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088585423 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126587346 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095216426 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114899371 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097567611 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095022405 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.079742493 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.122105263 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093031387 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123227694 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.080993899 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100275342 seconds)
    (158/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11636969 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.191194874 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089124493 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130019369 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085494965 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124867884 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.134618474 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098609099 seconds)
    (166/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066070303 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.091065467 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138960604 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117597236 seconds)
    (170/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.071740339 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.103564205 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091199482 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119819383 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101816467 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196518088 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.091627074 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068780849 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22963318 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.071332285 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.169393795 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128759941 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.122753419 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067951664 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121942348 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11810483 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093128949 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069559887 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.104789683 seconds)
    (189/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093018605 seconds)
    (190/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093816355 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101032024 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.100111744 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112975738 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.157084692 seconds)
    (195/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.08033074 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.114089779 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096581424 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096026409 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070480552 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11514021 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090092734 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.228732586 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09202734 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095119335 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109911854 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109960802 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110081121 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071161189 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.115080714 seconds)
    (210/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.19728133 seconds)
    (211/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078098 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099139284 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112439962 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121528438 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.130169861 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106548562 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.153609061 seconds)
    (218/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096081638 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.071556103 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071408869 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120687435 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.09280946 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.122210269 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113419924 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093086191 seconds)
    (226/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220855082 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111201823 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067838609 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109227697 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06898346 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.131468393 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068718152 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.086319174 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135754514 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.177160224 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.071102042 seconds)
    (237/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.097729938 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154370196 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190544676 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115041504 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094132052 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.122224956 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.083164518 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11453481 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.088194727 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176437698 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180707121 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068022576 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094789786 seconds)
    (250/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124030633 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067742054 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115274045 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086191403 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.095529577 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067664406 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139649713 seconds)
    (257/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078598849 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090319089 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172883879 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111746567 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092624983 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180901568 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136231934 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068205677 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.167096674 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100413672 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113974361 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135505156 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.068400501 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093882824 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120176292 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218659003 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087073282 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11142789 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.136640655 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068642929 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068787402 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.092577921 seconds)
    (279/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096095976 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11524995 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069199084 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109951956 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069140351 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096089356 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.186322267 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172065523 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087134712 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091681688 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070079205 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.114199767 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108913634 seconds)
    (292/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130092865 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067550099 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119033281 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089305262 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.091101 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092535197 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135771075 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089984395 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094084922 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088136857 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09437681 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095585782 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109572513 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069666225 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094181316 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.093492759 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098991586 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118435987 seconds)
  done (took 40.283618462 seconds)
done (took 41.192679995 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101246436 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149760817 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.10080526 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142042217 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.129155794 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092762312 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124032521 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.100587094 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.128774172 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12562211 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09966284 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09400291 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097246983 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123560295 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097788574 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140340728 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.128888214 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094354945 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121796629 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086000998 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119512535 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.0865832 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11325842 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070170004 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122901115 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094518192 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117557581 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120301065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088701144 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109771732 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091270234 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117677722 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08730885 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124429589 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093336692 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119623261 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098149974 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121581715 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088494792 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111592955 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119856594 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088212133 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119169993 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095843397 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117691082 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093417954 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119101597 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102325831 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141055975 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116473017 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095849018 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121276879 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09683896 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119288494 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090966528 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120524746 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092351484 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140644771 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122417462 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093627753 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.122736746 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094645638 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118947242 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095186383 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121691928 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121054478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099331408 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117191187 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097288036 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116763676 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087022091 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120492921 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090043491 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112414575 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096317259 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123821247 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.10849908 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094850826 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117152129 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093252819 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110164386 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090380126 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112405612 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094568087 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115004152 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070523384 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117236699 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094864043 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110536999 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096810759 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11779889 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095542989 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114513272 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099760167 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111463784 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09278431 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112149431 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087264308 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114281108 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091474509 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111947204 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088991855 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120714292 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088089349 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118278665 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122534989 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088105738 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120253155 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087621961 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.113015868 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102884952 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122706107 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088124441 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120826422 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086608712 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120366156 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086150918 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.11206442 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086320509 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112413445 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09259854 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111795637 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112536004 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0961379 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12566254 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08803631 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113875803 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090149598 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111314285 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093704574 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111177953 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087834677 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11362878 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078640785 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113886416 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088611445 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119816057 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090537081 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.126027705 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092093322 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122423573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091572794 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118615035 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0925628 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111704574 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074188305 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117430863 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090189583 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113440012 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086896928 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114402769 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086473261 seconds)
done (took 17.120113469 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088765877 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185378685 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151570356 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142946167 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107715965 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112963603 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121207565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12034455 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115014457 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143808673 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110491677 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133261129 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148702456 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087761444 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112462071 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092408409 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113046782 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102810182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145802353 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132792226 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165036955 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086528432 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148019824 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137113832 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120243019 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116449962 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112778914 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091969489 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115850397 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103395013 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135807617 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090641096 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113488252 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134610176 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105204139 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121440507 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087156078 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119985682 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087874838 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113666815 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141688018 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132324851 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094348656 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117187547 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092184057 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114283269 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089876101 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121993565 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098627489 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117283835 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126219931 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15729853 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092012071 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122534235 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08644053 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123761777 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121337784 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090724676 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112030304 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091720766 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110636968 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092162976 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128087092 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142886377 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092740116 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123124097 seconds)
  done (took 8.672699731 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105994216 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140008667 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.122243037 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13205755 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112329887 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089082822 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112693867 seconds)
  done (took 1.791206826 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090065392 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133814737 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111637321 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136797287 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131285267 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110132622 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124197021 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089359489 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132906181 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089230101 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135200648 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152577735 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090201371 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121786236 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137298126 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089745214 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137372373 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088861465 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117313646 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111867813 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117461698 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135909554 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091306924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1140563 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103416951 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115203833 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160898375 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095540408 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115222289 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093491523 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111876216 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166217493 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105427788 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125775676 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088876078 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129022046 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128396252 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088036453 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130395297 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093870861 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128775349 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089424388 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115986346 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08608085 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119159591 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123628826 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091296425 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114458747 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092907565 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133571234 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091479994 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127249244 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089010548 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119232792 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089735012 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121950265 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122384403 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091769824 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133100531 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091031307 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13055617 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105487307 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128634758 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130535198 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091434408 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127344314 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10251907 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117585375 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090364532 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117729735 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129881871 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088143258 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115924009 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101017589 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1162609 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113015257 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138704593 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114497077 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10075223 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114037268 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09049216 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113787541 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113901506 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118681731 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09031463 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119109235 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091108434 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112894322 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088023655 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118524725 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087754965 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116008425 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.115563955 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091272206 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115649841 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108055647 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114774972 seconds)
  done (took 11.875306541 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091720778 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113901436 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092955794 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113935575 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09138485 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115156518 seconds)
  done (took 1.607535265 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115671021 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118593091 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103753801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121259572 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155591564 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104320977 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131562033 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123639158 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107906398 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128055778 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128467801 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106119204 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137000969 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121365647 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105045992 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120769227 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.127804996 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102555036 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127220149 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096838382 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139454814 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121162559 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096524338 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132314856 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117184716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096936454 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126800374 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103067592 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128429474 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12319433 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096562519 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119528281 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096082333 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124024596 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129589214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097326714 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121695424 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117885807 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101798997 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117379551 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106277661 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123478529 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127182154 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094844799 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124354352 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1196575 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095473543 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124860171 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104525351 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120585733 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118456325 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097131925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118880534 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095061788 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122873571 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123255534 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09415029 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13027294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095854854 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122492831 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11840368 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094572138 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124379166 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117128833 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.107493613 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119342851 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096554035 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122883311 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120865979 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097464633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119297508 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092715354 seconds)
  done (took 9.272178562 seconds)
done (took 34.189641305 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.684203902 seconds)
  done (took 1.669632999 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.709475387 seconds)
  done (took 1.69485422 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.92585445 seconds)
  done (took 16.912067815 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.501004575 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.58284377 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.885137397 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181562415 seconds)
  done (took 3.13700347 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943985009 seconds)
  done (took 1.945998435 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297046483 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25813474 seconds)
  done (took 1.545916078 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.775560401 seconds)
  done (took 1.771245146 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360839797 seconds)
  done (took 2.354752404 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33350898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184836196 seconds)
  done (took 1.51655576 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547732251 seconds)
  done (took 1.546377972 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.871478726 seconds)
  done (took 7.875803406 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267372891 seconds)
  done (took 1.278837486 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300921855 seconds)
  done (took 1.304995518 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.344655778 seconds)
  done (took 4.349651143 seconds)
done (took 49.900300964 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099634275 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12600044 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102480194 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124112424 seconds)
  done (took 1.450063933 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102289948 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120921206 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10086616 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120710036 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125067922 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098161921 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123290748 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101185326 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120735939 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096442015 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121911225 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118397501 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09948334 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122142088 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094448597 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123644346 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100049497 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121089146 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123425911 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097685346 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118460713 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098247247 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124774959 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093823455 seconds)
  done (took 3.673830486 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101313395 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118421314 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097372277 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118354187 seconds)
  done (took 1.448531915 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100562141 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142051726 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138148746 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101528084 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143550331 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135248498 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093956737 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117119865 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095179245 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124756596 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091296671 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15015079 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137754426 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099500242 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127718583 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089064372 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118004558 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136626349 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.10018296 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125974655 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095710672 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125274972 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090298726 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140366195 seconds)
  done (took 3.82780781 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170679244 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128059903 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138836747 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096191187 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161127362 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140562746 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089333571 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140831365 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087944747 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132843918 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11751592 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135617133 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130116465 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088146224 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114953224 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087610766 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12937031 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128984076 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093308817 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128747011 seconds)
  done (took 3.456479522 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099302892 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11759654 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090147538 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115963145 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100086497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12034325 seconds)
  done (took 1.657365285 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09255537 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113539544 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091923989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113721087 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096154207 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114237346 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.091003997 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114188777 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09044232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11504503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090708052 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113022439 seconds)
  done (took 2.250781481 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.463174856 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093657395 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120158049 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113515551 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097747615 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114660003 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103750342 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118742174 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139913948 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.091056086 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114277702 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092717372 seconds)
  done (took 2.676540561 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235764088 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126389868 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288003348 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367085393 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158136415 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178730166 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282013677 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164675329 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22501265 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167774774 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203823246 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222995269 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152326076 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189639501 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138709315 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119517475 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232425041 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246849402 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153356344 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208375902 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228159652 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167139757 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1806632 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151356838 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138115082 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173201729 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094342361 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130779513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232611227 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177263394 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214180574 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162679428 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147460032 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211073264 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251983043 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220896993 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283846113 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110923538 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.175035085 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168616162 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266461409 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139376853 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204465273 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155701504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132327851 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191013853 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192623246 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177903627 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.15300952 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112506298 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221924516 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238604312 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192636756 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138938161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303834904 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152323459 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175114331 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218739334 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250601492 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201446252 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187444614 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121777588 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187450384 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217150234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185209451 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175053138 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180439513 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148195964 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225760358 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189633038 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165266896 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218852182 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.188402952 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140207939 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171010042 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173477695 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173291674 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256931544 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183984154 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121767333 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169134863 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150091705 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131575097 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168759406 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125337285 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237865461 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118107082 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163324206 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243868637 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161166981 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15949659 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204097285 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230477346 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146726627 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084668699 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154928872 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155988826 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194003935 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141488036 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159277032 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163351865 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129057513 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185571276 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123168484 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183673589 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091110078 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198711421 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183247914 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125155799 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134514095 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151162989 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151149656 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173549719 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226151625 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140695263 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108227979 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235387606 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178742915 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151370536 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179384542 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202647621 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143302256 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150318585 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224304083 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217770931 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13993967 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202650853 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157031952 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13672103 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131998621 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182422955 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155212344 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16117845 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107559642 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211667949 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204978517 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125463187 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137337481 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1943431 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134196937 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130728424 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163911974 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14710731 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.113065482 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152791314 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153775653 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182864736 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203082628 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130545896 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18908738 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151680453 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227835301 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141869811 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150495419 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1484557 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093738183 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.21968917 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199782792 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131569315 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205664698 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170351626 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230554465 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171897415 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134838017 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179622921 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103435906 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120688116 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193224401 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192348511 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160421744 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198959358 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200264313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207673488 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183190745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172918066 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172307774 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165882154 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156760728 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139577158 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160851651 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171842921 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122972165 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143784132 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109251033 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149531292 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144256116 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133493049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196339178 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169803165 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215754677 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161472162 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148014175 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181422336 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101664428 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199243316 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179548348 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148294926 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200291064 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194985207 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213728915 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116447258 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227989202 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120076569 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099416059 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142722229 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170188006 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134119837 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108586037 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190157422 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180542584 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182091309 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176772515 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237046778 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173126656 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190701771 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122193757 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167959053 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18660695 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177962852 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18989478 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143656381 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.12276597 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176825936 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157529405 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254045783 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167315318 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201637452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208211506 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150952062 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13199569 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150283975 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196790694 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154617319 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17817 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147308296 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141234893 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163674919 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106143945 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185214504 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185483092 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163577057 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187065115 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15186998 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211243371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101378197 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162658418 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160245522 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164929267 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108519304 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175985868 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204033012 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14923597 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167721217 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218050179 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104084782 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304878335 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243066602 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221752974 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111904293 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155496369 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161543497 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164608924 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170655053 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178099873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159130632 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215142998 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157693538 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111481728 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141454344 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148720985 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15076012 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104914702 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148737687 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.203279201 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.114118985 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212264574 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165007909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158955712 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174204462 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123343266 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145152943 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151894761 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241008901 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185283958 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236406609 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124063626 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206430354 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207150972 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124719003 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104829524 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133587177 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180694612 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136236632 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192641344 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214568798 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205397308 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182611896 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223634545 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111604522 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120523648 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157491958 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175594141 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234881444 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153696001 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160248663 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203456295 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148376886 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103877134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2049169 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291217852 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14718342 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197593359 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079757376 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.3010664 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1010565 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133559645 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164878196 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23366358 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110291241 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190044358 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172984553 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171112209 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165576653 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150294836 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217914636 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219639076 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227893775 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181578094 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105139614 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154892288 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203006833 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194782437 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157564598 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138862877 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205450323 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195659993 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.225552305 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141895495 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172885368 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170230696 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15731795 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188516048 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135605525 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207244401 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135844412 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192961349 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154043877 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143894495 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203899636 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189646537 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142013856 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189763766 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182000528 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136168998 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132781868 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171036971 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179654919 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158260647 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126540279 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182542851 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097281329 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223009037 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257948079 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107764771 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155374459 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148499344 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135380017 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15579858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15864137 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140801178 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138214911 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230139985 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.107881406 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220389087 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202872885 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195051949 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176283286 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116606361 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.719170751 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104573823 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221483784 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13340834 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233507424 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150658539 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17398626 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1589573 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169869562 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19554566 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186733162 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205217076 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221751446 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178875888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132492448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158723731 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164654553 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144184107 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149668206 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169578566 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159984143 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153964281 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178760759 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172993383 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133808581 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113172101 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227778245 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160246144 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183698202 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180121264 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139501566 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1755317 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188135717 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135231053 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178919719 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23691052 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141834115 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151179838 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107708643 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156798142 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262305589 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124287391 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207253305 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211706231 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132895112 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195763155 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.121960706 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222175706 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15780422 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186193529 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147963405 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159695723 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15696472 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137739056 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103386841 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156256539 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16738078 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149603636 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158773793 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166040647 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196877761 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12398705 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144530631 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289830861 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19694864 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243505357 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107904702 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136552329 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163021603 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153556108 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178611851 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178708962 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136602545 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136538071 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136562901 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1311285 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139090252 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129022763 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224796564 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166991218 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207671866 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138164599 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278728558 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112807311 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155969071 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117433554 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105040102 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149790475 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147566738 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160692791 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220086145 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236093109 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148911249 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134264287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150882295 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098083284 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136759434 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166413592 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164714077 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177276031 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146468989 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080906356 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157003416 seconds)
  done (took 83.435526833 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180330009 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.148590198 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151234187 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203685046 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177479217 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269448759 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211012347 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254540054 seconds)
  done (took 2.702273827 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094381794 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146658374 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157830614 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133608146 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092734929 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118220107 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347245677 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133042853 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117732878 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121977597 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172978249 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094453821 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552359441 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091199978 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117993651 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108706503 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092754421 seconds)
  done (took 3.793380095 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.479501025 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.68951418 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.515254801 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098742344 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.071340473 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113482093 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.522707117 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193872354 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116468781 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.467718123 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.773209378 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159291069 seconds)
  done (took 18.311535669 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099966662 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119528829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108759929 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135081718 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096968524 seconds)
  done (took 1.674474718 seconds)
done (took 131.357827783 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105988528 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406588073 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071837792 seconds)
  done (took 1.623049121 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108487992 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135756355 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109462678 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134902039 seconds)
  done (took 1.604879939 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098053514 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125843299 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109878739 seconds)
  done (took 1.444190803 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323400922 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189341592 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164224133 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107695548 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127501564 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103727158 seconds)
  done (took 1.451232806 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097888784 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126605901 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097773993 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129369246 seconds)
  done (took 1.564482637 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096007717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072163057 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100948032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076111443 seconds)
  done (took 1.455686756 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115440028 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130892368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103715896 seconds)
  done (took 1.465098107 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130735546 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138872652 seconds)
  done (took 1.385404946 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107122642 seconds)
  done (took 1.217583165 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119143288 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169214936 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189716547 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164721373 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.228929852 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165675807 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141379167 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114524156 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131313785 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144116232 seconds)
  done (took 2.684566603 seconds)
done (took 17.793145889 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104793322 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.508646088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411565054 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11739233 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721215098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382144924 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022540347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145477526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165583818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0942695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13902215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673026453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.013156252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.462016689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971937711 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.46100616 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702408525 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093570679 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118480604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095430037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.00629202 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09842211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12180079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092622486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703380758 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424901331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096463015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.458467017 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092486389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126223772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383932207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122279496 seconds)
  done (took 17.234534532 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097183412 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17278825 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097532472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137009959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122246596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094886395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124151835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093618051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179727569 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122620467 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110708086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1209507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124167695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09666523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14079098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09185775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125354442 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093181106 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1212834 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11948457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112778348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119616145 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095989317 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120981666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093549351 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136482202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121447839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.095279904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119842262 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100543898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127687512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095391945 seconds)
  done (took 4.842834354 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141795009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182922032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128003965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126999403 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170159872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122986385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19865951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118129885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181873103 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122707258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13867677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092855351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156319075 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120776809 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115776269 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121576628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098021608 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121872473 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092917685 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12297061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138300066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094864264 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121789474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094272196 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122804832 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107528953 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123356748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119716303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095251476 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126150968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100893039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12404228 seconds)
  done (took 5.168289635 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098068397 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1245464 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109840098 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137655428 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095781879 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125389982 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098148884 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124631767 seconds)
  done (took 2.033622422 seconds)
done (took 30.390175196 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113044236 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126657288 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107997885 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133575661 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10389412 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13206096 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091212669 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133776781 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132473367 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103452193 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136966875 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092208008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122054938 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092429232 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134819382 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098549017 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132550158 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102954171 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134502437 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130980837 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096114387 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132610734 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103745063 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133229991 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104719824 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133352359 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136883521 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101996209 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121634996 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095276791 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123787906 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104334434 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126966868 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105641565 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126811779 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097132309 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122852793 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094744058 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133013963 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130497789 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.102129016 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133805833 seconds)
  done (took 6.034678701 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109147029 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145660219 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106116489 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.087888825 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119063763 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081340043 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137729716 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086760994 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109739397 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108729201 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.080971196 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106093517 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078779371 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100457109 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078186118 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075148004 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10729914 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076936055 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077204347 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104570513 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080463322 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072943996 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108084129 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079170223 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07441 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109253538 seconds)
  done (took 3.629044923 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101784077 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134175627 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113367461 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183530456 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.16136836 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099660165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131773482 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137676439 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110302032 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118302757 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097640309 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15052904 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110242134 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129007448 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091675122 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136457525 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133461507 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095183759 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127041286 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11418781 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13813701 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103760093 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14334006 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131383964 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092907681 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121786518 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098423237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134411301 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098497552 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130754544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096222298 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124830477 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121314995 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.115766004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129026065 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094308979 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142161141 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130970327 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102601545 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.12002268 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098452116 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121402916 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114608204 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167931273 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091383726 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130332553 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127768133 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.10402696 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120550956 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110737307 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130936002 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091868034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12517621 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091276829 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121765624 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134419587 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096195593 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121978386 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103566509 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12342946 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10627438 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125145918 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108873405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121137489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100210144 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120158018 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092453887 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121289894 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142840528 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094694921 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162926194 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095010228 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12575382 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.129173353 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101120568 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126562079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093017921 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136537367 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102814214 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125410778 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102084814 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12503224 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122998349 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.112080736 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123087265 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095492525 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121163039 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099880896 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123867763 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094618261 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136185892 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09367507 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124877556 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.137790271 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093714083 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122382254 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100446817 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12674006 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092235248 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135137926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097667065 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123300811 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130621351 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09382643 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124027633 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103069252 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126531713 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092924223 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125730596 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098987276 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122316572 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093400578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124549375 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093758348 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131948588 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127128692 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099705217 seconds)
  done (took 14.835655641 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227199616 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214784408 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.236508022 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261976887 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134086998 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114626051 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212165715 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153836382 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122791487 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158812927 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161738585 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182423332 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.14012974 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179576114 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.141567827 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121169913 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112965642 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164042065 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214199559 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289185605 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113882907 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131860644 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162085103 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160672906 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10603765 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132869604 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137495257 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106715456 seconds)
  done (took 5.742669766 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109758283 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155378807 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097449292 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145815079 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148262169 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09343397 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127635827 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093882889 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135291319 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134831127 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092842984 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128853056 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099943673 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131309565 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121468423 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103677578 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131652374 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094702109 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125433556 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097840053 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128335482 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100884116 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126627951 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120919244 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103770746 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119875998 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087619277 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141502526 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120425289 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117751231 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120009215 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10027309 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13275782 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093183374 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122911237 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095844799 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125375747 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094793577 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12465094 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091571505 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121592589 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07813421 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120959329 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135524115 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101123227 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080015633 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129405894 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126733 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096225019 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119472076 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097179082 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123744385 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097665897 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12914478 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099131254 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123377304 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097114165 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11523456 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101103471 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124477939 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085543048 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120268629 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100396538 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116624683 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102139973 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127582314 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092478419 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125160811 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098247337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128490085 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095388231 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12616898 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091227866 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125151034 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096267181 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127613156 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096020889 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122133183 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119940493 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095498946 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075932857 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122838242 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074213174 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125912536 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092481364 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121292538 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095661366 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129598389 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136247224 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.0958699 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130678453 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094373974 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12143693 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09808467 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112277859 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097077262 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137822934 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139902045 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094528334 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121403381 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108260493 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124843558 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093328493 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104749742 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101507175 seconds)
  done (took 12.951516472 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12904831 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153061555 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095102777 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143580856 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154996713 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156652787 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102382428 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12930229 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09666808 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141669072 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094560216 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131350269 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098747176 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13666558 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15744607 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103779412 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124868073 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108423211 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132020278 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169389025 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112234972 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142733768 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107417837 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123589428 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126837299 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112960551 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16064832 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107208878 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136819449 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140271791 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10892737 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160434806 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14176602 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100167402 seconds)
  done (took 5.500080237 seconds)
done (took 49.81701321 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.253121401 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442198408 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.223018539 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.150444298 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.255962654 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.241023453 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.237004362 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.225731451 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.669682353 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.225428863 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.458306972 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.770571918 seconds)
done (took 60.301671454 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.333600797 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.355451434 seconds)
    (2/2) benchmarking "String"...
    done (took 1.49724345 seconds)
  done (took 3.998044384 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.623733697 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.114236023 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.485831927 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.218262201 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.223522747 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.533546782 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.77449295 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.447341427 seconds)
  done (took 27.942221522 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.22545489 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.570309438 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.457113505 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.456937088 seconds)
  done (took 17.855887884 seconds)
done (took 59.899705327 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.238059193 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.287399011 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.263667871 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.200158893 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.345726609 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.252025467 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.581559383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.249478225 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.250064871 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.201290083 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.248191005 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.223050531 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.230799007 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.57732731 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.229793558 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.22238332 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.267838898 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.717074673 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.59076438 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.229802102 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.235139476 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.283191907 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.245001593 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.226879078 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.229647617 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.220656939 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.244404634 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.230371003 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.284903637 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.227923592 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.328924645 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.68757043 seconds)
  done (took 190.996287726 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.220462111 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.069437288 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.208889952 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.281847849 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.553454019 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.441683824 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.363712626 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.680897389 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.24300116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228512933 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.42157678 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.220253721 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.47912877 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.245247155 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.230149574 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.223395144 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.43059471 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.499719956 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238091846 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.495660696 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.248126272 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.26904088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.186508741 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.398333131 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.267469729 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.238147045 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.257377747 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.243807674 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.427590174 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.354438747 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.250811803 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232911129 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.768392003 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.085380747 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225480708 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.23668362 seconds)
  done (took 149.612551673 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.500058351 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222223148 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.221658517 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.2226038 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.251553145 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.222123471 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.222007457 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.720369282 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.725094343 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711963161 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.649124888 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.285838226 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.449223051 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.22657597 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312629413 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.236814534 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.223472364 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.23881877 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.267740087 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223852333 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223927738 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.721992903 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.240560755 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.222890467 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229506244 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224092091 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250804574 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.223876204 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.609654596 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.42413395 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22362815 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.25209245 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.543323454 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271088945 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224422792 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.545549048 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.50641098 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338955982 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226905767 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252282566 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.223795082 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.496339494 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225732849 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.225843059 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.228827085 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.836089921 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.229662034 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.723396579 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228860257 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.128973604 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.229180028 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224344458 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.626863098 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.788918741 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.247694624 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.22489498 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227904649 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225843433 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225713272 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253270758 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.596028911 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.318919457 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.243467609 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.228571767 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253267 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.225935591 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.355319088 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229337783 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.482090353 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.304448747 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.340632535 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.725932393 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230360577 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319656837 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342227853 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.226059249 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.225269254 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226252978 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.225167022 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.334795647 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.226740739 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.602050846 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231981212 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227212399 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.283520412 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.319195559 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.226817844 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534857332 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.231624402 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.227104262 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952689258 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325731368 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.227981281 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.226908682 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.226769432 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602828167 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.728519385 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.420368765 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.232130925 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.592963681 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.233206297 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624762346 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.719392788 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.837352641 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.233796838 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.227691515 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336268154 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.232726457 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229556128 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228089947 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.256281682 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.24633652 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.287154215 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.227513213 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.622291692 seconds)
  done (took 347.99123038 seconds)
done (took 691.245463954 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.875709936 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.86851887 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.985588994 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.867446407 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.828290424 seconds)
  done (took 10.579943185 seconds)
done (took 11.731335647 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.412962013 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.416644654 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289102285 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415746351 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261542656 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43020247 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395438539 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.253954713 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.331020203 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306509255 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331720131 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28458395 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256785604 seconds)
  done (took 18.54105054 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548918407 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.542794545 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296183156 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.533722097 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273840052 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540807766 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.432812952 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441932211 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.449765713 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268671558 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242289211 seconds)
  done (took 16.728173341 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.548174791 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.549084731 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301532513 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.543942956 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274975359 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547410104 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436918881 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.449657242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447397622 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.267611958 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241747264 seconds)
  done (took 16.763793073 seconds)
done (took 53.185743005 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.239249842 seconds)
  done (took 2.393881172 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.272499681 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.434271323 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.259769893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.242053248 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240613808 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242450736 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.244084481 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.241834477 seconds)
  done (took 11.335058195 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.23985237 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.238523729 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.238039879 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.237319448 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.238565697 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.236504801 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.235759426 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.236151661 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.238409951 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.237011164 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.239741935 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.239512318 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.235957655 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.237024755 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.236085502 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.236248525 seconds)
  done (took 20.958301905 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.238977573 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.235757837 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.237040212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.237584933 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.237016799 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.23831029 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.239124305 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.237422359 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.237290692 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.237119172 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.23736902 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.238188749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.237376092 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.237363857 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.237947904 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.238876026 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.237496576 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.238140285 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.242166055 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.236562383 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238827714 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.238485564 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.238889961 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.238431812 seconds)
  done (took 30.871500913 seconds)
done (took 66.713022927 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.159514404 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.812973544 seconds)
  done (took 9.13029827 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.240856687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.240996584 seconds)
  done (took 3.64136641 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.241232468 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.241467186 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.240089816 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.240039239 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.241109101 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.241758906 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.242024726 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240493838 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.24031188 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.240953414 seconds)
  done (took 13.567966705 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.241468505 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.2417089 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.237992763 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.241672834 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.24189043 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.240571909 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241331723 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.241105178 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.241074325 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.239420925 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.242251121 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.240225599 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.240364481 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.239170249 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.241933146 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.239346364 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.239905351 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.239160582 seconds)
  done (took 23.489736814 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.242283506 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241503161 seconds)
  done (took 3.644287912 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.240742352 seconds)
    (2/7) benchmarking "second"...
    done (took 1.239986236 seconds)
    (3/7) benchmarking "month"...
    done (took 1.24044979 seconds)
    (4/7) benchmarking "year"...
    done (took 1.239968931 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.241028714 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240151609 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.23915268 seconds)
  done (took 9.841823611 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.244680207 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.417690427 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.496974505 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.846533716 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.24403681 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.246038691 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.10622404 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246411151 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.249263749 seconds)
  done (took 14.258856774 seconds)
done (took 78.732391451 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.239511465 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.257942962 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.337285977 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.251815106 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.259470729 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.581572684 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.24818449 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.366740178 seconds)
done (took 37.703221789 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.253417345 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.96962064 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.982665311 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.243092375 seconds)
  done (took 11.357481213 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.213964705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.10579618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213406539 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.200176144 seconds)
  done (took 17.890683885 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.179308231 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565542362 seconds)
  done (took 4.894208839 seconds)
done (took 41.556990577 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234064321 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.23080933 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.230900037 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23503604 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.231240885 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.233856342 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.231616178 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.230886836 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233419832 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.233625867 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.232833666 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.233126999 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232486918 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229986368 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22873357 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232302989 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.230953156 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230023192 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232389845 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231982391 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228884352 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231879426 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229097986 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.228221062 seconds)
  done (took 30.711462939 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231090174 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.228523016 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.231763401 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229047532 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.228854477 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.232316714 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.230872345 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227465932 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230913486 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232104176 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227729321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.228764606 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230911367 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229425639 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229251908 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226135083 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230155594 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227021553 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228897352 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.227430017 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.228863862 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228703586 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.225828533 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228579551 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.226484121 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227154471 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22851963 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226934065 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229253686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226328254 seconds)
  done (took 38.01529144 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.23110327 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.233124956 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227928525 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.228843028 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227293373 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.22667416 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.228635769 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.229786806 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226982924 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227697785 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226970038 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226653258 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225872973 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.227069645 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226468834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22684552 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.22523639 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226451034 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225429082 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224538986 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225124324 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22572147 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224565698 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22510582 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.224424098 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224837858 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224765042 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22504404 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225548162 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225448527 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.22593141 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22634123 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.224484184 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223935426 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.223970395 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224521027 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227948349 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230970318 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22483367 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225495943 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222826923 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.222477963 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.223866114 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222051944 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223101188 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223272085 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.224276273 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.222267486 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223091677 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.222762678 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221802762 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.222143078 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221728077 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.22141496 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222838935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.222620717 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.221955623 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.221518785 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.220024285 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221214629 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.220543225 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220703101 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220464781 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220892774 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220219907 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219815475 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.219838179 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.219117859 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219443456 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219203467 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219316608 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220236201 seconds)
  done (took 89.296152126 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.220153341 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216247938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216266746 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216955407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217171912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218221462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216324025 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220092127 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215575946 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.217414798 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217693606 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215501278 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215767351 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.217329138 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216872003 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215109783 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216670376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213609575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.216433711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216876984 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215933513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213446908 seconds)
  done (took 27.905433968 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21771672 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.218334381 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213463804 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.214803133 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213444485 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.215071111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.215104484 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215860913 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216913749 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212842641 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211062153 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21359573 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212627928 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211548969 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211548544 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.212428414 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213727451 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.213830012 seconds)
  done (took 22.990138954 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.212522543 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.211117553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.214789648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210982443 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.211689643 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.214112902 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212001447 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.213683683 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212474586 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.211534308 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.213785064 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214098436 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.212112417 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211301416 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213224472 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.212233337 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.212756048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208132853 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210110719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208024127 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.20975146 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210849076 seconds)
  done (took 27.794789445 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213574527 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208394982 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205614504 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.205788852 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206390316 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.209314718 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.209312631 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.205695139 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.209627732 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.209835414 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205706803 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.207723978 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.206893045 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205995388 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.206441353 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205969878 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20816079 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207547645 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206745743 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204997866 seconds)
  done (took 25.280780009 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.210120041 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208833073 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208908077 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208778479 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209181332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.207748979 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208450278 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207507814 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208932619 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.208518342 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208840643 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.207746593 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209888835 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.208350128 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208464697 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209218236 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206928804 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207176836 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207327488 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208984623 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207909447 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209452203 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206523542 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.206642431 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206478767 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.205716275 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206330874 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.20641039 seconds)
  done (took 34.95249953 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207022414 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.203235798 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.20153388 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.200732573 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.202726753 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.202119822 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.202909684 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.20223071 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205777521 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200754174 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.203742925 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.203060438 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203902273 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.203019004 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.205050447 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.203375952 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203434728 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.20274565 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.19958906 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200562332 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.202189271 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202504617 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.202067399 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.199039911 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200215104 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.204014519 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199724 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.199418036 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202425753 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199639241 seconds)
  done (took 37.195134926 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.221175356 seconds)
    (2/2) benchmarking "in"...
    done (took 1.220711112 seconds)
  done (took 3.563995435 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.20020104 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.201630201 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.20233011 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.19984958 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.199489654 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.202499273 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.202718179 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201375001 seconds)
  done (took 10.73215765 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.202919804 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.20324461 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.203093571 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.202556496 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.203399154 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.203343262 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.210407217 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.221469529 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.20329286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.20429831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.208389996 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.209135442 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.204335192 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.203486416 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.202587321 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206429089 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.203285346 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.203160364 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.202802792 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.202472856 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203170482 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203917833 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205171358 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.200330322 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.204920715 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.209670103 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.221996936 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.201599313 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201071295 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.203933414 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.200368681 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.19878737 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.201163596 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.199828381 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.200830454 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.200810226 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2074556 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216386719 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.20640812 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21868354 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.201250611 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.196571833 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.200178623 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.20057545 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.201190768 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.200018369 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.199707445 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.197034201 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.199249757 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.203028517 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.203664522 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199999987 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.197134199 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.203436895 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.201890907 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207006377 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.220450208 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.203834033 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.206845636 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.210124564 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.229007829 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.223196709 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.202177156 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.200770231 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.209564023 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.220267336 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20855352 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.217845661 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.19971643 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.200233852 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.207056377 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23075831 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.223873939 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.20234106 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202626581 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.201555851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.201495308 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.201811482 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.209124718 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.222560647 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.201710457 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.202306076 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211446849 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.21974542 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.201555459 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.202352351 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.202813026 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.202386793 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.202992854 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.21227082 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.221104983 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.203244507 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.202029339 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.202415608 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.204671607 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.203741009 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.202115639 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.202809081 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.200903296 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.203137827 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2037323 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.206155121 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.209465376 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.203063068 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.203735638 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.209268351 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222462799 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203385996 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.208701056 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.203849317 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.205000137 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.205666812 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.208625963 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.202174576 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.206210027 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.211268072 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.204617962 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.204887214 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.203506886 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.204609515 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.211784823 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.22588609 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.204700643 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.203462767 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.20962769 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.21359024 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204871751 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.206834516 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.204409959 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.201770232 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.202440576 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.204984348 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.204969961 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.205796667 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.20460315 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.205252831 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.202921199 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.204738916 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.204770799 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.205577221 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.205695089 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.206257257 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.20574381 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.207422418 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.205501913 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.207452857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.211152528 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.224132436 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.206024166 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.206316096 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.203636844 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.205619112 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.205384502 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.206918151 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.205103276 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.206452281 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.205815324 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.206373512 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.207750063 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.206273897 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.206356481 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.20730326 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.209666776 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.207135283 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.208822493 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.20687553 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.203992846 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.206658442 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.207033232 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.206605199 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.20646129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.205187022 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.211006934 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.213342512 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.208671719 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.208600926 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.210860912 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.209011807 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.208165299 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.208984364 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.210911621 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.214170008 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.208536543 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.213525216 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.227670475 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.209663704 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.209619813 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.208806959 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.20738297 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209288762 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.211502601 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.216654974 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.219726409 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230463077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.208623995 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.211578209 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.211246248 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.212231649 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.212149984 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.209040482 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.210285838 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.20935254 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209073975 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210604771 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.211203205 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.21040522 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.210911316 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.207817036 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.207406609 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.206052254 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.208040835 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.207923247 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.207272763 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.204154248 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.208225234 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204877877 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.20552761 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.203811276 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.204778953 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.204864362 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.205163809 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.205315463 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.211093842 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.203128148 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204557554 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.204681578 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.203413979 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.202075046 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.204723773 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.205555418 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.202887694 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209408565 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.223220593 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.203838525 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.209894625 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.222564659 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.203975615 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.206793675 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.204958923 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.201375756 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.207355323 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.212065745 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.204628508 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.205730353 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.204822459 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.204870406 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.206096359 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.211543806 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.220447474 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.204480155 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.204830553 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.207000396 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.202449179 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.206003596 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.205992732 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.205982072 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.207301786 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.205543763 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.20589201 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.206528693 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.206419434 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.206810131 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.206995358 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.208434472 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.213542987 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.211713233 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.20602831 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.207789488 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.208430146 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.209819223 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.205159263 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.207587898 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.207182643 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216547689 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.228844298 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213367533 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.225863459 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.207859291 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212383641 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.22582935 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.210266935 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.206706085 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206882362 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.206281599 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.207170463 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.205572212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.20791206 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.206302743 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.207894389 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.208042651 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.211068261 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.207983109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.208163801 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.208829481 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.208371738 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.209936442 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.206866459 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.208530341 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.209955993 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.208702042 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.20754771 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.207489476 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.214472402 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.226298713 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.209302166 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.207492764 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.208454756 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.207630466 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.209179871 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.208601883 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.212258952 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.214667389 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.21120334 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.215395732 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.210377971 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.21805957 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.20857316 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.212575208 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.214576467 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.206562617 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.207961451 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.208858268 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.210054379 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.215419488 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.229044309 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.211765637 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.213124667 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.210097554 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.210077058 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.211827117 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.209685908 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.210748281 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.210071415 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217257926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.229122075 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.21313891 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.211613894 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.207881744 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.212226849 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.211568112 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.209535352 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.213099571 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.211410255 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.21030886 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.211284675 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.210488241 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.211024114 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.211258937 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.211263876 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.209115117 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.210569104 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.217805371 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.231321516 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.214897229 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.211913842 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.219891029 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229691112 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.217916879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.230303707 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.211777785 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.21296839 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.211320685 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.213736042 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.210834481 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.212651268 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.21321234 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.213883061 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.214160807 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.211623564 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.215060474 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.212569579 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.213297463 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.213248935 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.22137708 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231706173 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.214123175 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216540654 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.210576759 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.214461067 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.216421406 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.212926291 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.212315634 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.215003925 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222139967 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219692138 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.212263981 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.213099769 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213572021 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.213601367 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.213218939 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.213746166 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.21414758 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.215218727 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.214790396 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.214831393 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.216833657 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.213389075 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.214648646 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214595074 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.215403456 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.222383297 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.232965591 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.214961435 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.214514863 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.215684665 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.213406642 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.213466064 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.215774 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.214981146 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.214573547 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.215175789 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.220674648 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.219804472 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.216609331 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.214014296 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.215008666 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.21446074 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.215343006 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.216223084 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.215741176 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.216287611 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.215508048 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.217873736 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.217239281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.214285517 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.215767263 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.215886095 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.216308091 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.217526671 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.221197326 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.215603325 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.2138871 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.2156612 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.216374663 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.215008269 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.216711135 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.222893353 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236424491 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.22463462 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.223016461 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.220423335 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.216414831 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.219044432 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.222259835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.216098477 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.21695219 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.218660274 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.217278892 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.216538331 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.219599336 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.217432487 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.222398064 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.235112372 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.216109314 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225051268 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.235417855 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217733451 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.218092576 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.221625498 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.218138027 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.215336945 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.218646292 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.216957498 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224252208 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.236043997 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218267866 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.220069713 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.217833749 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.218496364 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221205936 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.218087921 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.219648366 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.21571874 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.218214126 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.218578639 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.219886015 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.215403336 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.218288626 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.21816337 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.220966271 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.223514781 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.21645235 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.218971529 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.21832803 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.219198716 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218704701 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.219032823 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.21632538 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.217505735 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.218796337 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220555308 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.219048905 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.220747723 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.218744879 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.220708323 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.218511306 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220328728 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.222524504 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.227952223 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.225716688 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.217122206 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.219357109 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.220180079 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.222270756 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220084316 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.222887342 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220831627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.220484544 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.221327473 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221248683 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.220322492 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.222542543 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234325278 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.238547376 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220088827 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.220593915 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223402316 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.221836656 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.217762363 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.220912614 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.222152139 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.223250982 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.227691436 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.222127974 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.226843529 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239610346 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.223303227 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.224115921 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.22303619 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.227651676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.223591735 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.221546166 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.223009369 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.226079689 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.234907625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.222512374 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.230483761 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247380179 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.240268507 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.222486529 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.22190961 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222692473 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.22314026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.224043847 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.223671146 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.223238334 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.222254482 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.2231754 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.223266777 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22666112 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.223384996 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.224489222 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.222914543 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.222160619 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.224639791 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.221029883 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.224265424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.223874115 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.223683546 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.223884893 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.224029317 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.223742742 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233917914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.24709899 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.224147086 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.224831851 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.222132263 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.227219426 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.226533892 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23207383 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.230172847 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.224447963 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.224879138 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.225716642 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223609056 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.224914937 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.22533845 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.22351433 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.223452117 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.222054608 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.23571462 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246913716 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.228823992 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.225009011 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226358994 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.224957095 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225409174 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225038808 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227539764 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.22944758 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.228484943 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230484415 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.228073625 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.226125797 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.230793544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.231896363 seconds)
  done (took 724.350301733 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224252311 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223234572 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223059393 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2234067 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.223718563 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223948182 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22367133 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224193384 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.222735128 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.224165744 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.225976558 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223498717 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.224942439 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224078278 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.224922286 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222767754 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223757098 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225052262 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223517785 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223187032 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223179558 seconds)
  done (took 26.844908731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.228255723 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.224573493 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224958332 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227077102 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224484691 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227021383 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225321559 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226877744 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227761328 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224791125 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.22786495 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227128198 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.225400432 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.225618925 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224466509 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228150814 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.227601243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225782756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.226769392 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226880488 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226878581 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225948026 seconds)
  done (took 28.123471203 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.22913237 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.230372019 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.227920115 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.225221225 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.229197205 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.225211422 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.228813018 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.229280464 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.228706847 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.22866316 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.228627682 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.230029694 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.234137024 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.231469726 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.229937765 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.229195634 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.372350721 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.229677526 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.230116747 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.230452444 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.22793072 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.233751457 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.245097366 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.226547302 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.22811138 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.230546427 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.230258225 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.22918203 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.231150777 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.230952417 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.234395913 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.229781321 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.229909769 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.232090374 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.231111199 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.232064771 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.233648615 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.230811169 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.227738149 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.231224864 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.240928639 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.247187155 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.232703788 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.236653724 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.249525874 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.231723334 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.23504809 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.237050849 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.229573026 seconds)
  done (took 61.641424211 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.231503392 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.230744811 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.228799406 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.23070884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.231103816 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.23224307 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.230627966 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.230382435 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.228681415 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.229091707 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.23178752 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.229180929 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.229866399 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.231276767 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.232328558 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.229938446 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.230022279 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.22988101 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.229982376 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.229956479 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.230268893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2316237 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.233685448 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.230540909 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.232798724 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.231014923 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.230692051 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.233259545 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.230309271 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.229309342 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.232465887 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.23298994 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.232594732 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.230527344 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.230520624 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.233604792 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.233011268 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.23024402 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.232861261 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.229705047 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.233608945 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.232981161 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.233056887 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.234339696 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.231793056 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.2314917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.233143607 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.2314138 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.231327895 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.234542299 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.234933231 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.231729082 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.23447799 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.233000859 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.234370129 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.234364499 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.232413405 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.232904443 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.235215638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.232141934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.232205237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.23534653 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.23311874 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.235636378 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.235472383 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.233948552 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.232535508 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.236326365 seconds)
  done (took 84.928841692 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.23702804 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.235375349 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235981178 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23654041 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237222561 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.236025978 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235886672 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.23673991 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.235768535 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.237067647 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236327299 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.236560512 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.236013476 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.235381536 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.235743571 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236460666 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.236565282 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236420555 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237372477 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235414816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.236963706 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237187527 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236545261 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.23574246 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236649646 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.236184115 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236616242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.237251729 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.237088421 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.237175636 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.238203556 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.237449394 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.235812797 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.235967005 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.237208885 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.238157392 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.236592623 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.237482742 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.238898919 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237473102 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.237615101 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237603031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.237584803 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.237366168 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238255342 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.237640291 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.238347192 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.237362124 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.238130775 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237872758 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.239502687 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238485581 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237593167 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239086869 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.237215393 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.238713131 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238775005 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23930355 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23837975 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.238080029 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23948371 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.237982198 seconds)
  done (took 77.860141229 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239230713 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.23909877 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.235992644 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.236676595 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239057138 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236469511 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238775121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.239342829 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238615441 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.238803563 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239194072 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236606564 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237329222 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239576456 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237305195 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236534623 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236993009 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237746382 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239557434 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238196395 seconds)
  done (took 25.916315861 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.23697371 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.239683036 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.238176356 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.238185534 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.239989235 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.237350393 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.24124361 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239795997 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237890062 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240896553 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.241376174 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.240543131 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237698206 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.239582538 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.240164648 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.239372263 seconds)
  done (took 20.985077034 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.239230455 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.241420953 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.240911042 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.241194462 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.238827584 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.238333495 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.241105733 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.237785187 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.238534539 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.240883202 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.241523939 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.241671648 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.241591766 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.241888659 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.239804414 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.242331595 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.238958801 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.240058794 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.242791246 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.24309839 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.241295683 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.24004458 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.241708334 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.24165802 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.239283966 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.240897496 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.239747487 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.241184177 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.241109217 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.241874925 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.240376803 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.240465928 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.240476914 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.240832153 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.243458498 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.24075866 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.243490131 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.243334661 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.242647643 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.244175599 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.243570812 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.240992859 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.243531786 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.243280959 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.240878371 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.244142695 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.24174416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.241638893 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.240974643 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.241628038 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.243702353 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.244845579 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.244650313 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.243822775 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.245299974 seconds)
  done (took 69.445047885 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245862533 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245040212 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.240621063 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.2453274 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.244527274 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.241812337 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.245482003 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.243782769 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242219717 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.243556008 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243357564 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.245829817 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.241796403 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246622753 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.242743807 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245472207 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24307299 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.242525824 seconds)
  done (took 23.550301708 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243482733 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242705792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.245636073 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.24206192 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.241640575 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.246860863 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243931178 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.246287535 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245263617 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243242091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244465828 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.246455863 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245522149 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.246753962 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243088225 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243161332 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.246583084 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2473222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244092019 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243531 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.24702734 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247091477 seconds)
  done (took 28.546946898 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.246037166 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.245700263 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.245569066 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.261442733 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.261352308 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.267615992 seconds)
  done (took 8.68916497 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251286089 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247198265 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.245156654 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.246575121 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246445298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244838063 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243900745 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244833497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24786703 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244848811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244965486 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.247018688 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247850329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.245650598 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2470192 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247870487 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.244995592 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245172279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246108543 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246743105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244569042 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247907431 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245671754 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245432172 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24594987 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245862148 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248544869 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.246005038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247231453 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247832887 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248351313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246566817 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247745527 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246294452 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249390396 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249362906 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.245425404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250303547 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249199407 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246359942 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.249435201 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249260939 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249216436 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247235682 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250221307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2462363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247237196 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246543708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246062419 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251094491 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25077884 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246923703 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250047641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249715853 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250879502 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249581277 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.247365633 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.247259616 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250764867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247924792 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247364119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250160388 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24813064 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247903155 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250844967 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248807973 seconds)
  done (took 83.521834799 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248098482 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248431222 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248001813 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249511188 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249133818 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249016378 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248484634 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249144502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.248006146 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249999037 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252802493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.249031169 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249402193 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24970507 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248549489 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248673095 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2496091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.248944736 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248906527 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251790783 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249452182 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248413345 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249367738 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250036038 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250378786 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25300397 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249393808 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24911191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249584348 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.249463726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249525972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250371765 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249680407 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.249891802 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249766807 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250617079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250619115 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250819612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25140146 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253042279 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251020101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254397302 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25034163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250477409 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252183541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250947953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.250789973 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251669151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250960328 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250736133 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.251679721 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252603521 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252413876 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252074013 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250996555 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251079317 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25185833 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251618682 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251006406 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254254711 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251952229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252193766 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253963241 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252224529 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252246207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252462936 seconds)
  done (took 83.705564786 seconds)
done (took 1697.699070432 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.256294154 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.323177709 seconds)
  done (took 13.749360474 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.415533286 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.369304935 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.253531309 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.26248848 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.254040354 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.263952552 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.276902989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.25402876 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.25332079 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.254295407 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.253687096 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.438295924 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.307437057 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.253648042 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.254119538 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.349063485 seconds)
  done (took 41.885451215 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.277502182 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.259823926 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365861199 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.280335083 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.279306952 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.438424324 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.316201305 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.259584685 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.421350182 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.295982052 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.738056347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.278481262 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.258108677 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.313471682 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.276349333 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.4364433 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.500595674 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.743428114 seconds)
  done (took 28.909801976 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.683032612 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.28914045 seconds)
  done (took 9.143350929 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.292978017 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.269434017 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.274674978 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.279182318 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.268140115 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.268003756 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.2673045 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.259823667 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.295728006 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.263767061 seconds)
  done (took 63.911787517 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.27717653 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262919871 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.259420256 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.258242623 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.251302454 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.267842932 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.258612609 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.255762653 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.696736674 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.386121922 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.266790254 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.267256923 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.276979342 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.260984217 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.256887207 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.294230687 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472175713 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.257888626 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.257012364 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.264316827 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.259704956 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.393056567 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.304701429 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.265107807 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.38039184 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.694017952 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.270367412 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.266193319 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.443666047 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.259039742 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.259017124 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.260395254 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.260978623 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.873419921 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.755976317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.273724307 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.283556662 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.267587845 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.256815956 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.476605313 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.262038773 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.265957827 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.253237008 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.763875515 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.391422459 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.380263791 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.460053119 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.285459542 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.261512261 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.319489583 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.268312129 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.261244672 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.28923359 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.002863583 seconds)
  done (took 107.192001153 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.270356898 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.642052842 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.420417397 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.28064324 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.038588978 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.03608542 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.276412795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.528246984 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.309124162 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.255245064 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.543959821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.750341718 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.274678334 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.296894082 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.832532677 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.333603492 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.25762863 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.042781863 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.26972804 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.256933944 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745094159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263856823 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.25516088 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.514274069 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.294688958 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69797446 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.581995766 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.787815521 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.272595987 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.255371946 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.712162478 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274696571 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.298355785 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.256275902 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.511952675 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.597315261 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.589170616 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.279165014 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.289363217 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.260703609 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.268875521 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.693383949 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.597890139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.272939543 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.26377178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720516408 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.273120978 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.260393162 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.265344714 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.467334615 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.113954126 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.265214014 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.585205988 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.265994968 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.621847233 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.307318352 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.289395185 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725338445 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273231733 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.434657331 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.315849651 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.259478997 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.264202939 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.260349547 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.265316614 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.592649009 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.533284318 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.26157802 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.588472951 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.723255923 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.276565814 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794908107 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.172346479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.270679959 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.329855143 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.25859021 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.835350931 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.734401864 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.301357509 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.25886088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.577082748 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278845721 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.53500208 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.283215878 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.268195324 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781874664 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.27466993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.297432397 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.260560213 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.268207208 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.041834811 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.271220791 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.54313585 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.314061095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.25911503 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.259416221 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.283547297 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.259822294 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.267902413 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.266047554 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.772496582 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.275179043 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.222590493 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283997392 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.260276648 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.26902973 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.262110165 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.260721943 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.484068618 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.845543489 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.288400792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25987981 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.260374532 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.272181815 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.502041545 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.259765555 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.553508297 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.277712633 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.268119911 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.271634719 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.025350907 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.31004025 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.261885235 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.271252305 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.143004022 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.475608413 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.287471708 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.285501088 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.262788014 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.278236358 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.48785266 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288683315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.331468169 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.264004306 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959975091 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306094895 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.297424153 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.771253914 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.273794786 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.132434381 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.292767217 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.263027008 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.546569184 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.531273192 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.436001604 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.262941462 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.288432241 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95904543 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.29151879 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409024408 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.288771382 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.256792202 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.459276506 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.439643132 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.264719275 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.921990036 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.262270371 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481015215 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.271069759 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567089091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.751798121 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.279319386 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.266041827 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962202129 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.952194339 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.949886158 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.264904106 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.536106507 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.246209751 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.74348117 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.263296174 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.27019754 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.834206021 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.27506247 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.27203722 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.264324633 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.264105013 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411218255 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436235779 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.461579702 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.263871594 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.701958336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3147417 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.26569614 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.291102782 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.265188029 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.612718142 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.319713697 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.267182317 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.276451557 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.267086169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270559595 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.724755402 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.205294983 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.2743016 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.416604239 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890396261 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.280024191 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.267414125 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.975025844 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.496234954 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797484567 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.33513381 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.561391487 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.288333393 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.304612179 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.972297995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.355428877 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.724360576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284132124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.276029902 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852923853 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.282756963 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.40864651 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.267064451 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.267612066 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79970985 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.282172155 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.268627284 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.493044912 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293929253 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.536024967 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.27517627 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.317148835 seconds)
  done (took 1095.642784064 seconds)
done (took 1361.603584874 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.267784091 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.270165697 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.259852476 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.27598501 seconds)
  done (took 26.261031292 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.277354585 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.274479939 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.275069101 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.274770155 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.276054621 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.274633856 seconds)
  done (took 8.839486211 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.30448564 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.269224215 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.275738172 seconds)
  done (took 19.037674794 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.470114461 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.55579174 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619109891 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.439614623 seconds)
  done (took 10.272856517 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.278092033 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.275761652 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.275100932 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.277144515 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.278111109 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.279445523 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.277412197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.276980356 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.279493051 seconds)
  done (took 12.685056028 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.067689034 seconds)
done (took 83.351709916 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.881348786 seconds)
    (2/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.010640875 seconds)
    (3/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.254386647 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.256734612 seconds)
    (5/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.031743974 seconds)
    (6/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.265895305 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.344508579 seconds)
    (8/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.629703359 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.279570744 seconds)
    (10/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.105176088 seconds)
    (11/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.055312265 seconds)
    (12/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.425227097 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.060623173 seconds)
    (14/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.956429918 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.605913533 seconds)
    (16/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.258222192 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.529542675 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.634612279 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.449847463 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.310815921 seconds)
    (21/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.565806051 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.248507247 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.747995217 seconds)
    (24/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.297019258 seconds)
    (25/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.251164531 seconds)
    (26/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.660890216 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.37393779 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.680987485 seconds)
    (29/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.29404228 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.675655491 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.691531464 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.438178717 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.543224439 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.818678025 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.271355236 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.27370955 seconds)
    (37/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.358668953 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.274581512 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.400396357 seconds)
    (40/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.816258332 seconds)
    (41/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.282986451 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.003192 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.97393164 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.400747048 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.007513269 seconds)
    (46/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.29020321 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.684216764 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.263553514 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.289097786 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.255725311 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.314991284 seconds)
    (52/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.630416037 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.636811162 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.348166121 seconds)
    (55/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.340948683 seconds)
    (56/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.36228753 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.253517613 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.414431708 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.340953602 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.528913899 seconds)
    (61/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.278330655 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.388620308 seconds)
    (63/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.253809525 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.345192995 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.329310818 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.17053602 seconds)
    (67/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.332993613 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.287200865 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.904606815 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.302151455 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.27409623 seconds)
    (72/309) benchmarking ("sort", Float32, false)...
    done (took 5.296402845 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.087486499 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.272452652 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.254945255 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.683098607 seconds)
    (77/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.653316176 seconds)
    (78/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.306498903 seconds)
    (79/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.479315561 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.386742069 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.510670458 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.678205373 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.744203181 seconds)
    (84/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.804095218 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.445427169 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.300335283 seconds)
    (87/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.628795014 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.318697621 seconds)
    (89/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.302962794 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.230095516 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.638528165 seconds)
    (92/309) benchmarking ("sort", Float64, false)...
    done (took 5.577306825 seconds)
    (93/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.255645029 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.540415629 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.338930356 seconds)
    (96/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.254757496 seconds)
    (97/309) benchmarking ("sort", Int8, false)...
    done (took 4.380457511 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.154505822 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.623195672 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.811147624 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.291166247 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.268901318 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.099074281 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.302988663 seconds)
    (105/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.987757964 seconds)
    (106/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.426935796 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.570029665 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.492545174 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.342574545 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.178117543 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.881345709 seconds)
    (112/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.400141095 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.842357205 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.276335872 seconds)
    (115/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.372814316 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.256387425 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.382701091 seconds)
    (118/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.302340332 seconds)
    (119/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.619084395 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.694939136 seconds)
    (121/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.291803167 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.327545121 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.251068461 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.02122571 seconds)
    (125/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.503444068 seconds)
    (126/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.268635504 seconds)
    (127/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.358850749 seconds)
    (128/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.276401938 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.797247836 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.315860705 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.564019008 seconds)
    (132/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.873240161 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.540736843 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.007159082 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.53413353 seconds)
    (136/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.278300859 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.439856639 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.26152705 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.168437071 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.366684227 seconds)
    (141/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.292961954 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.397764681 seconds)
    (143/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.375511454 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.303528782 seconds)
    (145/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.278413908 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.279270691 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.386823057 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.36300208 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.01530509 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.304897897 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.047435292 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.259248648 seconds)
    (153/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.319398688 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.40466303 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.301343461 seconds)
    (156/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.04657578 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.305461746 seconds)
    (158/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.382362288 seconds)
    (159/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.259052482 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.376490668 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.451812825 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.639638482 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.121818836 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.122802703 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.321973554 seconds)
    (166/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.260153292 seconds)
    (167/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.259781658 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.091614376 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.295428381 seconds)
    (170/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.470996497 seconds)
    (171/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.260734372 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.913105423 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.304993808 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.454301981 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.279814986 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.888399459 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.040340613 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.303098487 seconds)
    (179/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.263714476 seconds)
    (180/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.29536875 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.349891753 seconds)
    (182/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.386526494 seconds)
    (183/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.261012362 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.322845727 seconds)
    (185/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.321554738 seconds)
    (186/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.388873895 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.333700921 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.708200496 seconds)
    (189/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.424815389 seconds)
    (190/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.311334085 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.618635846 seconds)
    (192/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.265290836 seconds)
    (193/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.302128689 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.297107559 seconds)
    (195/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.664811559 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.347114667 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.013637723 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.884831946 seconds)
    (199/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.26184904 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.9152782 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.367767123 seconds)
    (202/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.281977432 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.268840771 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.307634556 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.289500302 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.204554512 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.024188352 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.294313143 seconds)
    (209/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.294742453 seconds)
    (210/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.826466793 seconds)
    (211/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.513233545 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.489385796 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.281184531 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.96080797 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.294699205 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.675035457 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.390297953 seconds)
    (218/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.464778338 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.26425291 seconds)
    (220/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.487165321 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.323262608 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.331340095 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.292294229 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.487437634 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.320321444 seconds)
    (226/309) benchmarking ("sort", BigInt, false)...
    done (took 6.282505491 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.136436914 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.264422442 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.339818975 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.152730648 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.718711774 seconds)
    (232/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.264144879 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.109578484 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.693151744 seconds)
    (235/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.533635699 seconds)
    (236/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.270697521 seconds)
    (237/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.264663237 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.274878558 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.308938172 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.687451682 seconds)
    (241/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.324836641 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.309599764 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.81271049 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.723024519 seconds)
    (245/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.295494022 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.265669999 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.28581857 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.795731565 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.294588563 seconds)
    (250/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.293457629 seconds)
    (251/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.265101202 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.348671749 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.500536009 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.888147388 seconds)
    (255/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.494823154 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.309821043 seconds)
    (257/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.266287372 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.496002884 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.293472889 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.013066392 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.319542946 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.284940806 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.386143064 seconds)
    (264/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.851007804 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.304434984 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.669528936 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.287521676 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.338499401 seconds)
    (269/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.660664663 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.313181751 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.311665923 seconds)
    (272/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.285586826 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.377489283 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.690638837 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.140089376 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.282229725 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.874214564 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.266308762 seconds)
    (279/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.296482661 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.311027792 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.276566356 seconds)
    (282/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.537287995 seconds)
    (283/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.485263354 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.385921254 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.303696887 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.387307653 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.368545422 seconds)
    (288/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.299646851 seconds)
    (289/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.275268707 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.399098749 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.681556295 seconds)
    (292/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.637599942 seconds)
    (293/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.064801638 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.118168696 seconds)
    (295/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.384185648 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.268509975 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.338829528 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.871826667 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.352442818 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.268654776 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.197935595 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.277071817 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.314733578 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.204235602 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.863938075 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.319596284 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.268142518 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.39238289 seconds)
    (309/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.426021228 seconds)
  done (took 1015.777102784 seconds)
done (took 1016.968437493 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.321272165 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316949992 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.297490654 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.31906926 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.409989326 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.321480767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.308657675 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.301422743 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.346471689 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.347797939 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.298464021 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.320648847 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.301182721 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.299264363 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.298217077 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.314080637 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.305220633 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.301727474 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.316942928 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.309020323 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.316265899 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.298446815 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.349724273 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.322604421 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.303481549 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.303045305 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.303976232 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.319028655 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.412718391 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.303787185 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.303752149 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.312994191 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.304598739 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.298444348 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.295575431 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.320097226 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.31222858 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.311341722 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.304705228 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.331590146 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.693415729 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.316891567 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.302149083 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.301440197 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.302337676 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.304730465 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302917465 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308540967 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.315204305 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316471173 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.684510502 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.331923636 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.306294411 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.302633524 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.312718416 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.30157871 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.304802252 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31910915 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.321328749 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319797168 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.292018579 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.308026859 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.304172755 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.319706628 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.309197447 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.723744442 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.312738981 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.307320321 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.697040051 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.323460762 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.721700319 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.327765362 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.303542903 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.316572794 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.334906637 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.304716595 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.298622926 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.302990181 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.31061764 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.301712942 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.31361332 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317584514 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.308279481 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.304462395 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318807759 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.32825995 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.313327369 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.306272449 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.313731134 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.323612685 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.31240423 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.315734222 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.307418906 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.300481513 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.313713767 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.309183333 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.306774389 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.30688772 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309934807 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.315990009 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.702788196 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3473405 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.30192802 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.300693853 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.303954749 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.318285611 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.69726397 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.321527536 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.327299505 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.353881264 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.306293521 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.298539239 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.317435638 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324282261 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.314678851 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.309945594 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.302530855 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.299228809 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.719057805 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.345219825 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.307982485 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.304498648 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323445357 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.307869117 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.302837641 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.313757816 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.309416388 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321157085 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.427974631 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.317710671 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.337624791 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.305993987 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.30991375 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.331039845 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.324735447 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.338906414 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.310390859 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.324815506 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.322665443 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.304531304 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.318019952 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.318471801 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.308478071 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.312805011 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.302006587 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.330489663 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322213387 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322728091 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.328143646 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.427895785 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.306521664 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.30280031 seconds)
done (took 220.392168642 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.368263399 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.296036961 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.39656693 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.304408265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.404513521 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.405061755 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.303454646 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.303650754 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.303032122 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.682276394 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.302180345 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.312047601 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.299108561 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.303929561 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.385749847 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.305062447 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.303260557 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.643960743 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.305872719 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.376281662 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.306095415 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.303455806 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.305411427 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.684242117 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.307034929 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.304227519 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.377551934 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.305507224 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.651320417 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.301517424 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.306619785 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.676926368 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.395985997 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.323832179 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.315750741 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.314863753 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.40638622 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.324087016 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.386845138 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.388256126 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.398649233 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.345794372 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.303445435 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.301531299 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.309636367 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.308364005 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.305332595 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.334440996 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.305520875 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.306757063 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.647236699 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.316495518 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.315025364 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.305816889 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30579988 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.328138428 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.305758877 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.30883 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.397161561 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.308262218 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.369740524 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.6871205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.684804359 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.30805496 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.309817263 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.307814089 seconds)
  done (took 146.633324601 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.374011588 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.380374592 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.419684926 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.324655478 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.359356642 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.424726513 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.325986355 seconds)
  done (took 10.828176537 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.31475704 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.309164822 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.357704419 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361953167 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.309028154 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.456187661 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309796081 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.319769217 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.306608257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.362297473 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.310587038 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.308926804 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.316355736 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.302251142 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356489394 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.322323496 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.425187839 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.311110435 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310820679 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.459735833 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308102133 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.316649565 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.361379017 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.323276461 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.311236304 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.315980344 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.878621102 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.310891494 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308738272 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.310648669 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308365967 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.349196926 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310444215 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.310877968 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.308495183 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426891833 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.311529344 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30954976 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.311481898 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.307200387 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.31284278 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.31212089 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.312411163 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.309264709 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.312951915 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.333467099 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.313008039 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.312678382 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.31149479 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.310782696 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.36247248 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.312161181 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.309431847 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.310750313 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.367431469 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.319284798 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.312633864 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.309235425 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.313062309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.310041258 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.463184962 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359844032 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.312452067 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360190806 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312832086 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.312513735 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.312039038 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.3126121 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366661246 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.312832953 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.362109242 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.309946487 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.466802041 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.335847412 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.315263137 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.315957999 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.315672557 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.313354961 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.309159631 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.318786884 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.310984763 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.313867533 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.319606125 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311485343 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.311347493 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.41549527 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421896938 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.310983151 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.326474767 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.320904029 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.311262382 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.367136537 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.313958856 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.31233867 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364944066 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.429266753 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.367297393 seconds)
  done (took 151.038117742 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.320398475 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.323097613 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.316195956 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.330504991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.314600521 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.314092401 seconds)
  done (took 9.144282398 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.318711219 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.315969742 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.315311242 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.315802529 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.31568968 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.315798153 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.316693351 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317706984 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.320025231 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.316412195 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.31631441 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.316519417 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.317575602 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.317714642 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.317143446 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.316511548 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.316058887 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.31330586 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.31522484 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.315866838 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.41220226 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.316662979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.316548806 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317955325 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.320366872 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.318001808 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324644418 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.316217496 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.316556922 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.322063587 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.336943463 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.317722447 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.318459009 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.322479159 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.322033054 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.317371193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320231474 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.318989606 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.314264826 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.317367663 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.318357905 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.319058623 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.318348901 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.317957933 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.32016779 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.322368423 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321850815 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324750821 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.31867009 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.319091784 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.318688127 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.317402321 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.318489956 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.319066626 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.319180273 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339551647 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.321670521 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.319654447 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.319825685 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.321018147 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.320143264 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.319997839 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.321963587 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.32285416 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.325757032 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.32016336 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.319496586 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.324099981 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.321111529 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.734958621 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319958675 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.317240652 seconds)
  done (took 97.728570998 seconds)
done (took 416.588050222 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.608421924 seconds)
  done (took 7.837894027 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.455013653 seconds)
  done (took 7.686075673 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.374525361 seconds)
  done (took 21.608190968 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.382731372 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.36397656 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.335502836 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.345659777 seconds)
  done (took 26.658534291 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.621479852 seconds)
  done (took 7.851347645 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.313259987 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.315658029 seconds)
  done (took 13.859779953 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.847957708 seconds)
  done (took 8.078454305 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.368322385 seconds)
  done (took 7.602837214 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.32819443 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.347129735 seconds)
  done (took 14.164107211 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.296001437 seconds)
  done (took 7.525996551 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.090998845 seconds)
  done (took 8.323244078 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.324190315 seconds)
  done (took 7.555200191 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.38781139 seconds)
  done (took 7.619146253 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.225459705 seconds)
  done (took 9.457334492 seconds)
done (took 157.058147263 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.315469715 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.315658012 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.315120287 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.314906269 seconds)
  done (took 26.493622859 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.355720979 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.354969681 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.356948401 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.36613022 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.359738364 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.355932087 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34861165 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.349023459 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.365408989 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.359924854 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.358124675 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.35899243 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.35655058 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.348253496 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.357715595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.357958729 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.366262897 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.358117163 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.349085283 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.359610311 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.323927562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.366753239 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.360361896 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.324161395 seconds)
  done (took 33.751898069 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.846420214 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.395477227 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.477585019 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.374823376 seconds)
  done (took 7.327705904 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.375393113 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.376835907 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.388748327 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.427527398 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.453780103 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.385851249 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.350604804 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.345336408 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.331905043 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.37703899 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.452458566 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.393729517 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.459969022 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.32452303 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.510382742 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.323638043 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.324648397 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.377032687 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.427447541 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.442961709 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.324571901 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.376786703 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.381100631 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.393664935 seconds)
  done (took 34.560783919 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.324802348 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.342958683 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.324345907 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.323646621 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.332535197 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.325986145 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.324793525 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.325120092 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.323523313 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.330481444 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.324971889 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.33757104 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.324884055 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.325321637 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.331788215 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.326725085 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.330884535 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.325302818 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.325575551 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.331472573 seconds)
  done (took 27.797448202 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.319432415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.173852473 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.671933409 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.575630123 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.318679872 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.321987083 seconds)
  done (took 27.617885081 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.395940561 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.542009371 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.327153019 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.678677285 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.771070793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.344403383 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.326981718 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.563192941 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.878105045 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.872324197 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.384856299 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.393232274 seconds)
  done (took 19.713991161 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.321008027 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.34583861 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.341489484 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.345730003 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.380997294 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.348342727 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.33427352 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.320879992 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.389599864 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.402365826 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.346703661 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.382357112 seconds)
  done (took 37.498949697 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410106112 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368846621 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.207957913 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343832947 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047012893 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.533931791 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342230265 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.809541554 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.330155846 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597157583 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323890212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420545675 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578911689 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331488049 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331615748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.297411894 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573571056 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796233105 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324223675 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.399655569 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34946889 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.335660339 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.478814601 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.35355925 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534869973 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.458368905 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.626126108 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.109922448 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617200603 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.335915792 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33549682 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323694483 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598454087 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982015725 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439333729 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33516666 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322634089 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.972735187 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.30853819 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.320829218 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272551696 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335293192 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335500061 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324600457 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.259431432 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336094122 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795184189 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.331561977 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.036863035 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.324925104 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336785409 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419935707 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.329246426 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.895071038 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400407486 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.339551589 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.323962605 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416128288 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917574144 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.775121026 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.346398265 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.267707234 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329000555 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.406229718 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955896323 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.446515441 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.33079815 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.330648898 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26239518 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.373997438 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345167664 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47406348 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.348955974 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976866313 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010548391 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346018648 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.257302045 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861217762 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335580901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.269772152 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554432742 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.103001688 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262801439 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.274008449 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.261605095 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018164687 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337185928 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.694038947 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34659579 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805092545 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337211985 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34918544 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351627141 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.550294615 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.205828411 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328485512 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.307269108 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470404224 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350250375 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786577575 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263450554 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.331984844 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.58431535 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.539747388 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333677779 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.321726607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569990863 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336599087 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.352467475 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334995453 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.348549913 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.904198468 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.35881189 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782913892 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355272847 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.10452114 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044586805 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341704862 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.438823099 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.342230319 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584173634 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.082118003 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212261487 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397770702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33215436 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.330476401 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.422757463 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.923050193 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.213076635 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.326635623 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336522918 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.349550557 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.331806481 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275606846 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.334938879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345714559 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.111879006 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553064429 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341757087 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615378513 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264340135 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478645189 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341361107 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.553799876 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.527065616 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.348305517 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590356818 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341211122 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346987929 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351286972 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349652731 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43323163 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352446851 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.339053075 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597338744 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.334607557 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.335789666 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.428163764 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.113033232 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33631027 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.336909203 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352941303 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921970838 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327811101 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338280118 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22261381 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.345637267 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400378228 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338097668 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.341827702 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.130172625 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357095307 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.34644616 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.338048759 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556500124 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343353706 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.423626755 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414790653 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.541973346 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918031807 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365108088 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.268432098 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.043932308 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.026425411 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332706966 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.533053501 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33532336 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343822888 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343106742 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349650773 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.919359658 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359561907 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.313627236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.349129731 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.345081879 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.340637067 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333873019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.121524432 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80403933 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357341391 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.351611536 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477071827 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.347818115 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268053962 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.85138256 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340952366 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334461186 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.10947579 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369117981 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.298870959 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838241829 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593935675 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344429825 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354324929 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.47081118 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.377786759 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.334877014 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311162051 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370066937 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.350953797 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351676956 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.346341413 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.364657471 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.70700108 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904176778 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056554601 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889885611 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274740622 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.349760954 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.242384935 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.799069283 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269690401 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.993222761 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522655089 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.815080241 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28068268 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550929229 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.544125284 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116509176 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355249336 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562783783 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252045465 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.335057476 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375552554 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548436957 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371096699 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349119833 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273781741 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.618320071 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599861631 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331954393 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424959496 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802300839 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330936155 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.143770844 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.390431731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.677059809 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529544324 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.891188185 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724104744 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345151672 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355068252 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8299069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34395802 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863259294 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952267767 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368714755 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.558015441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282506742 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.350180769 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.347937914 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.336836239 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.624061428 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.35694001 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.593330434 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349362912 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273042658 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352497208 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873661826 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213402627 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.343956908 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339649578 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062917623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348917241 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640627616 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.349408151 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.132177738 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360583994 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274912006 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274225623 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.031415969 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343103512 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31652391 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824695592 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.348263801 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359850932 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35453111 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192340765 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595892622 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.355608859 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.918463059 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58622772 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341447098 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38232025 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.44118369 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345159484 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.330714702 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.223482059 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577131917 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367126902 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572050506 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.252615537 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.244413694 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384064319 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560298111 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223319506 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.342252033 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590513721 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.078814742 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.362457512 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036970183 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384245859 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344327116 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.364027613 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346706203 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371936443 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430773729 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352079547 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.35452086 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.353229335 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51555901 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353225557 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354343098 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.356536947 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437137613 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.810297418 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.123688556 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.116083685 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922334337 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089372649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94519376 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381849983 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342517103 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351260966 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277924085 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494792043 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.869512039 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618044865 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474023838 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.346898758 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375259102 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357080009 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361886631 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564616539 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619335209 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.315859281 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349719081 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138307924 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.233390525 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354755175 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.558157268 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835277772 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907794993 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470684605 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345392443 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.816438205 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625786632 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436223884 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345106841 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93734406 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.352816495 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.658043163 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.36869887 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356256043 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500245921 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354058132 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009910729 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.372974773 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.503242626 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.117829915 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.345917734 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.610562971 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.746568791 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357104116 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924123469 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061704422 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618639021 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416043735 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356863467 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.460795608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495150015 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.348132146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.244835019 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347664901 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188825125 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.058599436 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.356889823 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934765795 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628937416 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.345657299 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.349161757 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378067633 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.356994882 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570706947 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03133683 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578937357 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35950895 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351191371 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.918436732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930055896 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37863023 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283198522 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.35226729 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592834398 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611950655 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369669858 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.861624892 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.060499267 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882484293 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.321342913 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369492098 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358306045 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0504068 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930989595 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.128937871 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846590124 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.007696288 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349286835 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631369154 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.353710052 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35749574 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63442409 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.35435829 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.363418786 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369646669 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.92981627 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129406742 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.3757259 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.445738145 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.295758962 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.575649417 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414799068 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293478108 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360500829 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.529344767 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.359064796 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480099206 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36209007 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.361028499 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371174018 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.09257553 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63303259 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.357117403 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.334979053 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.333591267 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375026733 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454664725 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615000272 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357967465 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.025936092 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.700833892 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606820388 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.351465966 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.339493163 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.354890571 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351890995 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068937234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360680587 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369398252 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903694778 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.362098856 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.370377204 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.355519877 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.567274835 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563353744 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355942034 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374351467 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363978491 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376370364 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.252626489 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.120587334 seconds)
  done (took 1642.688741571 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39838995 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.376397054 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.392171647 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.401875901 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.390736956 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.474575175 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.389836859 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481963583 seconds)
  done (took 52.571840136 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.35602664 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.50312568 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.383924517 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.362988758 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.371332721 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.354033413 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.813133722 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.383571261 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.369225805 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.362749292 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.362002583 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.373783498 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.017868919 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.36294721 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.355847886 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.352252292 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.370495743 seconds)
  done (took 65.730059263 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.360919943 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.933892624 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.459390977 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.355073485 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.398920931 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.386928284 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.172350654 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.429682608 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.355832028 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.701761353 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.020103048 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.396728812 seconds)
  done (took 85.240270332 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.362171089 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.363472987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.363464549 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.36283935 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.363093141 seconds)
  done (took 8.083657283 seconds)
done (took 2070.31004893 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.602629667 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.040311807 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.970891393 seconds)
  done (took 5.280252838 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.501134409 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.549075491 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.668475507 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.674720839 seconds)
  done (took 7.658812727 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.636300614 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.738133192 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.539309912 seconds)
  done (took 6.179430947 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.75762714 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.357587694 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.37518931 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.353125619 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.360463346 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.360380539 seconds)
  done (took 20.341444822 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.35657267 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.359161458 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.356203147 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.358776116 seconds)
  done (took 6.697026141 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.333567466 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.04709743 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.333238151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.355412164 seconds)
  done (took 18.337058444 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.121908095 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.115935236 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.102059125 seconds)
  done (took 7.608300419 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.365385955 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.202200579 seconds)
  done (took 9.834847869 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.635752447 seconds)
  done (took 2.903405341 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.489187338 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.683046439 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.384095712 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.287052334 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.414970559 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.162605582 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.972616859 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.562305447 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.26280019 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.506083375 seconds)
  done (took 27.993079042 seconds)
done (took 131.196138847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.152234288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.739872859 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.561905303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.161819277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.584984865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.560711016 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.557368013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.130844771 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.632708984 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.622272578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.165391084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.583890284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.505810866 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.740412931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.505072173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.742624818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.590701338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.202087821 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.810526692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.002863607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.560471979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.760310762 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.989489706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.832902567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.599089188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.513892692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.342730787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.741854919 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.979737782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.362796318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.513726486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.177458433 seconds)
  done (took 191.198738718 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.357810778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.35697114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.356695377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.369280887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.35841332 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.358899754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.358987627 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.373896703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.357153925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.356687728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.363741305 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.357922405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.376782862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.373385965 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.377340279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.357121081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.373165185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.358004503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.35732062 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.377710974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.359191282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.376156125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.358155957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.374276202 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.384352256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.358843164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.358447768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363344398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.358796602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.357732978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.359032481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.358239667 seconds)
  done (took 204.91505045 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.361847772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.358724388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.359219981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.358568324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.357366951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.360757313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.359723172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.364727615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.358578626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.372456178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.358751059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.358598234 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.361401053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.359109466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.359983245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.370754972 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.359800526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.365370999 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.360150594 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.360130543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.377414766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.37182424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.35989342 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.376331648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.359640039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.360610284 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.378360233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.360390031 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.360618994 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.379958183 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.377513717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.381828174 seconds)
  done (took 204.942687812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.562818193 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.367478876 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.36734294 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.323951129 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.368527056 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.366923215 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.365937708 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.557313243 seconds)
  done (took 14.553769218 seconds)
done (took 616.878223191 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.671138814 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.38245334 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.573556801 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.387859257 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.148381661 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.415929261 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.387820098 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.556381193 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.294178128 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.564545265 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.587747743 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.403192265 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.728971023 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.38584473 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.645791046 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.487353106 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.284534979 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.414821768 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.700926981 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.91610827 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.660040157 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.823876742 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.578800845 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.281866399 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.747515938 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.821654472 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.094540454 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.277972659 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.405977159 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.711476633 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.99437403 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.342184058 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.449335993 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.449143283 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.505447797 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.486311807 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.319111272 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.446479561 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.58782498 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.591900405 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.895714725 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.108655914 seconds)
  done (took 92.792559883 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.353204838 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.353394068 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.352113929 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.353017554 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.353542389 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.352879226 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.352711465 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.352377073 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.353778945 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.352979172 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.354041142 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.355052315 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.352086822 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.353893389 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.354326293 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.354670627 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.352700446 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.355475993 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.354508108 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.353255307 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.353845511 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.353730527 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.354393231 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.354299819 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.354529912 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.35419138 seconds)
  done (took 36.472320185 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.372686879 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.617906679 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.780885831 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.379182763 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.373610674 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.37685216 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.450039887 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.374350193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.375445884 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.376807606 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.542986574 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.376623539 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.40654664 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.808955666 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.37680049 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.374372653 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.374640019 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.373040571 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.626832334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38328934 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.474118785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.379147355 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.450680353 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.386408879 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.396400652 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.374759952 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.378169427 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.902092608 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.395056557 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.543327455 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.163452623 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.458937811 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.852576075 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.818293757 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.160370671 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.384995603 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.375691852 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.549237131 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377197844 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.374696714 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.451443717 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.383815793 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.791303044 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.993774828 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.395904511 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.375122821 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.928636643 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.566938045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.617388799 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.383789141 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820254909 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.380371364 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.378119234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.376827968 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.617454641 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.383904949 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.374701575 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.903232525 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.409092439 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.451635753 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.385964 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.376255208 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.634869896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.377196524 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.626764147 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.379217124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.384800625 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.396647858 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.792374372 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.379638063 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.015957906 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.396231344 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.377680752 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.545808036 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.627926994 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95939971 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.398669924 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.640647594 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.871213591 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.472966492 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.384925645 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.88568637 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.474143679 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.3825882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.379822545 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.379677555 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37785116 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.430544536 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.452633284 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.943061716 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024052051 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.926983868 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.476472431 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.390077163 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.379223185 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.90795409 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.399230966 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.380466648 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.788129106 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028026799 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397522423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.386052205 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.022693418 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.399673283 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.45577335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.393375643 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.798541384 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.380051925 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.43134499 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.380035021 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386025219 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.402161603 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.457332448 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384405121 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.380540978 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.988140014 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.572068215 seconds)
  done (took 181.030516636 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.373504196 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.373415408 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.373741786 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.375013047 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.374023216 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.3816163 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.372868105 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.375083216 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381621458 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.374020089 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.374556461 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.373600481 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.375802364 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.373064436 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.405635381 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.381655649 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.986100536 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.374725611 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.375838572 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.375410946 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.173816496 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.377609952 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.374795536 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.375346925 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.377388125 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.375344057 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.378217236 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.37896537 seconds)
  done (took 153.24901822 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.382878432 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.936577113 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.401317682 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.513575598 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.402586926 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.381107146 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.510010838 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.448363315 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.401214674 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.379672108 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.379836791 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.677395377 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.383804123 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.893125911 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.582759346 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.531094912 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.896593764 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.409583311 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.381054146 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.380920587 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.513622864 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.391845701 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.681177607 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.952979612 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.41094156 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.943339382 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.37600777 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.385165285 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.382772477 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.945358751 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.408370639 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.683174107 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.469513501 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.448215226 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.961968215 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.916244808 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.907035444 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.532088253 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.392788565 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.382571902 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.38244216 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.366695033 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.940178499 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.403995115 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.385001426 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.931179251 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.405431528 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.386365047 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.391901365 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.382522639 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.44409723 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.462317544 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.703067292 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.948653546 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.48129718 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.401525658 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.516278237 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.780312781 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.386988289 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.89283913 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.367893856 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.948662297 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.405966544 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.367968277 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.385999516 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.389243567 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.533652005 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.516964093 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.901622664 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.404586517 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.890614825 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.552467798 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.384807465 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.383790911 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.387917588 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.946329964 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.911569256 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.552425237 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.525425595 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.585766992 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.380012778 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386377637 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.369299023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.462581908 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.394593916 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.949824682 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.912082366 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.405510516 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.387403203 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.387753343 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.388257101 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.561126238 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.976000296 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.481138339 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.890525548 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.706129027 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.689407578 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.390418881 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.447630765 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.405294853 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.689296131 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.388794411 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.445467196 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.820473919 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.691137242 seconds)
  done (took 164.994024759 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62793778 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.591049319 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.476300349 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.519209702 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.978176882 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.953412048 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.620247907 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.530078598 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.497788103 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.650010105 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.519973274 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.477877688 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.556023527 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.469471148 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.107560199 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.483073538 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.499881612 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.533103548 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.500186207 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.40565982 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.03395536 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.673610166 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.555693961 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.254560788 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.480164302 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.143683138 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.947996849 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.961815322 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.558476219 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.705509079 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.925489878 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.516818354 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.343814898 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.063315122 seconds)
  done (took 66.455537254 seconds)
done (took 696.267904108 seconds)
SAVING RESULT...
DONE!
